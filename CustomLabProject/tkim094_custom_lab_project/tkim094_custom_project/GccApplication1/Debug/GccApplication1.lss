
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000009c2  00800100  00001cb0  00001d44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000245  00800ac2  00800ac2  00002706  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002706  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002738  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00002778  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001fbb  00000000  00000000  000028d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c4f  00000000  00000000  0000488b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000146a  00000000  00000000  000054da  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000374  00000000  00000000  00006944  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a60  00000000  00000000  00006cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000113b  00000000  00000000  00007718  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00008853  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
       2:	00 00       	nop
       4:	52 c1       	rjmp	.+676    	; 0x2aa <__bad_interrupt>
       6:	00 00       	nop
       8:	50 c1       	rjmp	.+672    	; 0x2aa <__bad_interrupt>
       a:	00 00       	nop
       c:	4e c1       	rjmp	.+668    	; 0x2aa <__bad_interrupt>
       e:	00 00       	nop
      10:	4c c1       	rjmp	.+664    	; 0x2aa <__bad_interrupt>
      12:	00 00       	nop
      14:	4a c1       	rjmp	.+660    	; 0x2aa <__bad_interrupt>
      16:	00 00       	nop
      18:	48 c1       	rjmp	.+656    	; 0x2aa <__bad_interrupt>
      1a:	00 00       	nop
      1c:	46 c1       	rjmp	.+652    	; 0x2aa <__bad_interrupt>
      1e:	00 00       	nop
      20:	44 c1       	rjmp	.+648    	; 0x2aa <__bad_interrupt>
      22:	00 00       	nop
      24:	c9 c1       	rjmp	.+914    	; 0x3b8 <__vector_9>
      26:	00 00       	nop
      28:	40 c1       	rjmp	.+640    	; 0x2aa <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3e c1       	rjmp	.+636    	; 0x2aa <__bad_interrupt>
      2e:	00 00       	nop
      30:	3c c1       	rjmp	.+632    	; 0x2aa <__bad_interrupt>
      32:	00 00       	nop
      34:	3a c1       	rjmp	.+628    	; 0x2aa <__bad_interrupt>
      36:	00 00       	nop
      38:	38 c1       	rjmp	.+624    	; 0x2aa <__bad_interrupt>
      3a:	00 00       	nop
      3c:	36 c1       	rjmp	.+620    	; 0x2aa <__bad_interrupt>
      3e:	00 00       	nop
      40:	34 c1       	rjmp	.+616    	; 0x2aa <__bad_interrupt>
      42:	00 00       	nop
      44:	32 c1       	rjmp	.+612    	; 0x2aa <__bad_interrupt>
      46:	00 00       	nop
      48:	30 c1       	rjmp	.+608    	; 0x2aa <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2e c1       	rjmp	.+604    	; 0x2aa <__bad_interrupt>
      4e:	00 00       	nop
      50:	2c c1       	rjmp	.+600    	; 0x2aa <__bad_interrupt>
      52:	00 00       	nop
      54:	2a c1       	rjmp	.+596    	; 0x2aa <__bad_interrupt>
      56:	00 00       	nop
      58:	28 c1       	rjmp	.+592    	; 0x2aa <__bad_interrupt>
      5a:	00 00       	nop
      5c:	26 c1       	rjmp	.+588    	; 0x2aa <__bad_interrupt>
      5e:	00 00       	nop
      60:	24 c1       	rjmp	.+584    	; 0x2aa <__bad_interrupt>
      62:	00 00       	nop
      64:	22 c1       	rjmp	.+580    	; 0x2aa <__bad_interrupt>
      66:	00 00       	nop
      68:	20 c1       	rjmp	.+576    	; 0x2aa <__bad_interrupt>
      6a:	00 00       	nop
      6c:	1e c1       	rjmp	.+572    	; 0x2aa <__bad_interrupt>
      6e:	00 00       	nop
      70:	1c c1       	rjmp	.+568    	; 0x2aa <__bad_interrupt>
      72:	00 00       	nop
      74:	1a c1       	rjmp	.+564    	; 0x2aa <__bad_interrupt>
      76:	00 00       	nop
      78:	18 c1       	rjmp	.+560    	; 0x2aa <__bad_interrupt>
      7a:	00 00       	nop
      7c:	16 c1       	rjmp	.+556    	; 0x2aa <__bad_interrupt>
      7e:	00 00       	nop
      80:	14 c1       	rjmp	.+552    	; 0x2aa <__bad_interrupt>
      82:	00 00       	nop
      84:	12 c1       	rjmp	.+548    	; 0x2aa <__bad_interrupt>
      86:	00 00       	nop
      88:	10 c1       	rjmp	.+544    	; 0x2aa <__bad_interrupt>
	...

0000008c <CHARSET>:
      8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      bc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     10c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     11c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     14c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     16c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     19c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1ac:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1bc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1ec:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1fc:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     25c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000026c <__ctors_end>:
     26c:	11 24       	eor	r1, r1
     26e:	1f be       	out	0x3f, r1	; 63
     270:	cf ef       	ldi	r28, 0xFF	; 255
     272:	d0 e4       	ldi	r29, 0x40	; 64
     274:	de bf       	out	0x3e, r29	; 62
     276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
     278:	1a e0       	ldi	r17, 0x0A	; 10
     27a:	a0 e0       	ldi	r26, 0x00	; 0
     27c:	b1 e0       	ldi	r27, 0x01	; 1
     27e:	e0 eb       	ldi	r30, 0xB0	; 176
     280:	fc e1       	ldi	r31, 0x1C	; 28
     282:	00 e0       	ldi	r16, 0x00	; 0
     284:	0b bf       	out	0x3b, r16	; 59
     286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
     288:	07 90       	elpm	r0, Z+
     28a:	0d 92       	st	X+, r0
     28c:	a2 3c       	cpi	r26, 0xC2	; 194
     28e:	b1 07       	cpc	r27, r17
     290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
     292:	2d e0       	ldi	r18, 0x0D	; 13
     294:	a2 ec       	ldi	r26, 0xC2	; 194
     296:	ba e0       	ldi	r27, 0x0A	; 10
     298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
     29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
     29c:	a7 30       	cpi	r26, 0x07	; 7
     29e:	b2 07       	cpc	r27, r18
     2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
     2a2:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <main>
     2a6:	0c 94 56 0e 	jmp	0x1cac	; 0x1cac <_exit>

000002aa <__bad_interrupt>:
     2aa:	aa ce       	rjmp	.-684    	; 0x0 <__vectors>

000002ac <pauseTick>:
	TCCR1B = 0x00;
}
void play(short freqSound) {set_PWM(freqSound);}
void silence() {set_PWM(0);}
void playH(short freqSound) {set_PWM0(freqSound);}
void silenceH() { set_PWM0(0);}
     2ac:	20 b1       	in	r18, 0x00	; 0
     2ae:	21 70       	andi	r18, 0x01	; 1
     2b0:	81 30       	cpi	r24, 0x01	; 1
     2b2:	91 05       	cpc	r25, r1
     2b4:	59 f0       	breq	.+22     	; 0x2cc <pauseTick+0x20>
     2b6:	82 30       	cpi	r24, 0x02	; 2
     2b8:	91 05       	cpc	r25, r1
     2ba:	a1 f0       	breq	.+40     	; 0x2e4 <pauseTick+0x38>
     2bc:	89 2b       	or	r24, r25
     2be:	b9 f4       	brne	.+46     	; 0x2ee <pauseTick+0x42>
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <paused>
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	08 95       	ret
     2cc:	22 23       	and	r18, r18
     2ce:	89 f0       	breq	.+34     	; 0x2f2 <pauseTick+0x46>
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <paused>
     2d6:	91 11       	cpse	r25, r1
     2d8:	80 e0       	ldi	r24, 0x00	; 0
     2da:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <paused>
     2de:	82 e0       	ldi	r24, 0x02	; 2
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	08 95       	ret
     2e4:	21 11       	cpse	r18, r1
     2e6:	05 c0       	rjmp	.+10     	; 0x2f2 <pauseTick+0x46>
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	08 95       	ret
     2ee:	80 e0       	ldi	r24, 0x00	; 0
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	08 95       	ret

000002f4 <NextPrevTick>:
     2f4:	20 b1       	in	r18, 0x00	; 0
     2f6:	22 70       	andi	r18, 0x02	; 2
     2f8:	30 b1       	in	r19, 0x00	; 0
     2fa:	34 70       	andi	r19, 0x04	; 4
     2fc:	81 30       	cpi	r24, 0x01	; 1
     2fe:	91 05       	cpc	r25, r1
     300:	f1 f0       	breq	.+60     	; 0x33e <NextPrevTick+0x4a>
     302:	82 30       	cpi	r24, 0x02	; 2
     304:	91 05       	cpc	r25, r1
     306:	21 f1       	breq	.+72     	; 0x350 <NextPrevTick+0x5c>
     308:	00 97       	sbiw	r24, 0x00	; 0
     30a:	39 f5       	brne	.+78     	; 0x35a <NextPrevTick+0x66>
     30c:	33 23       	and	r19, r19
     30e:	89 f1       	breq	.+98     	; 0x372 <NextPrevTick+0x7e>
     310:	21 11       	cpse	r18, r1
     312:	10 c0       	rjmp	.+32     	; 0x334 <NextPrevTick+0x40>
     314:	81 e0       	ldi	r24, 0x01	; 1
     316:	80 93 06 0d 	sts	0x0D06, r24	; 0x800d06 <prevSong>
     31a:	10 92 03 0d 	sts	0x0D03, r1	; 0x800d03 <nextSong>
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	08 95       	ret
     324:	81 e0       	ldi	r24, 0x01	; 1
     326:	80 93 03 0d 	sts	0x0D03, r24	; 0x800d03 <nextSong>
     32a:	10 92 06 0d 	sts	0x0D06, r1	; 0x800d06 <prevSong>
     32e:	82 e0       	ldi	r24, 0x02	; 2
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	08 95       	ret
     334:	10 92 06 0d 	sts	0x0D06, r1	; 0x800d06 <prevSong>
     338:	10 92 03 0d 	sts	0x0D03, r1	; 0x800d03 <nextSong>
     33c:	08 95       	ret
     33e:	33 23       	and	r19, r19
     340:	79 f0       	breq	.+30     	; 0x360 <NextPrevTick+0x6c>
     342:	41 e0       	ldi	r20, 0x01	; 1
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	21 11       	cpse	r18, r1
     348:	40 e0       	ldi	r20, 0x00	; 0
     34a:	84 2f       	mov	r24, r20
     34c:	93 2f       	mov	r25, r19
     34e:	08 95       	ret
     350:	22 23       	and	r18, r18
     352:	49 f0       	breq	.+18     	; 0x366 <NextPrevTick+0x72>
     354:	33 23       	and	r19, r19
     356:	81 f0       	breq	.+32     	; 0x378 <NextPrevTick+0x84>
     358:	09 c0       	rjmp	.+18     	; 0x36c <NextPrevTick+0x78>
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	08 95       	ret
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	08 95       	ret
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	08 95       	ret
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	08 95       	ret
     372:	22 23       	and	r18, r18
     374:	f9 f2       	breq	.-66     	; 0x334 <NextPrevTick+0x40>
     376:	d6 cf       	rjmp	.-84     	; 0x324 <NextPrevTick+0x30>
     378:	08 95       	ret

0000037a <TimerOn>:
     37a:	8b e0       	ldi	r24, 0x0B	; 11
     37c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     380:	8d e7       	ldi	r24, 0x7D	; 125
     382:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     386:	82 e0       	ldi	r24, 0x02	; 2
     388:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     38c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
     390:	80 91 eb 09 	lds	r24, 0x09EB	; 0x8009eb <_avr_timer_M>
     394:	90 91 ec 09 	lds	r25, 0x09EC	; 0x8009ec <_avr_timer_M+0x1>
     398:	a0 91 ed 09 	lds	r26, 0x09ED	; 0x8009ed <_avr_timer_M+0x2>
     39c:	b0 91 ee 09 	lds	r27, 0x09EE	; 0x8009ee <_avr_timer_M+0x3>
     3a0:	80 93 04 0b 	sts	0x0B04, r24	; 0x800b04 <_avr_timer_cntcurr>
     3a4:	90 93 05 0b 	sts	0x0B05, r25	; 0x800b05 <_avr_timer_cntcurr+0x1>
     3a8:	a0 93 06 0b 	sts	0x0B06, r26	; 0x800b06 <_avr_timer_cntcurr+0x2>
     3ac:	b0 93 07 0b 	sts	0x0B07, r27	; 0x800b07 <_avr_timer_cntcurr+0x3>
     3b0:	8f b7       	in	r24, 0x3f	; 63
     3b2:	80 68       	ori	r24, 0x80	; 128
     3b4:	8f bf       	out	0x3f, r24	; 63
     3b6:	08 95       	ret

000003b8 <__vector_9>:
     3b8:	1f 92       	push	r1
     3ba:	0f 92       	push	r0
     3bc:	0f b6       	in	r0, 0x3f	; 63
     3be:	0f 92       	push	r0
     3c0:	11 24       	eor	r1, r1
     3c2:	8f 93       	push	r24
     3c4:	9f 93       	push	r25
     3c6:	af 93       	push	r26
     3c8:	bf 93       	push	r27
     3ca:	80 91 04 0b 	lds	r24, 0x0B04	; 0x800b04 <_avr_timer_cntcurr>
     3ce:	90 91 05 0b 	lds	r25, 0x0B05	; 0x800b05 <_avr_timer_cntcurr+0x1>
     3d2:	a0 91 06 0b 	lds	r26, 0x0B06	; 0x800b06 <_avr_timer_cntcurr+0x2>
     3d6:	b0 91 07 0b 	lds	r27, 0x0B07	; 0x800b07 <_avr_timer_cntcurr+0x3>
     3da:	01 97       	sbiw	r24, 0x01	; 1
     3dc:	a1 09       	sbc	r26, r1
     3de:	b1 09       	sbc	r27, r1
     3e0:	80 93 04 0b 	sts	0x0B04, r24	; 0x800b04 <_avr_timer_cntcurr>
     3e4:	90 93 05 0b 	sts	0x0B05, r25	; 0x800b05 <_avr_timer_cntcurr+0x1>
     3e8:	a0 93 06 0b 	sts	0x0B06, r26	; 0x800b06 <_avr_timer_cntcurr+0x2>
     3ec:	b0 93 07 0b 	sts	0x0B07, r27	; 0x800b07 <_avr_timer_cntcurr+0x3>
     3f0:	89 2b       	or	r24, r25
     3f2:	8a 2b       	or	r24, r26
     3f4:	8b 2b       	or	r24, r27
     3f6:	99 f4       	brne	.+38     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     3f8:	81 e0       	ldi	r24, 0x01	; 1
     3fa:	80 93 08 0b 	sts	0x0B08, r24	; 0x800b08 <TimerFlag>
     3fe:	80 91 eb 09 	lds	r24, 0x09EB	; 0x8009eb <_avr_timer_M>
     402:	90 91 ec 09 	lds	r25, 0x09EC	; 0x8009ec <_avr_timer_M+0x1>
     406:	a0 91 ed 09 	lds	r26, 0x09ED	; 0x8009ed <_avr_timer_M+0x2>
     40a:	b0 91 ee 09 	lds	r27, 0x09EE	; 0x8009ee <_avr_timer_M+0x3>
     40e:	80 93 04 0b 	sts	0x0B04, r24	; 0x800b04 <_avr_timer_cntcurr>
     412:	90 93 05 0b 	sts	0x0B05, r25	; 0x800b05 <_avr_timer_cntcurr+0x1>
     416:	a0 93 06 0b 	sts	0x0B06, r26	; 0x800b06 <_avr_timer_cntcurr+0x2>
     41a:	b0 93 07 0b 	sts	0x0B07, r27	; 0x800b07 <_avr_timer_cntcurr+0x3>
     41e:	bf 91       	pop	r27
     420:	af 91       	pop	r26
     422:	9f 91       	pop	r25
     424:	8f 91       	pop	r24
     426:	0f 90       	pop	r0
     428:	0f be       	out	0x3f, r0	; 63
     42a:	0f 90       	pop	r0
     42c:	1f 90       	pop	r1
     42e:	18 95       	reti

00000430 <TimerSet>:
     430:	60 93 eb 09 	sts	0x09EB, r22	; 0x8009eb <_avr_timer_M>
     434:	70 93 ec 09 	sts	0x09EC, r23	; 0x8009ec <_avr_timer_M+0x1>
     438:	80 93 ed 09 	sts	0x09ED, r24	; 0x8009ed <_avr_timer_M+0x2>
     43c:	90 93 ee 09 	sts	0x09EE, r25	; 0x8009ee <_avr_timer_M+0x3>
     440:	60 93 04 0b 	sts	0x0B04, r22	; 0x800b04 <_avr_timer_cntcurr>
     444:	70 93 05 0b 	sts	0x0B05, r23	; 0x800b05 <_avr_timer_cntcurr+0x1>
     448:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <_avr_timer_cntcurr+0x2>
     44c:	90 93 07 0b 	sts	0x0B07, r25	; 0x800b07 <_avr_timer_cntcurr+0x3>
     450:	08 95       	ret

00000452 <set_PWM>:
     452:	cf 92       	push	r12
     454:	df 92       	push	r13
     456:	ef 92       	push	r14
     458:	ff 92       	push	r15
     45a:	6b 01       	movw	r12, r22
     45c:	7c 01       	movw	r14, r24
     45e:	9b 01       	movw	r18, r22
     460:	ac 01       	movw	r20, r24
     462:	60 91 00 0b 	lds	r22, 0x0B00	; 0x800b00 <current_frequency.2060>
     466:	70 91 01 0b 	lds	r23, 0x0B01	; 0x800b01 <current_frequency.2060+0x1>
     46a:	80 91 02 0b 	lds	r24, 0x0B02	; 0x800b02 <current_frequency.2060+0x2>
     46e:	90 91 03 0b 	lds	r25, 0x0B03	; 0x800b03 <current_frequency.2060+0x3>
     472:	0e 94 94 0c 	call	0x1928	; 0x1928 <__cmpsf2>
     476:	88 23       	and	r24, r24
     478:	09 f4       	brne	.+2      	; 0x47c <set_PWM+0x2a>
     47a:	56 c0       	rjmp	.+172    	; 0x528 <set_PWM+0xd6>
     47c:	20 e0       	ldi	r18, 0x00	; 0
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	a9 01       	movw	r20, r18
     482:	c7 01       	movw	r24, r14
     484:	b6 01       	movw	r22, r12
     486:	0e 94 94 0c 	call	0x1928	; 0x1928 <__cmpsf2>
     48a:	81 11       	cpse	r24, r1
     48c:	06 c0       	rjmp	.+12     	; 0x49a <set_PWM+0x48>
     48e:	e1 e9       	ldi	r30, 0x91	; 145
     490:	f0 e0       	ldi	r31, 0x00	; 0
     492:	80 81       	ld	r24, Z
     494:	88 70       	andi	r24, 0x08	; 8
     496:	80 83       	st	Z, r24
     498:	05 c0       	rjmp	.+10     	; 0x4a4 <set_PWM+0x52>
     49a:	e1 e9       	ldi	r30, 0x91	; 145
     49c:	f0 e0       	ldi	r31, 0x00	; 0
     49e:	80 81       	ld	r24, Z
     4a0:	83 60       	ori	r24, 0x03	; 3
     4a2:	80 83       	st	Z, r24
     4a4:	28 e5       	ldi	r18, 0x58	; 88
     4a6:	39 e3       	ldi	r19, 0x39	; 57
     4a8:	44 e7       	ldi	r20, 0x74	; 116
     4aa:	5f e3       	ldi	r21, 0x3F	; 63
     4ac:	c7 01       	movw	r24, r14
     4ae:	b6 01       	movw	r22, r12
     4b0:	0e 94 94 0c 	call	0x1928	; 0x1928 <__cmpsf2>
     4b4:	88 23       	and	r24, r24
     4b6:	3c f4       	brge	.+14     	; 0x4c6 <set_PWM+0x74>
     4b8:	8f ef       	ldi	r24, 0xFF	; 255
     4ba:	9f ef       	ldi	r25, 0xFF	; 255
     4bc:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     4c0:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     4c4:	25 c0       	rjmp	.+74     	; 0x510 <set_PWM+0xbe>
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	34 e2       	ldi	r19, 0x24	; 36
     4ca:	44 ef       	ldi	r20, 0xF4	; 244
     4cc:	56 e4       	ldi	r21, 0x46	; 70
     4ce:	c7 01       	movw	r24, r14
     4d0:	b6 01       	movw	r22, r12
     4d2:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <__gesf2>
     4d6:	18 16       	cp	r1, r24
     4d8:	2c f4       	brge	.+10     	; 0x4e4 <set_PWM+0x92>
     4da:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     4de:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     4e2:	16 c0       	rjmp	.+44     	; 0x510 <set_PWM+0xbe>
     4e4:	20 e0       	ldi	r18, 0x00	; 0
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	40 e0       	ldi	r20, 0x00	; 0
     4ea:	53 e4       	ldi	r21, 0x43	; 67
     4ec:	c7 01       	movw	r24, r14
     4ee:	b6 01       	movw	r22, r12
     4f0:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__mulsf3>
     4f4:	9b 01       	movw	r18, r22
     4f6:	ac 01       	movw	r20, r24
     4f8:	60 e0       	ldi	r22, 0x00	; 0
     4fa:	74 e2       	ldi	r23, 0x24	; 36
     4fc:	84 ef       	ldi	r24, 0xF4	; 244
     4fe:	9a e4       	ldi	r25, 0x4A	; 74
     500:	0e 94 98 0c 	call	0x1930	; 0x1930 <__divsf3>
     504:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <__fixsfsi>
     508:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     50c:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     510:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     514:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
     518:	c0 92 00 0b 	sts	0x0B00, r12	; 0x800b00 <current_frequency.2060>
     51c:	d0 92 01 0b 	sts	0x0B01, r13	; 0x800b01 <current_frequency.2060+0x1>
     520:	e0 92 02 0b 	sts	0x0B02, r14	; 0x800b02 <current_frequency.2060+0x2>
     524:	f0 92 03 0b 	sts	0x0B03, r15	; 0x800b03 <current_frequency.2060+0x3>
     528:	ff 90       	pop	r15
     52a:	ef 90       	pop	r14
     52c:	df 90       	pop	r13
     52e:	cf 90       	pop	r12
     530:	08 95       	ret

00000532 <PWM_on>:
     532:	80 e4       	ldi	r24, 0x40	; 64
     534:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     538:	8b e0       	ldi	r24, 0x0B	; 11
     53a:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
     53e:	60 e0       	ldi	r22, 0x00	; 0
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	cb 01       	movw	r24, r22
     544:	86 cf       	rjmp	.-244    	; 0x452 <set_PWM>
     546:	08 95       	ret

00000548 <set_PWMB>:
     548:	cf 92       	push	r12
     54a:	df 92       	push	r13
     54c:	ef 92       	push	r14
     54e:	ff 92       	push	r15
     550:	6b 01       	movw	r12, r22
     552:	7c 01       	movw	r14, r24
     554:	9b 01       	movw	r18, r22
     556:	ac 01       	movw	r20, r24
     558:	60 91 fc 0a 	lds	r22, 0x0AFC	; 0x800afc <current_frequency.2068>
     55c:	70 91 fd 0a 	lds	r23, 0x0AFD	; 0x800afd <current_frequency.2068+0x1>
     560:	80 91 fe 0a 	lds	r24, 0x0AFE	; 0x800afe <current_frequency.2068+0x2>
     564:	90 91 ff 0a 	lds	r25, 0x0AFF	; 0x800aff <current_frequency.2068+0x3>
     568:	0e 94 94 0c 	call	0x1928	; 0x1928 <__cmpsf2>
     56c:	88 23       	and	r24, r24
     56e:	09 f4       	brne	.+2      	; 0x572 <set_PWMB+0x2a>
     570:	56 c0       	rjmp	.+172    	; 0x61e <set_PWMB+0xd6>
     572:	20 e0       	ldi	r18, 0x00	; 0
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	a9 01       	movw	r20, r18
     578:	c7 01       	movw	r24, r14
     57a:	b6 01       	movw	r22, r12
     57c:	0e 94 94 0c 	call	0x1928	; 0x1928 <__cmpsf2>
     580:	81 11       	cpse	r24, r1
     582:	06 c0       	rjmp	.+12     	; 0x590 <set_PWMB+0x48>
     584:	e1 e8       	ldi	r30, 0x81	; 129
     586:	f0 e0       	ldi	r31, 0x00	; 0
     588:	80 81       	ld	r24, Z
     58a:	88 70       	andi	r24, 0x08	; 8
     58c:	80 83       	st	Z, r24
     58e:	05 c0       	rjmp	.+10     	; 0x59a <set_PWMB+0x52>
     590:	e1 e8       	ldi	r30, 0x81	; 129
     592:	f0 e0       	ldi	r31, 0x00	; 0
     594:	80 81       	ld	r24, Z
     596:	83 60       	ori	r24, 0x03	; 3
     598:	80 83       	st	Z, r24
     59a:	28 e5       	ldi	r18, 0x58	; 88
     59c:	39 e3       	ldi	r19, 0x39	; 57
     59e:	44 e7       	ldi	r20, 0x74	; 116
     5a0:	5f e3       	ldi	r21, 0x3F	; 63
     5a2:	c7 01       	movw	r24, r14
     5a4:	b6 01       	movw	r22, r12
     5a6:	0e 94 94 0c 	call	0x1928	; 0x1928 <__cmpsf2>
     5aa:	88 23       	and	r24, r24
     5ac:	3c f4       	brge	.+14     	; 0x5bc <set_PWMB+0x74>
     5ae:	8f ef       	ldi	r24, 0xFF	; 255
     5b0:	9f ef       	ldi	r25, 0xFF	; 255
     5b2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     5b6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5ba:	25 c0       	rjmp	.+74     	; 0x606 <set_PWMB+0xbe>
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	34 e2       	ldi	r19, 0x24	; 36
     5c0:	44 ef       	ldi	r20, 0xF4	; 244
     5c2:	56 e4       	ldi	r21, 0x46	; 70
     5c4:	c7 01       	movw	r24, r14
     5c6:	b6 01       	movw	r22, r12
     5c8:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <__gesf2>
     5cc:	18 16       	cp	r1, r24
     5ce:	2c f4       	brge	.+10     	; 0x5da <set_PWMB+0x92>
     5d0:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     5d4:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5d8:	16 c0       	rjmp	.+44     	; 0x606 <set_PWMB+0xbe>
     5da:	20 e0       	ldi	r18, 0x00	; 0
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	40 e0       	ldi	r20, 0x00	; 0
     5e0:	53 e4       	ldi	r21, 0x43	; 67
     5e2:	c7 01       	movw	r24, r14
     5e4:	b6 01       	movw	r22, r12
     5e6:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__mulsf3>
     5ea:	9b 01       	movw	r18, r22
     5ec:	ac 01       	movw	r20, r24
     5ee:	60 e0       	ldi	r22, 0x00	; 0
     5f0:	74 e2       	ldi	r23, 0x24	; 36
     5f2:	84 ef       	ldi	r24, 0xF4	; 244
     5f4:	9a e4       	ldi	r25, 0x4A	; 74
     5f6:	0e 94 98 0c 	call	0x1930	; 0x1930 <__divsf3>
     5fa:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <__fixsfsi>
     5fe:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     602:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     606:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     60a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     60e:	c0 92 fc 0a 	sts	0x0AFC, r12	; 0x800afc <current_frequency.2068>
     612:	d0 92 fd 0a 	sts	0x0AFD, r13	; 0x800afd <current_frequency.2068+0x1>
     616:	e0 92 fe 0a 	sts	0x0AFE, r14	; 0x800afe <current_frequency.2068+0x2>
     61a:	f0 92 ff 0a 	sts	0x0AFF, r15	; 0x800aff <current_frequency.2068+0x3>
     61e:	ff 90       	pop	r15
     620:	ef 90       	pop	r14
     622:	df 90       	pop	r13
     624:	cf 90       	pop	r12
     626:	08 95       	ret

00000628 <PWMB_on>:
     628:	80 e4       	ldi	r24, 0x40	; 64
     62a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     62e:	8b e0       	ldi	r24, 0x0B	; 11
     630:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     634:	60 e0       	ldi	r22, 0x00	; 0
     636:	70 e0       	ldi	r23, 0x00	; 0
     638:	cb 01       	movw	r24, r22
     63a:	86 cf       	rjmp	.-244    	; 0x548 <set_PWMB>
     63c:	08 95       	ret

0000063e <play>:
     63e:	bc 01       	movw	r22, r24
     640:	99 0f       	add	r25, r25
     642:	88 0b       	sbc	r24, r24
     644:	99 0b       	sbc	r25, r25
     646:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__floatsisf>
     64a:	03 cf       	rjmp	.-506    	; 0x452 <set_PWM>
     64c:	08 95       	ret

0000064e <silence>:
     64e:	60 e0       	ldi	r22, 0x00	; 0
     650:	70 e0       	ldi	r23, 0x00	; 0
     652:	cb 01       	movw	r24, r22
     654:	fe ce       	rjmp	.-516    	; 0x452 <set_PWM>
     656:	08 95       	ret

00000658 <playB>:
void playB(short freqSound) { set_PWMB(freqSound);}
     658:	bc 01       	movw	r22, r24
     65a:	99 0f       	add	r25, r25
     65c:	88 0b       	sbc	r24, r24
     65e:	99 0b       	sbc	r25, r25
     660:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__floatsisf>
     664:	71 cf       	rjmp	.-286    	; 0x548 <set_PWMB>
     666:	08 95       	ret

00000668 <silenceB>:
void silenceB() {  set_PWMB(0); }
     668:	60 e0       	ldi	r22, 0x00	; 0
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	cb 01       	movw	r24, r22
     66e:	6c cf       	rjmp	.-296    	; 0x548 <set_PWMB>
     670:	08 95       	ret

00000672 <DisplaySong1>:
short** playlistMelRL[] = {renCircMelRL, AmGrMelR, mooHLMelR};
short** playlistBas[] = {renCircHar, AmGrBas, mooHLBas};
short** playlistBasNL[] = {renCircHarNL, AmGrBasN, mooHLBasN};
short** playlistBasRL[] = {renCircHarRL, AmGrBasR, mooHLBasR};
void DisplaySong1() {
	nokia_lcd_clear();
     672:	0e 94 80 0b 	call	0x1700	; 0x1700 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
     676:	60 e0       	ldi	r22, 0x00	; 0
     678:	70 e0       	ldi	r23, 0x00	; 0
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Song Name:    Renai         Circulation", 1);
     682:	61 e0       	ldi	r22, 0x01	; 1
     684:	70 e0       	ldi	r23, 0x00	; 0
     686:	87 ef       	ldi	r24, 0xF7	; 247
     688:	99 e0       	ldi	r25, 0x09	; 9
     68a:	0e 94 66 0c 	call	0x18cc	; 0x18cc <nokia_lcd_write_string>
	nokia_lcd_render();
     68e:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <nokia_lcd_render>
     692:	08 95       	ret

00000694 <DisplaySong2>:
	nokia_lcd_set_cursor(0, 0);
	nokia_lcd_write_string("Song Name:    Mary Had A    Little Lamb", 1);
	nokia_lcd_render();
}*/
void DisplaySong2() {
	nokia_lcd_clear();
     694:	0e 94 80 0b 	call	0x1700	; 0x1700 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
     698:	60 e0       	ldi	r22, 0x00	; 0
     69a:	70 e0       	ldi	r23, 0x00	; 0
     69c:	80 e0       	ldi	r24, 0x00	; 0
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Song Name:    Amazing Grace", 1);
     6a4:	61 e0       	ldi	r22, 0x01	; 1
     6a6:	70 e0       	ldi	r23, 0x00	; 0
     6a8:	8f e1       	ldi	r24, 0x1F	; 31
     6aa:	9a e0       	ldi	r25, 0x0A	; 10
     6ac:	0e 94 66 0c 	call	0x18cc	; 0x18cc <nokia_lcd_write_string>
	nokia_lcd_render();
     6b0:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <nokia_lcd_render>
     6b4:	08 95       	ret

000006b6 <DisplaySong3>:
}
void DisplaySong3() {
	nokia_lcd_clear();
     6b6:	0e 94 80 0b 	call	0x1700	; 0x1700 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
     6ba:	60 e0       	ldi	r22, 0x00	; 0
     6bc:	70 e0       	ldi	r23, 0x00	; 0
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Song Name:    Mamamoo :     Hello", 1);
     6c6:	61 e0       	ldi	r22, 0x01	; 1
     6c8:	70 e0       	ldi	r23, 0x00	; 0
     6ca:	8b e3       	ldi	r24, 0x3B	; 59
     6cc:	9a e0       	ldi	r25, 0x0A	; 10
     6ce:	0e 94 66 0c 	call	0x18cc	; 0x18cc <nokia_lcd_write_string>
	nokia_lcd_render();
     6d2:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <nokia_lcd_render>
     6d6:	08 95       	ret

000006d8 <DisplayPaused>:
}
void DisplayPaused() {
	nokia_lcd_clear();
     6d8:	0e 94 80 0b 	call	0x1700	; 0x1700 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
     6dc:	60 e0       	ldi	r22, 0x00	; 0
     6de:	70 e0       	ldi	r23, 0x00	; 0
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	0e 94 78 0c 	call	0x18f0	; 0x18f0 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Song Paused!  Press Play to Resume.", 1);
     6e8:	61 e0       	ldi	r22, 0x01	; 1
     6ea:	70 e0       	ldi	r23, 0x00	; 0
     6ec:	8d e5       	ldi	r24, 0x5D	; 93
     6ee:	9a e0       	ldi	r25, 0x0A	; 10
     6f0:	0e 94 66 0c 	call	0x18cc	; 0x18cc <nokia_lcd_write_string>
	nokia_lcd_render();
     6f4:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <nokia_lcd_render>
     6f8:	08 95       	ret

000006fa <melodyTick>:
unsigned long y = sizeof(playlistMel[0]);
unsigned long playList = sizeof(playlistMel) / sizeof(playlistMel[0]);
char numRows[] = {1, 1, 1};
unsigned char it4;
enum MelodyStates{Minit, Mwait, Mplay, Ml, Mr, Mp};
int melodyTick(int state) {
     6fa:	0f 93       	push	r16
     6fc:	1f 93       	push	r17
     6fe:	cf 93       	push	r28
     700:	df 93       	push	r29
     702:	ec 01       	movw	r28, r24
	static unsigned short it1;
	static unsigned short it2;
	static unsigned short it3;
	//static unsigned char it4;
	static unsigned char placeHolder;
	switch(state) {
     704:	82 30       	cpi	r24, 0x02	; 2
     706:	91 05       	cpc	r25, r1
     708:	69 f1       	breq	.+90     	; 0x764 <melodyTick+0x6a>
     70a:	2c f4       	brge	.+10     	; 0x716 <melodyTick+0x1c>
     70c:	00 97       	sbiw	r24, 0x00	; 0
     70e:	69 f0       	breq	.+26     	; 0x72a <melodyTick+0x30>
     710:	01 97       	sbiw	r24, 0x01	; 1
     712:	11 f1       	breq	.+68     	; 0x758 <melodyTick+0x5e>
     714:	6d c3       	rjmp	.+1754   	; 0xdf0 <melodyTick+0x6f6>
     716:	84 30       	cpi	r24, 0x04	; 4
     718:	91 05       	cpc	r25, r1
     71a:	09 f4       	brne	.+2      	; 0x71e <melodyTick+0x24>
     71c:	db c1       	rjmp	.+950    	; 0xad4 <melodyTick+0x3da>
     71e:	0c f4       	brge	.+2      	; 0x722 <melodyTick+0x28>
     720:	36 c1       	rjmp	.+620    	; 0x98e <melodyTick+0x294>
     722:	05 97       	sbiw	r24, 0x05	; 5
     724:	09 f4       	brne	.+2      	; 0x728 <melodyTick+0x2e>
     726:	7f c2       	rjmp	.+1278   	; 0xc26 <melodyTick+0x52c>
     728:	63 c3       	rjmp	.+1734   	; 0xdf0 <melodyTick+0x6f6>
		case Minit:
			state= Mwait;
			it1 = 0;
     72a:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
     72e:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
			it2 = 0;
     732:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
     736:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
			it3 = 0;
     73a:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
     73e:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
			it4 = 1;
     742:	81 e0       	ldi	r24, 0x01	; 1
     744:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
			prevSong = 0;
     748:	10 92 06 0d 	sts	0x0D06, r1	; 0x800d06 <prevSong>
			nextSong = 0;
     74c:	10 92 03 0d 	sts	0x0D03, r1	; 0x800d03 <nextSong>
			silence();
     750:	7e df       	rcall	.-260    	; 0x64e <silence>
	static unsigned short it3;
	//static unsigned char it4;
	static unsigned char placeHolder;
	switch(state) {
		case Minit:
			state= Mwait;
     752:	c1 e0       	ldi	r28, 0x01	; 1
     754:	d0 e0       	ldi	r29, 0x00	; 0
			it3 = 0;
			it4 = 1;
			prevSong = 0;
			nextSong = 0;
			silence();
			break;
     756:	4c c3       	rjmp	.+1688   	; 0xdf0 <melodyTick+0x6f6>
		case Mwait:
			if (!paused) {state= Mplay;}
     758:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
     75c:	88 23       	and	r24, r24
     75e:	09 f4       	brne	.+2      	; 0x762 <melodyTick+0x68>
     760:	3c c3       	rjmp	.+1656   	; 0xdda <melodyTick+0x6e0>
     762:	46 c3       	rjmp	.+1676   	; 0xdf0 <melodyTick+0x6f6>
			else {state= Mwait;}
			break;
		case Mplay:
			songDone = 0;
     764:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <songDone>
			if (paused) {
     768:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
     76c:	88 23       	and	r24, r24
				silence();
     76e:	41 f0       	breq	.+16     	; 0x780 <melodyTick+0x86>
				DisplayPaused();
     770:	6e df       	rcall	.-292    	; 0x64e <silence>
     772:	b2 df       	rcall	.-156    	; 0x6d8 <DisplayPaused>
				placeHolder = state;
     774:	82 e0       	ldi	r24, 0x02	; 2
     776:	80 93 f5 0a 	sts	0x0AF5, r24	; 0x800af5 <placeHolder.2228>
				state = Mp;
     77a:	c5 e0       	ldi	r28, 0x05	; 5
     77c:	d0 e0       	ldi	r29, 0x00	; 0
				break;
     77e:	38 c3       	rjmp	.+1648   	; 0xdf0 <melodyTick+0x6f6>
			}
			//else {
				//DisplayName(it4);
			//}
			if (prevSong && (it1 == 0)) {
     780:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
     784:	88 23       	and	r24, r24
     786:	69 f1       	breq	.+90     	; 0x7e2 <melodyTick+0xe8>
     788:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
     78c:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     790:	89 2b       	or	r24, r25
     792:	d1 f4       	brne	.+52     	; 0x7c8 <melodyTick+0xce>
				it1 = 0;
     794:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
     798:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
				it2 = 0;
     79c:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
     7a0:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
				it3 = 0;
     7a4:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
     7a8:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
				if (it4 == 0) {it4 = playList - 1;}
     7ac:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
     7b0:	81 11       	cpse	r24, r1
     7b2:	06 c0       	rjmp	.+12     	; 0x7c0 <melodyTick+0xc6>
     7b4:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <playList>
     7b8:	81 50       	subi	r24, 0x01	; 1
     7ba:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     7be:	18 c3       	rjmp	.+1584   	; 0xdf0 <melodyTick+0x6f6>
				else {it4 = it4 - 1;}
     7c0:	81 50       	subi	r24, 0x01	; 1
     7c2:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     7c6:	14 c3       	rjmp	.+1576   	; 0xdf0 <melodyTick+0x6f6>
												//}
												//else if (it4 == 0) {
												//DisplaySong1();
												//}
			else if (prevSong){
				it1 = 0;
     7c8:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
     7cc:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
				it2 = 0;
     7d0:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
     7d4:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
				it3 = 0;
     7d8:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
     7dc:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
				state = Mplay;
				break;
     7e0:	07 c3       	rjmp	.+1550   	; 0xdf0 <melodyTick+0x6f6>
			}
		if (nextSong) {
     7e2:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
     7e6:	88 23       	and	r24, r24
     7e8:	29 f1       	breq	.+74     	; 0x834 <melodyTick+0x13a>
			it1 = 0;
     7ea:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
     7ee:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
			it2 = 0;
     7f2:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
     7f6:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
			it3 = 0;
     7fa:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
     7fe:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
			it4 = it4 + 1;
     802:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
     806:	8f 5f       	subi	r24, 0xFF	; 255
     808:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
			if (it4 == playList) {it4 = 0;}
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	a0 e0       	ldi	r26, 0x00	; 0
     810:	b0 e0       	ldi	r27, 0x00	; 0
     812:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
     816:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
     81a:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
     81e:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
     822:	84 17       	cp	r24, r20
     824:	95 07       	cpc	r25, r21
     826:	a6 07       	cpc	r26, r22
     828:	b7 07       	cpc	r27, r23
     82a:	09 f0       	breq	.+2      	; 0x82e <melodyTick+0x134>
     82c:	e1 c2       	rjmp	.+1474   	; 0xdf0 <melodyTick+0x6f6>
     82e:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
     832:	de c2       	rjmp	.+1468   	; 0xdf0 <melodyTick+0x6f6>
			state = Mplay;
			break;
		}
		if (playlistMel[it4][it1][it2] == -1) {it1 = it1 + 1; it2 = 0;}
     834:	60 91 05 0d 	lds	r22, 0x0D05	; 0x800d05 <it4>
     838:	26 2f       	mov	r18, r22
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	f9 01       	movw	r30, r18
     83e:	ee 0f       	add	r30, r30
     840:	ff 1f       	adc	r31, r31
     842:	e9 5d       	subi	r30, 0xD9	; 217
     844:	fe 4f       	sbci	r31, 0xFE	; 254
     846:	40 81       	ld	r20, Z
     848:	51 81       	ldd	r21, Z+1	; 0x01
     84a:	00 91 fa 0a 	lds	r16, 0x0AFA	; 0x800afa <it1.2225>
     84e:	10 91 fb 0a 	lds	r17, 0x0AFB	; 0x800afb <it1.2225+0x1>
     852:	d8 01       	movw	r26, r16
     854:	aa 0f       	add	r26, r26
     856:	bb 1f       	adc	r27, r27
     858:	a4 0f       	add	r26, r20
     85a:	b5 1f       	adc	r27, r21
     85c:	e0 91 f8 0a 	lds	r30, 0x0AF8	; 0x800af8 <it2.2226>
     860:	f0 91 f9 0a 	lds	r31, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     864:	cf 01       	movw	r24, r30
     866:	88 0f       	add	r24, r24
     868:	99 1f       	adc	r25, r25
     86a:	ed 91       	ld	r30, X+
     86c:	fc 91       	ld	r31, X
     86e:	e8 0f       	add	r30, r24
     870:	f9 1f       	adc	r31, r25
     872:	80 81       	ld	r24, Z
     874:	91 81       	ldd	r25, Z+1	; 0x01
     876:	01 96       	adiw	r24, 0x01	; 1
     878:	51 f4       	brne	.+20     	; 0x88e <melodyTick+0x194>
     87a:	0f 5f       	subi	r16, 0xFF	; 255
     87c:	1f 4f       	sbci	r17, 0xFF	; 255
     87e:	10 93 fb 0a 	sts	0x0AFB, r17	; 0x800afb <it1.2225+0x1>
     882:	00 93 fa 0a 	sts	0x0AFA, r16	; 0x800afa <it1.2225>
     886:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
     88a:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
		if (it1 == numRows[it4]) {
     88e:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
     892:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     896:	f9 01       	movw	r30, r18
     898:	e0 50       	subi	r30, 0x00	; 0
     89a:	ff 4f       	sbci	r31, 0xFF	; 255
     89c:	20 81       	ld	r18, Z
     89e:	30 e0       	ldi	r19, 0x00	; 0
     8a0:	28 17       	cp	r18, r24
     8a2:	39 07       	cpc	r19, r25
     8a4:	41 f5       	brne	.+80     	; 0x8f6 <melodyTick+0x1fc>
			songDone = 1;
     8a6:	81 e0       	ldi	r24, 0x01	; 1
     8a8:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <songDone>
			state = Mwait;
			it1 = 0;
     8ac:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
     8b0:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
			it2 = 0;
     8b4:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
     8b8:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
			it3 = 0;
     8bc:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
     8c0:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
			it4 = it4 + 1;
     8c4:	86 0f       	add	r24, r22
     8c6:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
			if (it4 == playList) {it4 = 0;}
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	a0 e0       	ldi	r26, 0x00	; 0
     8ce:	b0 e0       	ldi	r27, 0x00	; 0
     8d0:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
     8d4:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
     8d8:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
     8dc:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
     8e0:	84 17       	cp	r24, r20
     8e2:	95 07       	cpc	r25, r21
     8e4:	a6 07       	cpc	r26, r22
     8e6:	b7 07       	cpc	r27, r23
     8e8:	09 f0       	breq	.+2      	; 0x8ec <melodyTick+0x1f2>
     8ea:	7a c2       	rjmp	.+1268   	; 0xde0 <melodyTick+0x6e6>
     8ec:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
			break;
		}
		if (playlistMel[it4][it1][it2] == -1) {it1 = it1 + 1; it2 = 0;}
		if (it1 == numRows[it4]) {
			songDone = 1;
			state = Mwait;
     8f0:	c1 e0       	ldi	r28, 0x01	; 1
     8f2:	d0 e0       	ldi	r29, 0x00	; 0
     8f4:	7d c2       	rjmp	.+1274   	; 0xdf0 <melodyTick+0x6f6>
			DisplaySong3();
		}*/
		//play(playlistMel[it4][it1][it2]);
		//play(playlistMel[it4][it1][it2]);
		//DisplayName(it4);
		if (it4 == 0) {
     8f6:	61 11       	cpse	r22, r1
     8f8:	17 c0       	rjmp	.+46     	; 0x928 <melodyTick+0x22e>
			play(playlistMel[it4][it1][it2]);
     8fa:	88 0f       	add	r24, r24
     8fc:	99 1f       	adc	r25, r25
     8fe:	fa 01       	movw	r30, r20
     900:	e8 0f       	add	r30, r24
     902:	f9 1f       	adc	r31, r25
     904:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2226>
     908:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     90c:	88 0f       	add	r24, r24
     90e:	99 1f       	adc	r25, r25
     910:	01 90       	ld	r0, Z+
     912:	f0 81       	ld	r31, Z
     914:	e0 2d       	mov	r30, r0
     916:	e8 0f       	add	r30, r24
     918:	f9 1f       	adc	r31, r25
     91a:	80 81       	ld	r24, Z
     91c:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong1();
     91e:	8f de       	rcall	.-738    	; 0x63e <play>
     920:	a8 de       	rcall	.-688    	; 0x672 <DisplaySong1>
			
			state = Ml;
     922:	c3 e0       	ldi	r28, 0x03	; 3
     924:	d0 e0       	ldi	r29, 0x00	; 0
     926:	64 c2       	rjmp	.+1224   	; 0xdf0 <melodyTick+0x6f6>
			//state = Ms0;
		}
		else if (it4 == 1) {
     928:	61 30       	cpi	r22, 0x01	; 1
     92a:	b9 f4       	brne	.+46     	; 0x95a <melodyTick+0x260>
			play(playlistMel[it4][it1][it2]);
     92c:	88 0f       	add	r24, r24
     92e:	99 1f       	adc	r25, r25
     930:	fa 01       	movw	r30, r20
     932:	e8 0f       	add	r30, r24
     934:	f9 1f       	adc	r31, r25
     936:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2226>
     93a:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     93e:	88 0f       	add	r24, r24
     940:	99 1f       	adc	r25, r25
     942:	01 90       	ld	r0, Z+
     944:	f0 81       	ld	r31, Z
     946:	e0 2d       	mov	r30, r0
     948:	e8 0f       	add	r30, r24
     94a:	f9 1f       	adc	r31, r25
     94c:	80 81       	ld	r24, Z
     94e:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong2();
     950:	76 de       	rcall	.-788    	; 0x63e <play>
     952:	a0 de       	rcall	.-704    	; 0x694 <DisplaySong2>
			
			state = Ml;
     954:	c3 e0       	ldi	r28, 0x03	; 3
     956:	d0 e0       	ldi	r29, 0x00	; 0
     958:	4b c2       	rjmp	.+1174   	; 0xdf0 <melodyTick+0x6f6>
			//state = Ms1;
		}
		else if (it4 == 2) {
     95a:	62 30       	cpi	r22, 0x02	; 2
     95c:	09 f0       	breq	.+2      	; 0x960 <melodyTick+0x266>
     95e:	48 c2       	rjmp	.+1168   	; 0xdf0 <melodyTick+0x6f6>
			play(playlistMel[it4][it1][it2]);
     960:	88 0f       	add	r24, r24
     962:	99 1f       	adc	r25, r25
     964:	fa 01       	movw	r30, r20
     966:	e8 0f       	add	r30, r24
     968:	f9 1f       	adc	r31, r25
     96a:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2226>
     96e:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     972:	88 0f       	add	r24, r24
     974:	99 1f       	adc	r25, r25
     976:	01 90       	ld	r0, Z+
     978:	f0 81       	ld	r31, Z
     97a:	e0 2d       	mov	r30, r0
     97c:	e8 0f       	add	r30, r24
     97e:	f9 1f       	adc	r31, r25
     980:	80 81       	ld	r24, Z
     982:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong3();
     984:	5c de       	rcall	.-840    	; 0x63e <play>
			
			state = Ml;
     986:	97 de       	rcall	.-722    	; 0x6b6 <DisplaySong3>
     988:	c3 e0       	ldi	r28, 0x03	; 3
     98a:	d0 e0       	ldi	r29, 0x00	; 0
		//play(playlistMel[it4][it1][it2]);
		//state = Ml;
		
		break;
		case Ml:
		if (paused) {
     98c:	31 c2       	rjmp	.+1122   	; 0xdf0 <melodyTick+0x6f6>
     98e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
     992:	88 23       	and	r24, r24
			silence();
     994:	41 f0       	breq	.+16     	; 0x9a6 <melodyTick+0x2ac>
     996:	5b de       	rcall	.-842    	; 0x64e <silence>
			DisplayPaused();
     998:	9f de       	rcall	.-706    	; 0x6d8 <DisplayPaused>
     99a:	83 e0       	ldi	r24, 0x03	; 3
			placeHolder = state;
     99c:	80 93 f5 0a 	sts	0x0AF5, r24	; 0x800af5 <placeHolder.2228>
     9a0:	c5 e0       	ldi	r28, 0x05	; 5
			state = Mp;
     9a2:	d0 e0       	ldi	r29, 0x00	; 0
     9a4:	25 c2       	rjmp	.+1098   	; 0xdf0 <melodyTick+0x6f6>
			break;
     9a6:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		if (prevSong && (it1 == 0)) {
     9aa:	88 23       	and	r24, r24
     9ac:	99 f1       	breq	.+102    	; 0xa14 <melodyTick+0x31a>
     9ae:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
     9b2:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     9b6:	89 2b       	or	r24, r25
     9b8:	f1 f4       	brne	.+60     	; 0x9f6 <melodyTick+0x2fc>
     9ba:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
			it1 = 0;
     9be:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     9c2:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
			it2 = 0;
     9c6:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     9ca:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
			it3 = 0;
     9ce:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     9d2:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			if (it4 == 0) {it4 = playList - 1;}
     9d6:	81 11       	cpse	r24, r1
     9d8:	08 c0       	rjmp	.+16     	; 0x9ea <melodyTick+0x2f0>
     9da:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <playList>
     9de:	81 50       	subi	r24, 0x01	; 1
     9e0:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     9e4:	c2 e0       	ldi	r28, 0x02	; 2
			else {it4 = it4 - 1;}
			state = Mplay;
     9e6:	d0 e0       	ldi	r29, 0x00	; 0
     9e8:	03 c2       	rjmp	.+1030   	; 0xdf0 <melodyTick+0x6f6>
     9ea:	81 50       	subi	r24, 0x01	; 1
		if (prevSong && (it1 == 0)) {
			it1 = 0;
			it2 = 0;
			it3 = 0;
			if (it4 == 0) {it4 = playList - 1;}
			else {it4 = it4 - 1;}
     9ec:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     9f0:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     9f2:	d0 e0       	ldi	r29, 0x00	; 0
     9f4:	fd c1       	rjmp	.+1018   	; 0xdf0 <melodyTick+0x6f6>
     9f6:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
											//}
											//else if (it4 == 0) {
											//DisplaySong1();
											//}
		else if (prevSong){
				it1 = 0;
     9fa:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     9fe:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
				it2 = 0;
     a02:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     a06:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
				it3 = 0;
     a0a:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     a0e:	c2 e0       	ldi	r28, 0x02	; 2
				state = Mplay;
     a10:	d0 e0       	ldi	r29, 0x00	; 0
     a12:	ee c1       	rjmp	.+988    	; 0xdf0 <melodyTick+0x6f6>
				break;
     a14:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
     a18:	88 23       	and	r24, r24
     a1a:	39 f1       	breq	.+78     	; 0xa6a <melodyTick+0x370>
     a1c:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
			it1 = 0;
     a20:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     a24:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
			it2 = 0;
     a28:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     a2c:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
			it3 = 0;
     a30:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     a34:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			it4 = it4 + 1;
     a38:	8f 5f       	subi	r24, 0xFF	; 255
     a3a:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     a3e:	90 e0       	ldi	r25, 0x00	; 0
			if (it4 == playList) {it4 = 0;}
     a40:	a0 e0       	ldi	r26, 0x00	; 0
     a42:	b0 e0       	ldi	r27, 0x00	; 0
     a44:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
     a48:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
     a4c:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
     a50:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
     a54:	84 17       	cp	r24, r20
     a56:	95 07       	cpc	r25, r21
     a58:	a6 07       	cpc	r26, r22
     a5a:	b7 07       	cpc	r27, r23
     a5c:	09 f0       	breq	.+2      	; 0xa60 <melodyTick+0x366>
     a5e:	c3 c1       	rjmp	.+902    	; 0xde6 <melodyTick+0x6ec>
     a60:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
     a64:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     a66:	d0 e0       	ldi	r29, 0x00	; 0
     a68:	c3 c1       	rjmp	.+902    	; 0xdf0 <melodyTick+0x6f6>
     a6a:	20 91 f6 0a 	lds	r18, 0x0AF6	; 0x800af6 <it3.2227>
			break;
		}
		if (it3 < playlistMelNL[it4][it1][it2]) {it3 = it3 + 1; state = Ml;}
     a6e:	30 91 f7 0a 	lds	r19, 0x0AF7	; 0x800af7 <it3.2227+0x1>
     a72:	e0 91 05 0d 	lds	r30, 0x0D05	; 0x800d05 <it4>
     a76:	f0 e0       	ldi	r31, 0x00	; 0
     a78:	ee 0f       	add	r30, r30
     a7a:	ff 1f       	adc	r31, r31
     a7c:	ef 5d       	subi	r30, 0xDF	; 223
     a7e:	fe 4f       	sbci	r31, 0xFE	; 254
     a80:	a0 91 fa 0a 	lds	r26, 0x0AFA	; 0x800afa <it1.2225>
     a84:	b0 91 fb 0a 	lds	r27, 0x0AFB	; 0x800afb <it1.2225+0x1>
     a88:	cd 01       	movw	r24, r26
     a8a:	88 0f       	add	r24, r24
     a8c:	99 1f       	adc	r25, r25
     a8e:	a0 81       	ld	r26, Z
     a90:	b1 81       	ldd	r27, Z+1	; 0x01
     a92:	a8 0f       	add	r26, r24
     a94:	b9 1f       	adc	r27, r25
     a96:	e0 91 f8 0a 	lds	r30, 0x0AF8	; 0x800af8 <it2.2226>
     a9a:	f0 91 f9 0a 	lds	r31, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     a9e:	cf 01       	movw	r24, r30
     aa0:	88 0f       	add	r24, r24
     aa2:	99 1f       	adc	r25, r25
     aa4:	ed 91       	ld	r30, X+
     aa6:	fc 91       	ld	r31, X
     aa8:	e8 0f       	add	r30, r24
     aaa:	f9 1f       	adc	r31, r25
     aac:	80 81       	ld	r24, Z
     aae:	91 81       	ldd	r25, Z+1	; 0x01
     ab0:	28 17       	cp	r18, r24
     ab2:	39 07       	cpc	r19, r25
     ab4:	38 f4       	brcc	.+14     	; 0xac4 <melodyTick+0x3ca>
     ab6:	2f 5f       	subi	r18, 0xFF	; 255
     ab8:	3f 4f       	sbci	r19, 0xFF	; 255
     aba:	30 93 f7 0a 	sts	0x0AF7, r19	; 0x800af7 <it3.2227+0x1>
     abe:	20 93 f6 0a 	sts	0x0AF6, r18	; 0x800af6 <it3.2227>
     ac2:	96 c1       	rjmp	.+812    	; 0xdf0 <melodyTick+0x6f6>
			else {
				it3 = 0;
     ac4:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
				silence();
     ac8:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
				state = Mr;
     acc:	c0 dd       	rcall	.-1152   	; 0x64e <silence>
     ace:	c4 e0       	ldi	r28, 0x04	; 4
     ad0:	d0 e0       	ldi	r29, 0x00	; 0
		else if (it4 == 2) {
			DisplaySong3();
		}*/
			break;
		case Mr:
		if (paused) {
     ad2:	8e c1       	rjmp	.+796    	; 0xdf0 <melodyTick+0x6f6>
     ad4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
     ad8:	88 23       	and	r24, r24
			DisplayPaused();
     ada:	41 f0       	breq	.+16     	; 0xaec <melodyTick+0x3f2>
     adc:	fd dd       	rcall	.-1030   	; 0x6d8 <DisplayPaused>
			silence();
     ade:	b7 dd       	rcall	.-1170   	; 0x64e <silence>
     ae0:	84 e0       	ldi	r24, 0x04	; 4
			placeHolder = state;
     ae2:	80 93 f5 0a 	sts	0x0AF5, r24	; 0x800af5 <placeHolder.2228>
     ae6:	c5 e0       	ldi	r28, 0x05	; 5
			state = Mp;
     ae8:	d0 e0       	ldi	r29, 0x00	; 0
     aea:	82 c1       	rjmp	.+772    	; 0xdf0 <melodyTick+0x6f6>
			break;
     aec:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		if (prevSong && (it1 == 0)) {
     af0:	88 23       	and	r24, r24
     af2:	99 f1       	breq	.+102    	; 0xb5a <melodyTick+0x460>
     af4:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
     af8:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     afc:	89 2b       	or	r24, r25
     afe:	f1 f4       	brne	.+60     	; 0xb3c <melodyTick+0x442>
     b00:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
			it1 = 0;
     b04:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     b08:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
			it2 = 0;
     b0c:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     b10:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
			it3 = 0;
     b14:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     b18:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			if (it4 == 0) {it4 = playList - 1;}
     b1c:	81 11       	cpse	r24, r1
     b1e:	08 c0       	rjmp	.+16     	; 0xb30 <melodyTick+0x436>
     b20:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <playList>
     b24:	81 50       	subi	r24, 0x01	; 1
     b26:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     b2a:	c2 e0       	ldi	r28, 0x02	; 2
			else {it4 = it4 - 1;}
			state = Mplay;
     b2c:	d0 e0       	ldi	r29, 0x00	; 0
     b2e:	60 c1       	rjmp	.+704    	; 0xdf0 <melodyTick+0x6f6>
     b30:	81 50       	subi	r24, 0x01	; 1
		if (prevSong && (it1 == 0)) {
			it1 = 0;
			it2 = 0;
			it3 = 0;
			if (it4 == 0) {it4 = playList - 1;}
			else {it4 = it4 - 1;}
     b32:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     b36:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     b38:	d0 e0       	ldi	r29, 0x00	; 0
     b3a:	5a c1       	rjmp	.+692    	; 0xdf0 <melodyTick+0x6f6>
     b3c:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
			break;
		}
		else if (prevSong){
				it1 = 0;
     b40:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     b44:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
				it2 = 0;
     b48:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     b4c:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
				it3 = 0;
     b50:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     b54:	c2 e0       	ldi	r28, 0x02	; 2
				state = Mplay;
     b56:	d0 e0       	ldi	r29, 0x00	; 0
     b58:	4b c1       	rjmp	.+662    	; 0xdf0 <melodyTick+0x6f6>
				break;
     b5a:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
     b5e:	88 23       	and	r24, r24
     b60:	39 f1       	breq	.+78     	; 0xbb0 <melodyTick+0x4b6>
     b62:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
			it1 = 0;
     b66:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     b6a:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
			 it2 = 0;
     b6e:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     b72:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
			 it3 = 0;
     b76:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     b7a:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
				it4 = it4 + 1;
     b7e:	8f 5f       	subi	r24, 0xFF	; 255
     b80:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     b84:	90 e0       	ldi	r25, 0x00	; 0
			if (it4 == playList) {it4 = 0;}
     b86:	a0 e0       	ldi	r26, 0x00	; 0
     b88:	b0 e0       	ldi	r27, 0x00	; 0
     b8a:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
     b8e:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
     b92:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
     b96:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
     b9a:	84 17       	cp	r24, r20
     b9c:	95 07       	cpc	r25, r21
     b9e:	a6 07       	cpc	r26, r22
     ba0:	b7 07       	cpc	r27, r23
     ba2:	09 f0       	breq	.+2      	; 0xba6 <melodyTick+0x4ac>
     ba4:	23 c1       	rjmp	.+582    	; 0xdec <melodyTick+0x6f2>
     ba6:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
     baa:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     bac:	d0 e0       	ldi	r29, 0x00	; 0
     bae:	20 c1       	rjmp	.+576    	; 0xdf0 <melodyTick+0x6f6>
     bb0:	20 91 f8 0a 	lds	r18, 0x0AF8	; 0x800af8 <it2.2226>
			break;
		}
		if (it3 < playlistMelRL[it4][it1][it2]) {it3 = it3 + 1; state = Mr;}
     bb4:	30 91 f9 0a 	lds	r19, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     bb8:	40 91 f6 0a 	lds	r20, 0x0AF6	; 0x800af6 <it3.2227>
     bbc:	50 91 f7 0a 	lds	r21, 0x0AF7	; 0x800af7 <it3.2227+0x1>
     bc0:	e0 91 05 0d 	lds	r30, 0x0D05	; 0x800d05 <it4>
     bc4:	f0 e0       	ldi	r31, 0x00	; 0
     bc6:	ee 0f       	add	r30, r30
     bc8:	ff 1f       	adc	r31, r31
     bca:	e5 5e       	subi	r30, 0xE5	; 229
     bcc:	fe 4f       	sbci	r31, 0xFE	; 254
     bce:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
     bd2:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     bd6:	88 0f       	add	r24, r24
     bd8:	99 1f       	adc	r25, r25
     bda:	01 90       	ld	r0, Z+
     bdc:	f0 81       	ld	r31, Z
     bde:	e0 2d       	mov	r30, r0
     be0:	e8 0f       	add	r30, r24
     be2:	f9 1f       	adc	r31, r25
     be4:	c9 01       	movw	r24, r18
     be6:	88 0f       	add	r24, r24
     be8:	99 1f       	adc	r25, r25
     bea:	01 90       	ld	r0, Z+
     bec:	f0 81       	ld	r31, Z
     bee:	e0 2d       	mov	r30, r0
     bf0:	e8 0f       	add	r30, r24
     bf2:	f9 1f       	adc	r31, r25
     bf4:	80 81       	ld	r24, Z
     bf6:	91 81       	ldd	r25, Z+1	; 0x01
     bf8:	48 17       	cp	r20, r24
     bfa:	59 07       	cpc	r21, r25
     bfc:	38 f4       	brcc	.+14     	; 0xc0c <melodyTick+0x512>
     bfe:	4f 5f       	subi	r20, 0xFF	; 255
     c00:	5f 4f       	sbci	r21, 0xFF	; 255
     c02:	50 93 f7 0a 	sts	0x0AF7, r21	; 0x800af7 <it3.2227+0x1>
     c06:	40 93 f6 0a 	sts	0x0AF6, r20	; 0x800af6 <it3.2227>
     c0a:	f2 c0       	rjmp	.+484    	; 0xdf0 <melodyTick+0x6f6>
     c0c:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
		else {
			it3 = 0;
     c10:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     c14:	2f 5f       	subi	r18, 0xFF	; 255
			it2 = it2 + 1;
     c16:	3f 4f       	sbci	r19, 0xFF	; 255
     c18:	30 93 f9 0a 	sts	0x0AF9, r19	; 0x800af9 <it2.2226+0x1>
     c1c:	20 93 f8 0a 	sts	0x0AF8, r18	; 0x800af8 <it2.2226>
     c20:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     c22:	d0 e0       	ldi	r29, 0x00	; 0
     c24:	e5 c0       	rjmp	.+458    	; 0xdf0 <melodyTick+0x6f6>
     c26:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		break;
		case Mp:
		if (prevSong && (it1 == 0)) {
     c2a:	88 23       	and	r24, r24
     c2c:	a9 f1       	breq	.+106    	; 0xc98 <melodyTick+0x59e>
     c2e:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
     c32:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     c36:	89 2b       	or	r24, r25
     c38:	f1 f4       	brne	.+60     	; 0xc76 <melodyTick+0x57c>
     c3a:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
			it1 = 0;
     c3e:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     c42:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
			it2 = 0;
     c46:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     c4a:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
			it3 = 0;
     c4e:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     c52:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			if (it4 == 0) {it4 = playList - 1;}
     c56:	81 11       	cpse	r24, r1
     c58:	06 c0       	rjmp	.+12     	; 0xc66 <melodyTick+0x56c>
     c5a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <playList>
     c5e:	81 50       	subi	r24, 0x01	; 1
     c60:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     c64:	03 c0       	rjmp	.+6      	; 0xc6c <melodyTick+0x572>
     c66:	81 50       	subi	r24, 0x01	; 1
		else {it4 = it4 - 1;}
     c68:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     c6c:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <paused>
			paused = 0;
     c70:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     c72:	d0 e0       	ldi	r29, 0x00	; 0
     c74:	bd c0       	rjmp	.+378    	; 0xdf0 <melodyTick+0x6f6>
			break;
     c76:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
		} 
		else if (prevSong){
			it1 = 0;
     c7a:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     c7e:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
			it2 = 0;
     c82:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     c86:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
			it3 = 0;
     c8a:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     c8e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <paused>
			paused = 0;
     c92:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     c94:	d0 e0       	ldi	r29, 0x00	; 0
     c96:	ac c0       	rjmp	.+344    	; 0xdf0 <melodyTick+0x6f6>
			break;
     c98:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
     c9c:	88 23       	and	r24, r24
     c9e:	41 f1       	breq	.+80     	; 0xcf0 <melodyTick+0x5f6>
     ca0:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2225+0x1>
			it1 = 0;
     ca4:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2225>
     ca8:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2226+0x1>
			it2 = 0;
     cac:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2226>
     cb0:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2227+0x1>
			it3 = 0;
     cb4:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2227>
     cb8:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			it4 = it4 + 1;
     cbc:	8f 5f       	subi	r24, 0xFF	; 255
     cbe:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     cc2:	90 e0       	ldi	r25, 0x00	; 0
			if (it4 == playList) {it4 = 0;}
     cc4:	a0 e0       	ldi	r26, 0x00	; 0
     cc6:	b0 e0       	ldi	r27, 0x00	; 0
     cc8:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
     ccc:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
     cd0:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
     cd4:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
     cd8:	84 17       	cp	r24, r20
     cda:	95 07       	cpc	r25, r21
     cdc:	a6 07       	cpc	r26, r22
     cde:	b7 07       	cpc	r27, r23
     ce0:	11 f4       	brne	.+4      	; 0xce6 <melodyTick+0x5ec>
     ce2:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
			paused = 0;
     ce6:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <paused>
			state = Mplay;
     cea:	c2 e0       	ldi	r28, 0x02	; 2
     cec:	d0 e0       	ldi	r29, 0x00	; 0
			break;
     cee:	80 c0       	rjmp	.+256    	; 0xdf0 <melodyTick+0x6f6>
		}
		if (paused) {DisplayPaused(); state = Mp;}
     cf0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
     cf4:	88 23       	and	r24, r24
     cf6:	11 f0       	breq	.+4      	; 0xcfc <melodyTick+0x602>
     cf8:	ef dc       	rcall	.-1570   	; 0x6d8 <DisplayPaused>
				}
				else if (it4 == 2) {
					DisplaySong3();
				}*/
		else {
			if (placeHolder == Ml) {
     cfa:	7a c0       	rjmp	.+244    	; 0xdf0 <melodyTick+0x6f6>
     cfc:	80 91 f5 0a 	lds	r24, 0x0AF5	; 0x800af5 <placeHolder.2228>
     d00:	83 30       	cpi	r24, 0x03	; 3
				if (it4 == 0) {
     d02:	09 f0       	breq	.+2      	; 0xd06 <melodyTick+0x60c>
     d04:	66 c0       	rjmp	.+204    	; 0xdd2 <melodyTick+0x6d8>
     d06:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
					DisplaySong1();
     d0a:	81 11       	cpse	r24, r1
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <melodyTick+0x618>
     d0e:	b1 dc       	rcall	.-1694   	; 0x672 <DisplaySong1>
				}
				else if (it4 == 1) {
     d10:	08 c0       	rjmp	.+16     	; 0xd22 <melodyTick+0x628>
     d12:	81 30       	cpi	r24, 0x01	; 1
					DisplaySong2();
     d14:	11 f4       	brne	.+4      	; 0xd1a <melodyTick+0x620>
     d16:	be dc       	rcall	.-1668   	; 0x694 <DisplaySong2>
     d18:	04 c0       	rjmp	.+8      	; 0xd22 <melodyTick+0x628>
				}
				else if (it4 == 2) {
     d1a:	82 30       	cpi	r24, 0x02	; 2
     d1c:	09 f0       	breq	.+2      	; 0xd20 <melodyTick+0x626>
     d1e:	59 c0       	rjmp	.+178    	; 0xdd2 <melodyTick+0x6d8>
					DisplaySong3();
     d20:	ca dc       	rcall	.-1644   	; 0x6b6 <DisplaySong3>
     d22:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
				}
				if (it4 == 0) {
     d26:	81 11       	cpse	r24, r1
     d28:	1b c0       	rjmp	.+54     	; 0xd60 <melodyTick+0x666>
     d2a:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
					play(playlistMel[it4][it1][it2]);
     d2e:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     d32:	88 0f       	add	r24, r24
     d34:	99 1f       	adc	r25, r25
     d36:	e0 91 27 01 	lds	r30, 0x0127	; 0x800127 <playlistMel>
     d3a:	f0 91 28 01 	lds	r31, 0x0128	; 0x800128 <playlistMel+0x1>
     d3e:	e8 0f       	add	r30, r24
     d40:	f9 1f       	adc	r31, r25
     d42:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2226>
     d46:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     d4a:	88 0f       	add	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	01 90       	ld	r0, Z+
     d50:	f0 81       	ld	r31, Z
     d52:	e0 2d       	mov	r30, r0
     d54:	e8 0f       	add	r30, r24
     d56:	f9 1f       	adc	r31, r25
     d58:	80 81       	ld	r24, Z
     d5a:	91 81       	ldd	r25, Z+1	; 0x01
     d5c:	70 dc       	rcall	.-1824   	; 0x63e <play>
     d5e:	39 c0       	rjmp	.+114    	; 0xdd2 <melodyTick+0x6d8>
     d60:	81 30       	cpi	r24, 0x01	; 1
					//DisplaySong1();
					
				}
				else if (it4 == 1) {
     d62:	d9 f4       	brne	.+54     	; 0xd9a <melodyTick+0x6a0>
     d64:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
					play(playlistMel[it4][it1][it2]);
     d68:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     d6c:	88 0f       	add	r24, r24
     d6e:	99 1f       	adc	r25, r25
     d70:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <playlistMel+0x2>
     d74:	f0 91 2a 01 	lds	r31, 0x012A	; 0x80012a <playlistMel+0x3>
     d78:	e8 0f       	add	r30, r24
     d7a:	f9 1f       	adc	r31, r25
     d7c:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2226>
     d80:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     d84:	88 0f       	add	r24, r24
     d86:	99 1f       	adc	r25, r25
     d88:	01 90       	ld	r0, Z+
     d8a:	f0 81       	ld	r31, Z
     d8c:	e0 2d       	mov	r30, r0
     d8e:	e8 0f       	add	r30, r24
     d90:	f9 1f       	adc	r31, r25
     d92:	80 81       	ld	r24, Z
     d94:	91 81       	ldd	r25, Z+1	; 0x01
     d96:	53 dc       	rcall	.-1882   	; 0x63e <play>
     d98:	1c c0       	rjmp	.+56     	; 0xdd2 <melodyTick+0x6d8>
     d9a:	82 30       	cpi	r24, 0x02	; 2
					//DisplaySong2();
					
				}
				else if (it4 == 2) {
     d9c:	d1 f4       	brne	.+52     	; 0xdd2 <melodyTick+0x6d8>
     d9e:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2225>
					play(playlistMel[it4][it1][it2]);
     da2:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2225+0x1>
     da6:	88 0f       	add	r24, r24
     da8:	99 1f       	adc	r25, r25
     daa:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <playlistMel+0x4>
     dae:	f0 91 2c 01 	lds	r31, 0x012C	; 0x80012c <playlistMel+0x5>
     db2:	e8 0f       	add	r30, r24
     db4:	f9 1f       	adc	r31, r25
     db6:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2226>
     dba:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2226+0x1>
     dbe:	88 0f       	add	r24, r24
     dc0:	99 1f       	adc	r25, r25
     dc2:	01 90       	ld	r0, Z+
     dc4:	f0 81       	ld	r31, Z
     dc6:	e0 2d       	mov	r30, r0
     dc8:	e8 0f       	add	r30, r24
     dca:	f9 1f       	adc	r31, r25
     dcc:	80 81       	ld	r24, Z
     dce:	91 81       	ldd	r25, Z+1	; 0x01
     dd0:	36 dc       	rcall	.-1940   	; 0x63e <play>
     dd2:	c0 91 f5 0a 	lds	r28, 0x0AF5	; 0x800af5 <placeHolder.2228>
				}
				//play(playlistMel[it4][it1][it2]);
					
				}
			//DisplayName(it4);
			state = placeHolder;
     dd6:	d0 e0       	ldi	r29, 0x00	; 0
     dd8:	0b c0       	rjmp	.+22     	; 0xdf0 <melodyTick+0x6f6>
     dda:	c2 e0       	ldi	r28, 0x02	; 2
			prevSong = 0;
			nextSong = 0;
			silence();
			break;
		case Mwait:
			if (!paused) {state= Mplay;}
     ddc:	d0 e0       	ldi	r29, 0x00	; 0
     dde:	08 c0       	rjmp	.+16     	; 0xdf0 <melodyTick+0x6f6>
     de0:	c1 e0       	ldi	r28, 0x01	; 1
			break;
		}
		if (playlistMel[it4][it1][it2] == -1) {it1 = it1 + 1; it2 = 0;}
		if (it1 == numRows[it4]) {
			songDone = 1;
			state = Mwait;
     de2:	d0 e0       	ldi	r29, 0x00	; 0
     de4:	05 c0       	rjmp	.+10     	; 0xdf0 <melodyTick+0x6f6>
     de6:	c2 e0       	ldi	r28, 0x02	; 2
			it1 = 0;
			it2 = 0;
			it3 = 0;
			it4 = it4 + 1;
			if (it4 == playList) {it4 = 0;}
			state = Mplay;
     de8:	d0 e0       	ldi	r29, 0x00	; 0
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <melodyTick+0x6f6>
     dec:	c2 e0       	ldi	r28, 0x02	; 2
			it1 = 0;
			 it2 = 0;
			 it3 = 0;
				it4 = it4 + 1;
			if (it4 == playList) {it4 = 0;}
			state = Mplay;
     dee:	d0 e0       	ldi	r29, 0x00	; 0
     df0:	ce 01       	movw	r24, r28
		}
		break;
	}
	//DisplayName(it4);
	return state;
}
     df2:	df 91       	pop	r29
     df4:	cf 91       	pop	r28
     df6:	1f 91       	pop	r17
     df8:	0f 91       	pop	r16
     dfa:	08 95       	ret

00000dfc <bassTick>:
     dfc:	0f 93       	push	r16
unsigned char it42;
enum BassStates{Binit, Bwait, Bplay, Bl, Br, Bp};
int bassTick(int state) {
     dfe:	1f 93       	push	r17
     e00:	cf 93       	push	r28
     e02:	df 93       	push	r29
     e04:	ec 01       	movw	r28, r24
	static unsigned short it1;
	static unsigned short it2;
	static unsigned short it3;
	//static unsigned char it42 = 0;
	static unsigned char placeHolder;
	switch(state) {
     e06:	82 30       	cpi	r24, 0x02	; 2
     e08:	91 05       	cpc	r25, r1
     e0a:	69 f1       	breq	.+90     	; 0xe66 <bassTick+0x6a>
     e0c:	2c f4       	brge	.+10     	; 0xe18 <bassTick+0x1c>
     e0e:	00 97       	sbiw	r24, 0x00	; 0
     e10:	69 f0       	breq	.+26     	; 0xe2c <bassTick+0x30>
     e12:	01 97       	sbiw	r24, 0x01	; 1
     e14:	11 f1       	breq	.+68     	; 0xe5a <bassTick+0x5e>
     e16:	5d c3       	rjmp	.+1722   	; 0x14d2 <bassTick+0x6d6>
     e18:	84 30       	cpi	r24, 0x04	; 4
     e1a:	91 05       	cpc	r25, r1
     e1c:	09 f4       	brne	.+2      	; 0xe20 <bassTick+0x24>
     e1e:	db c1       	rjmp	.+950    	; 0x11d6 <bassTick+0x3da>
     e20:	0c f4       	brge	.+2      	; 0xe24 <bassTick+0x28>
     e22:	36 c1       	rjmp	.+620    	; 0x1090 <bassTick+0x294>
     e24:	05 97       	sbiw	r24, 0x05	; 5
     e26:	09 f4       	brne	.+2      	; 0xe2a <bassTick+0x2e>
     e28:	7f c2       	rjmp	.+1278   	; 0x1328 <bassTick+0x52c>
     e2a:	53 c3       	rjmp	.+1702   	; 0x14d2 <bassTick+0x6d6>
		case Binit:
			state= Bwait;
			it1 = 0;
     e2c:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
     e30:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
			it2 = 0;
     e34:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
     e38:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
			it3 = 0;
     e3c:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
     e40:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
			it42 = 1;
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
			prevSong = 0;
     e4a:	10 92 06 0d 	sts	0x0D06, r1	; 0x800d06 <prevSong>
			nextSong = 0;
     e4e:	10 92 03 0d 	sts	0x0D03, r1	; 0x800d03 <nextSong>
			silenceB();
     e52:	0a dc       	rcall	.-2028   	; 0x668 <silenceB>
	static unsigned short it3;
	//static unsigned char it42 = 0;
	static unsigned char placeHolder;
	switch(state) {
		case Binit:
			state= Bwait;
     e54:	c1 e0       	ldi	r28, 0x01	; 1
     e56:	d0 e0       	ldi	r29, 0x00	; 0
			it3 = 0;
			it42 = 1;
			prevSong = 0;
			nextSong = 0;
			silenceB();
			break;
     e58:	3c c3       	rjmp	.+1656   	; 0x14d2 <bassTick+0x6d6>
		case Bwait:
			if (!paused) {state= Bplay;}
     e5a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
     e5e:	88 23       	and	r24, r24
     e60:	09 f4       	brne	.+2      	; 0xe64 <bassTick+0x68>
     e62:	2c c3       	rjmp	.+1624   	; 0x14bc <bassTick+0x6c0>
     e64:	36 c3       	rjmp	.+1644   	; 0x14d2 <bassTick+0x6d6>
			else {state= Bwait;}
			break;
		case Bplay:
			songDone = 0;
     e66:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <songDone>
			if (paused) {
     e6a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
     e6e:	88 23       	and	r24, r24
			silenceB();
     e70:	41 f0       	breq	.+16     	; 0xe82 <bassTick+0x86>
			DisplayPaused();
     e72:	fa db       	rcall	.-2060   	; 0x668 <silenceB>
     e74:	31 dc       	rcall	.-1950   	; 0x6d8 <DisplayPaused>
			placeHolder = state;
     e76:	82 e0       	ldi	r24, 0x02	; 2
     e78:	80 93 ee 0a 	sts	0x0AEE, r24	; 0x800aee <placeHolder.2250>
			state = Bp;
     e7c:	c5 e0       	ldi	r28, 0x05	; 5
     e7e:	d0 e0       	ldi	r29, 0x00	; 0
			break;
     e80:	28 c3       	rjmp	.+1616   	; 0x14d2 <bassTick+0x6d6>
					DisplaySong2();
				}
				else if (it4 == 2) {
					DisplaySong3();
				}*/
			if (prevSong && (it1 == 0)) {
     e82:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
     e86:	88 23       	and	r24, r24
     e88:	69 f1       	breq	.+90     	; 0xee4 <bassTick+0xe8>
     e8a:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
     e8e:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
     e92:	89 2b       	or	r24, r25
     e94:	d1 f4       	brne	.+52     	; 0xeca <bassTick+0xce>
				it1 = 0;
     e96:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
     e9a:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
				it2 = 0;
     e9e:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
     ea2:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
				it3 = 0;
     ea6:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
     eaa:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
				if (it42 == 0) {it42 = playList - 1;}
     eae:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
     eb2:	81 11       	cpse	r24, r1
     eb4:	06 c0       	rjmp	.+12     	; 0xec2 <bassTick+0xc6>
     eb6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <playList>
     eba:	81 50       	subi	r24, 0x01	; 1
     ebc:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
     ec0:	08 c3       	rjmp	.+1552   	; 0x14d2 <bassTick+0x6d6>
				else {it42 = it42 - 1;}
     ec2:	81 50       	subi	r24, 0x01	; 1
     ec4:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
     ec8:	04 c3       	rjmp	.+1544   	; 0x14d2 <bassTick+0x6d6>
				state = Bplay;
				break;
			}
			else if (prevSong){
				it1 = 0;
     eca:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
     ece:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
				it2 = 0;
     ed2:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
     ed6:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
				it3 = 0;
     eda:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
     ede:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
				state = Bplay;
				break;
     ee2:	f7 c2       	rjmp	.+1518   	; 0x14d2 <bassTick+0x6d6>
			}
			if (nextSong) {
     ee4:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
     ee8:	88 23       	and	r24, r24
     eea:	29 f1       	breq	.+74     	; 0xf36 <bassTick+0x13a>
				it1 = 0;
     eec:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
     ef0:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
				it2 = 0;
     ef4:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
     ef8:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
				it3 = 0;
     efc:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
     f00:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
				it42 = it42 + 1;;
     f04:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
     f08:	8f 5f       	subi	r24, 0xFF	; 255
     f0a:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
			if (it42 == playList) {it42 = 0;}
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	a0 e0       	ldi	r26, 0x00	; 0
     f12:	b0 e0       	ldi	r27, 0x00	; 0
     f14:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
     f18:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
     f1c:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
     f20:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
     f24:	84 17       	cp	r24, r20
     f26:	95 07       	cpc	r25, r21
     f28:	a6 07       	cpc	r26, r22
     f2a:	b7 07       	cpc	r27, r23
     f2c:	09 f0       	breq	.+2      	; 0xf30 <bassTick+0x134>
     f2e:	d1 c2       	rjmp	.+1442   	; 0x14d2 <bassTick+0x6d6>
     f30:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
     f34:	ce c2       	rjmp	.+1436   	; 0x14d2 <bassTick+0x6d6>
				state = Bplay;
				break;
			}
			if (playlistBas[it42][it1][it2] == -1) {it1 = it1 + 1; it2 = 0;}
     f36:	60 91 04 0d 	lds	r22, 0x0D04	; 0x800d04 <it42>
     f3a:	26 2f       	mov	r18, r22
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	f9 01       	movw	r30, r18
     f40:	ee 0f       	add	r30, r30
     f42:	ff 1f       	adc	r31, r31
     f44:	eb 5e       	subi	r30, 0xEB	; 235
     f46:	fe 4f       	sbci	r31, 0xFE	; 254
     f48:	40 81       	ld	r20, Z
     f4a:	51 81       	ldd	r21, Z+1	; 0x01
     f4c:	00 91 f3 0a 	lds	r16, 0x0AF3	; 0x800af3 <it1.2247>
     f50:	10 91 f4 0a 	lds	r17, 0x0AF4	; 0x800af4 <it1.2247+0x1>
     f54:	d8 01       	movw	r26, r16
     f56:	aa 0f       	add	r26, r26
     f58:	bb 1f       	adc	r27, r27
     f5a:	a4 0f       	add	r26, r20
     f5c:	b5 1f       	adc	r27, r21
     f5e:	e0 91 f1 0a 	lds	r30, 0x0AF1	; 0x800af1 <it2.2248>
     f62:	f0 91 f2 0a 	lds	r31, 0x0AF2	; 0x800af2 <it2.2248+0x1>
     f66:	cf 01       	movw	r24, r30
     f68:	88 0f       	add	r24, r24
     f6a:	99 1f       	adc	r25, r25
     f6c:	ed 91       	ld	r30, X+
     f6e:	fc 91       	ld	r31, X
     f70:	e8 0f       	add	r30, r24
     f72:	f9 1f       	adc	r31, r25
     f74:	80 81       	ld	r24, Z
     f76:	91 81       	ldd	r25, Z+1	; 0x01
     f78:	01 96       	adiw	r24, 0x01	; 1
     f7a:	51 f4       	brne	.+20     	; 0xf90 <bassTick+0x194>
     f7c:	0f 5f       	subi	r16, 0xFF	; 255
     f7e:	1f 4f       	sbci	r17, 0xFF	; 255
     f80:	10 93 f4 0a 	sts	0x0AF4, r17	; 0x800af4 <it1.2247+0x1>
     f84:	00 93 f3 0a 	sts	0x0AF3, r16	; 0x800af3 <it1.2247>
     f88:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
     f8c:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
			if (it1 == numRows[it42]) {
     f90:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
     f94:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
     f98:	f9 01       	movw	r30, r18
     f9a:	e0 50       	subi	r30, 0x00	; 0
     f9c:	ff 4f       	sbci	r31, 0xFF	; 255
     f9e:	20 81       	ld	r18, Z
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	28 17       	cp	r18, r24
     fa4:	39 07       	cpc	r19, r25
     fa6:	41 f5       	brne	.+80     	; 0xff8 <bassTick+0x1fc>
				songDone = 1;
     fa8:	81 e0       	ldi	r24, 0x01	; 1
     faa:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <songDone>
				state = Bwait;
				it1 = 0;
     fae:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
     fb2:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
				it2 = 0;
     fb6:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
     fba:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
				it3 = 0;
     fbe:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
     fc2:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
				it42 = it42 + 1;
     fc6:	86 0f       	add	r24, r22
     fc8:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
				if (it42 == playList) {it42 = 0;}
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	a0 e0       	ldi	r26, 0x00	; 0
     fd0:	b0 e0       	ldi	r27, 0x00	; 0
     fd2:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
     fd6:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
     fda:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
     fde:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
     fe2:	84 17       	cp	r24, r20
     fe4:	95 07       	cpc	r25, r21
     fe6:	a6 07       	cpc	r26, r22
     fe8:	b7 07       	cpc	r27, r23
     fea:	09 f0       	breq	.+2      	; 0xfee <bassTick+0x1f2>
     fec:	6a c2       	rjmp	.+1236   	; 0x14c2 <bassTick+0x6c6>
     fee:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
				break;
			}
			if (playlistBas[it42][it1][it2] == -1) {it1 = it1 + 1; it2 = 0;}
			if (it1 == numRows[it42]) {
				songDone = 1;
				state = Bwait;
     ff2:	c1 e0       	ldi	r28, 0x01	; 1
     ff4:	d0 e0       	ldi	r29, 0x00	; 0
     ff6:	6d c2       	rjmp	.+1242   	; 0x14d2 <bassTick+0x6d6>
					DisplaySong2();
				}
				else if (it4 == 2) {
					DisplaySong3();
				}*/
		if (it42 == 0) {
     ff8:	61 11       	cpse	r22, r1
     ffa:	17 c0       	rjmp	.+46     	; 0x102a <bassTick+0x22e>
			playB(playlistBas[it42][it1][it2]);
     ffc:	88 0f       	add	r24, r24
     ffe:	99 1f       	adc	r25, r25
    1000:	fa 01       	movw	r30, r20
    1002:	e8 0f       	add	r30, r24
    1004:	f9 1f       	adc	r31, r25
    1006:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2248>
    100a:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2248+0x1>
    100e:	88 0f       	add	r24, r24
    1010:	99 1f       	adc	r25, r25
    1012:	01 90       	ld	r0, Z+
    1014:	f0 81       	ld	r31, Z
    1016:	e0 2d       	mov	r30, r0
    1018:	e8 0f       	add	r30, r24
    101a:	f9 1f       	adc	r31, r25
    101c:	80 81       	ld	r24, Z
    101e:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong1();
    1020:	1b db       	rcall	.-2506   	; 0x658 <playB>
    1022:	27 db       	rcall	.-2482   	; 0x672 <DisplaySong1>
			state = Bl;
    1024:	c3 e0       	ldi	r28, 0x03	; 3
    1026:	d0 e0       	ldi	r29, 0x00	; 0
    1028:	54 c2       	rjmp	.+1192   	; 0x14d2 <bassTick+0x6d6>
		}
		else if (it42 == 1) {
    102a:	61 30       	cpi	r22, 0x01	; 1
    102c:	b9 f4       	brne	.+46     	; 0x105c <bassTick+0x260>
			playB(playlistBas[it42][it1][it2]);
    102e:	88 0f       	add	r24, r24
    1030:	99 1f       	adc	r25, r25
    1032:	fa 01       	movw	r30, r20
    1034:	e8 0f       	add	r30, r24
    1036:	f9 1f       	adc	r31, r25
    1038:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2248>
    103c:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2248+0x1>
    1040:	88 0f       	add	r24, r24
    1042:	99 1f       	adc	r25, r25
    1044:	01 90       	ld	r0, Z+
    1046:	f0 81       	ld	r31, Z
    1048:	e0 2d       	mov	r30, r0
    104a:	e8 0f       	add	r30, r24
    104c:	f9 1f       	adc	r31, r25
    104e:	80 81       	ld	r24, Z
    1050:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong2();
    1052:	02 db       	rcall	.-2556   	; 0x658 <playB>
    1054:	1f db       	rcall	.-2498   	; 0x694 <DisplaySong2>
			state = Bl;
    1056:	c3 e0       	ldi	r28, 0x03	; 3
    1058:	d0 e0       	ldi	r29, 0x00	; 0
    105a:	3b c2       	rjmp	.+1142   	; 0x14d2 <bassTick+0x6d6>
		}
		else if (it42 == 2) {
    105c:	62 30       	cpi	r22, 0x02	; 2
    105e:	09 f0       	breq	.+2      	; 0x1062 <bassTick+0x266>
    1060:	38 c2       	rjmp	.+1136   	; 0x14d2 <bassTick+0x6d6>
			playB(playlistBas[it42][it1][it2]);
    1062:	88 0f       	add	r24, r24
    1064:	99 1f       	adc	r25, r25
    1066:	fa 01       	movw	r30, r20
    1068:	e8 0f       	add	r30, r24
    106a:	f9 1f       	adc	r31, r25
    106c:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2248>
    1070:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2248+0x1>
    1074:	88 0f       	add	r24, r24
    1076:	99 1f       	adc	r25, r25
    1078:	01 90       	ld	r0, Z+
    107a:	f0 81       	ld	r31, Z
    107c:	e0 2d       	mov	r30, r0
    107e:	e8 0f       	add	r30, r24
    1080:	f9 1f       	adc	r31, r25
    1082:	80 81       	ld	r24, Z
    1084:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong3();
    1086:	e8 da       	rcall	.-2608   	; 0x658 <playB>
			state = Bl;
    1088:	16 db       	rcall	.-2516   	; 0x6b6 <DisplaySong3>
    108a:	c3 e0       	ldi	r28, 0x03	; 3
    108c:	d0 e0       	ldi	r29, 0x00	; 0
		//
		//playB(playlistBas[it42][it1][it2]);
		//state = Bl;
		break;
		case Bl:
			if (paused) {
    108e:	21 c2       	rjmp	.+1090   	; 0x14d2 <bassTick+0x6d6>
    1090:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
    1094:	88 23       	and	r24, r24
				silenceB();
    1096:	41 f0       	breq	.+16     	; 0x10a8 <bassTick+0x2ac>
    1098:	e7 da       	rcall	.-2610   	; 0x668 <silenceB>
				DisplayPaused();
    109a:	1e db       	rcall	.-2500   	; 0x6d8 <DisplayPaused>
    109c:	83 e0       	ldi	r24, 0x03	; 3
				placeHolder = state;
    109e:	80 93 ee 0a 	sts	0x0AEE, r24	; 0x800aee <placeHolder.2250>
    10a2:	c5 e0       	ldi	r28, 0x05	; 5
				state = Bp;
    10a4:	d0 e0       	ldi	r29, 0x00	; 0
    10a6:	15 c2       	rjmp	.+1066   	; 0x14d2 <bassTick+0x6d6>
				break;
    10a8:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
			}
			if (prevSong && (it1 == 0)) {
    10ac:	88 23       	and	r24, r24
    10ae:	99 f1       	breq	.+102    	; 0x1116 <bassTick+0x31a>
    10b0:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
    10b4:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
    10b8:	89 2b       	or	r24, r25
    10ba:	f1 f4       	brne	.+60     	; 0x10f8 <bassTick+0x2fc>
    10bc:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
				it1 = 0;
    10c0:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    10c4:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    10c8:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    10cc:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    10d0:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    10d4:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
				if (it42 == 0) {it42 = playList - 1;}
    10d8:	81 11       	cpse	r24, r1
    10da:	08 c0       	rjmp	.+16     	; 0x10ec <bassTick+0x2f0>
    10dc:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <playList>
    10e0:	81 50       	subi	r24, 0x01	; 1
    10e2:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    10e6:	c2 e0       	ldi	r28, 0x02	; 2
			else {it42 = it42 - 1;}
			state = Bplay;
    10e8:	d0 e0       	ldi	r29, 0x00	; 0
    10ea:	f3 c1       	rjmp	.+998    	; 0x14d2 <bassTick+0x6d6>
    10ec:	81 50       	subi	r24, 0x01	; 1
			if (prevSong && (it1 == 0)) {
				it1 = 0;
				it2 = 0;
				it3 = 0;
				if (it42 == 0) {it42 = playList - 1;}
			else {it42 = it42 - 1;}
    10ee:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    10f2:	c2 e0       	ldi	r28, 0x02	; 2
			state = Bplay;
    10f4:	d0 e0       	ldi	r29, 0x00	; 0
    10f6:	ed c1       	rjmp	.+986    	; 0x14d2 <bassTick+0x6d6>
    10f8:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
			break;
			}
			else if (prevSong){
				it1 = 0;
    10fc:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    1100:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    1104:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    1108:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    110c:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    1110:	c2 e0       	ldi	r28, 0x02	; 2
				state = Bplay;
    1112:	d0 e0       	ldi	r29, 0x00	; 0
    1114:	de c1       	rjmp	.+956    	; 0x14d2 <bassTick+0x6d6>
				break;
    1116:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
			}
			if (nextSong) {
    111a:	88 23       	and	r24, r24
    111c:	39 f1       	breq	.+78     	; 0x116c <bassTick+0x370>
    111e:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
				it1 = 0;
    1122:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    1126:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    112a:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    112e:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    1132:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    1136:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
				it42 = it42 + 1;
    113a:	8f 5f       	subi	r24, 0xFF	; 255
    113c:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    1140:	90 e0       	ldi	r25, 0x00	; 0
				if (it42 == playList) {it42 = 0;}
    1142:	a0 e0       	ldi	r26, 0x00	; 0
    1144:	b0 e0       	ldi	r27, 0x00	; 0
    1146:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
    114a:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
    114e:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
    1152:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
    1156:	84 17       	cp	r24, r20
    1158:	95 07       	cpc	r25, r21
    115a:	a6 07       	cpc	r26, r22
    115c:	b7 07       	cpc	r27, r23
    115e:	09 f0       	breq	.+2      	; 0x1162 <bassTick+0x366>
    1160:	b3 c1       	rjmp	.+870    	; 0x14c8 <bassTick+0x6cc>
    1162:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
    1166:	c2 e0       	ldi	r28, 0x02	; 2
				state = Bplay;
    1168:	d0 e0       	ldi	r29, 0x00	; 0
    116a:	b3 c1       	rjmp	.+870    	; 0x14d2 <bassTick+0x6d6>
    116c:	20 91 ef 0a 	lds	r18, 0x0AEF	; 0x800aef <it3.2249>
				break;
			}
			if (it3 < playlistBasNL[it42][it1][it2]) {it3 = it3 + 1; state = Bl;}
    1170:	30 91 f0 0a 	lds	r19, 0x0AF0	; 0x800af0 <it3.2249+0x1>
    1174:	e0 91 04 0d 	lds	r30, 0x0D04	; 0x800d04 <it42>
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	ee 0f       	add	r30, r30
    117c:	ff 1f       	adc	r31, r31
    117e:	e1 5f       	subi	r30, 0xF1	; 241
    1180:	fe 4f       	sbci	r31, 0xFE	; 254
    1182:	a0 91 f3 0a 	lds	r26, 0x0AF3	; 0x800af3 <it1.2247>
    1186:	b0 91 f4 0a 	lds	r27, 0x0AF4	; 0x800af4 <it1.2247+0x1>
    118a:	cd 01       	movw	r24, r26
    118c:	88 0f       	add	r24, r24
    118e:	99 1f       	adc	r25, r25
    1190:	a0 81       	ld	r26, Z
    1192:	b1 81       	ldd	r27, Z+1	; 0x01
    1194:	a8 0f       	add	r26, r24
    1196:	b9 1f       	adc	r27, r25
    1198:	e0 91 f1 0a 	lds	r30, 0x0AF1	; 0x800af1 <it2.2248>
    119c:	f0 91 f2 0a 	lds	r31, 0x0AF2	; 0x800af2 <it2.2248+0x1>
    11a0:	cf 01       	movw	r24, r30
    11a2:	88 0f       	add	r24, r24
    11a4:	99 1f       	adc	r25, r25
    11a6:	ed 91       	ld	r30, X+
    11a8:	fc 91       	ld	r31, X
    11aa:	e8 0f       	add	r30, r24
    11ac:	f9 1f       	adc	r31, r25
    11ae:	80 81       	ld	r24, Z
    11b0:	91 81       	ldd	r25, Z+1	; 0x01
    11b2:	28 17       	cp	r18, r24
    11b4:	39 07       	cpc	r19, r25
    11b6:	38 f4       	brcc	.+14     	; 0x11c6 <bassTick+0x3ca>
    11b8:	2f 5f       	subi	r18, 0xFF	; 255
    11ba:	3f 4f       	sbci	r19, 0xFF	; 255
    11bc:	30 93 f0 0a 	sts	0x0AF0, r19	; 0x800af0 <it3.2249+0x1>
    11c0:	20 93 ef 0a 	sts	0x0AEF, r18	; 0x800aef <it3.2249>
    11c4:	86 c1       	rjmp	.+780    	; 0x14d2 <bassTick+0x6d6>
			else {
				it3 = 0;
    11c6:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				silenceB();
    11ca:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
				state = Br;
    11ce:	4c da       	rcall	.-2920   	; 0x668 <silenceB>
    11d0:	c4 e0       	ldi	r28, 0x04	; 4
    11d2:	d0 e0       	ldi	r29, 0x00	; 0
			DisplaySong3();
		}*/
		//DisplayName(it42);
		break;
		case Br:
			if (paused) {
    11d4:	7e c1       	rjmp	.+764    	; 0x14d2 <bassTick+0x6d6>
    11d6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
    11da:	88 23       	and	r24, r24
				silenceB();
    11dc:	41 f0       	breq	.+16     	; 0x11ee <bassTick+0x3f2>
    11de:	44 da       	rcall	.-2936   	; 0x668 <silenceB>
				DisplayPaused();
    11e0:	7b da       	rcall	.-2826   	; 0x6d8 <DisplayPaused>
    11e2:	84 e0       	ldi	r24, 0x04	; 4
				placeHolder = state;
    11e4:	80 93 ee 0a 	sts	0x0AEE, r24	; 0x800aee <placeHolder.2250>
    11e8:	c5 e0       	ldi	r28, 0x05	; 5
				state = Bp;
    11ea:	d0 e0       	ldi	r29, 0x00	; 0
    11ec:	72 c1       	rjmp	.+740    	; 0x14d2 <bassTick+0x6d6>
				break;
    11ee:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
			}
			if (prevSong && (it1 == 0)) {
    11f2:	88 23       	and	r24, r24
    11f4:	99 f1       	breq	.+102    	; 0x125c <bassTick+0x460>
    11f6:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
    11fa:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
    11fe:	89 2b       	or	r24, r25
    1200:	f1 f4       	brne	.+60     	; 0x123e <bassTick+0x442>
    1202:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
				it1 = 0;
    1206:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    120a:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    120e:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    1212:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    1216:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    121a:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
				if (it42 == 0) {it42 = playList - 1;}
    121e:	81 11       	cpse	r24, r1
    1220:	08 c0       	rjmp	.+16     	; 0x1232 <bassTick+0x436>
    1222:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <playList>
    1226:	81 50       	subi	r24, 0x01	; 1
    1228:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    122c:	c2 e0       	ldi	r28, 0x02	; 2
				else {it42 = it42 - 1;}
			state = Bplay;
    122e:	d0 e0       	ldi	r29, 0x00	; 0
    1230:	50 c1       	rjmp	.+672    	; 0x14d2 <bassTick+0x6d6>
    1232:	81 50       	subi	r24, 0x01	; 1
			if (prevSong && (it1 == 0)) {
				it1 = 0;
				it2 = 0;
				it3 = 0;
				if (it42 == 0) {it42 = playList - 1;}
				else {it42 = it42 - 1;}
    1234:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    1238:	c2 e0       	ldi	r28, 0x02	; 2
			state = Bplay;
    123a:	d0 e0       	ldi	r29, 0x00	; 0
    123c:	4a c1       	rjmp	.+660    	; 0x14d2 <bassTick+0x6d6>
    123e:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
			break;
			}
			else if (prevSong){
				it1 = 0;
    1242:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    1246:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    124a:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    124e:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    1252:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    1256:	c2 e0       	ldi	r28, 0x02	; 2
				state = Bplay;
    1258:	d0 e0       	ldi	r29, 0x00	; 0
    125a:	3b c1       	rjmp	.+630    	; 0x14d2 <bassTick+0x6d6>
				break;
    125c:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
			}
			if (nextSong) {
    1260:	88 23       	and	r24, r24
    1262:	39 f1       	breq	.+78     	; 0x12b2 <bassTick+0x4b6>
    1264:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
				it1 = 0;
    1268:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    126c:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    1270:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    1274:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    1278:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    127c:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
				it42 = it42 + 1;
    1280:	8f 5f       	subi	r24, 0xFF	; 255
    1282:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    1286:	90 e0       	ldi	r25, 0x00	; 0
				if (it42 == playList) {it42 = 0;}
    1288:	a0 e0       	ldi	r26, 0x00	; 0
    128a:	b0 e0       	ldi	r27, 0x00	; 0
    128c:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
    1290:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
    1294:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
    1298:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
    129c:	84 17       	cp	r24, r20
    129e:	95 07       	cpc	r25, r21
    12a0:	a6 07       	cpc	r26, r22
    12a2:	b7 07       	cpc	r27, r23
    12a4:	09 f0       	breq	.+2      	; 0x12a8 <bassTick+0x4ac>
    12a6:	13 c1       	rjmp	.+550    	; 0x14ce <bassTick+0x6d2>
    12a8:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
    12ac:	c2 e0       	ldi	r28, 0x02	; 2
				state = Bplay;
    12ae:	d0 e0       	ldi	r29, 0x00	; 0
    12b0:	10 c1       	rjmp	.+544    	; 0x14d2 <bassTick+0x6d6>
    12b2:	20 91 f1 0a 	lds	r18, 0x0AF1	; 0x800af1 <it2.2248>
				break;
			}
			if (it3 < playlistBasRL[it42][it1][it2]) {it3 = it3 + 1; state = Br;}
    12b6:	30 91 f2 0a 	lds	r19, 0x0AF2	; 0x800af2 <it2.2248+0x1>
    12ba:	40 91 ef 0a 	lds	r20, 0x0AEF	; 0x800aef <it3.2249>
    12be:	50 91 f0 0a 	lds	r21, 0x0AF0	; 0x800af0 <it3.2249+0x1>
    12c2:	e0 91 04 0d 	lds	r30, 0x0D04	; 0x800d04 <it42>
    12c6:	f0 e0       	ldi	r31, 0x00	; 0
    12c8:	ee 0f       	add	r30, r30
    12ca:	ff 1f       	adc	r31, r31
    12cc:	e7 5f       	subi	r30, 0xF7	; 247
    12ce:	fe 4f       	sbci	r31, 0xFE	; 254
    12d0:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
    12d4:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
    12d8:	88 0f       	add	r24, r24
    12da:	99 1f       	adc	r25, r25
    12dc:	01 90       	ld	r0, Z+
    12de:	f0 81       	ld	r31, Z
    12e0:	e0 2d       	mov	r30, r0
    12e2:	e8 0f       	add	r30, r24
    12e4:	f9 1f       	adc	r31, r25
    12e6:	c9 01       	movw	r24, r18
    12e8:	88 0f       	add	r24, r24
    12ea:	99 1f       	adc	r25, r25
    12ec:	01 90       	ld	r0, Z+
    12ee:	f0 81       	ld	r31, Z
    12f0:	e0 2d       	mov	r30, r0
    12f2:	e8 0f       	add	r30, r24
    12f4:	f9 1f       	adc	r31, r25
    12f6:	80 81       	ld	r24, Z
    12f8:	91 81       	ldd	r25, Z+1	; 0x01
    12fa:	48 17       	cp	r20, r24
    12fc:	59 07       	cpc	r21, r25
    12fe:	38 f4       	brcc	.+14     	; 0x130e <bassTick+0x512>
    1300:	4f 5f       	subi	r20, 0xFF	; 255
    1302:	5f 4f       	sbci	r21, 0xFF	; 255
    1304:	50 93 f0 0a 	sts	0x0AF0, r21	; 0x800af0 <it3.2249+0x1>
    1308:	40 93 ef 0a 	sts	0x0AEF, r20	; 0x800aef <it3.2249>
    130c:	e2 c0       	rjmp	.+452    	; 0x14d2 <bassTick+0x6d6>
    130e:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
			else {
				it3 = 0;
    1312:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    1316:	2f 5f       	subi	r18, 0xFF	; 255
				it2 = it2 + 1;
    1318:	3f 4f       	sbci	r19, 0xFF	; 255
    131a:	30 93 f2 0a 	sts	0x0AF2, r19	; 0x800af2 <it2.2248+0x1>
    131e:	20 93 f1 0a 	sts	0x0AF1, r18	; 0x800af1 <it2.2248>
    1322:	c2 e0       	ldi	r28, 0x02	; 2
				state = Bplay;
    1324:	d0 e0       	ldi	r29, 0x00	; 0
    1326:	d5 c0       	rjmp	.+426    	; 0x14d2 <bassTick+0x6d6>
    1328:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
				}
				else if (it4 == 2) {
					DisplaySong3();
				}*/
		case Bp:
			if (prevSong && (it1 == 0)) {
    132c:	88 23       	and	r24, r24
    132e:	a9 f1       	breq	.+106    	; 0x139a <bassTick+0x59e>
    1330:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
    1334:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
    1338:	89 2b       	or	r24, r25
    133a:	f1 f4       	brne	.+60     	; 0x1378 <bassTick+0x57c>
    133c:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
				it1 = 0;
    1340:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    1344:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    1348:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    134c:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    1350:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    1354:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
				if (it42 == 0) {it42 = playList - 1;}
    1358:	81 11       	cpse	r24, r1
    135a:	06 c0       	rjmp	.+12     	; 0x1368 <bassTick+0x56c>
    135c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <playList>
    1360:	81 50       	subi	r24, 0x01	; 1
    1362:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    1366:	03 c0       	rjmp	.+6      	; 0x136e <bassTick+0x572>
    1368:	81 50       	subi	r24, 0x01	; 1
				else {it42 = it42 - 1;}
    136a:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    136e:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <paused>
				paused = 0;
    1372:	c2 e0       	ldi	r28, 0x02	; 2
				state = Bplay;
    1374:	d0 e0       	ldi	r29, 0x00	; 0
    1376:	ad c0       	rjmp	.+346    	; 0x14d2 <bassTick+0x6d6>
				break;
    1378:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
			} 
			else if (prevSong){
				it1 = 0;
    137c:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    1380:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    1384:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    1388:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    138c:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    1390:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <paused>
				paused = 0;
    1394:	c2 e0       	ldi	r28, 0x02	; 2
				state = Bplay;
    1396:	d0 e0       	ldi	r29, 0x00	; 0
    1398:	9c c0       	rjmp	.+312    	; 0x14d2 <bassTick+0x6d6>
				break;
    139a:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
			}
			if (nextSong) {
    139e:	88 23       	and	r24, r24
    13a0:	41 f1       	breq	.+80     	; 0x13f2 <bassTick+0x5f6>
    13a2:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2247+0x1>
				it1 = 0;
    13a6:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2247>
    13aa:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2248+0x1>
				it2 = 0;
    13ae:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2248>
    13b2:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2249+0x1>
				it3 = 0;
    13b6:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2249>
    13ba:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
				it42 = it42 + 1;
    13be:	8f 5f       	subi	r24, 0xFF	; 255
    13c0:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    13c4:	90 e0       	ldi	r25, 0x00	; 0
				if (it42 == playList) {it42 = 0;}
    13c6:	a0 e0       	ldi	r26, 0x00	; 0
    13c8:	b0 e0       	ldi	r27, 0x00	; 0
    13ca:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <playList>
    13ce:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <playList+0x1>
    13d2:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <playList+0x2>
    13d6:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <playList+0x3>
    13da:	84 17       	cp	r24, r20
    13dc:	95 07       	cpc	r25, r21
    13de:	a6 07       	cpc	r26, r22
    13e0:	b7 07       	cpc	r27, r23
    13e2:	11 f4       	brne	.+4      	; 0x13e8 <bassTick+0x5ec>
    13e4:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
				paused = 0;
    13e8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <paused>
				state = Bplay;
    13ec:	c2 e0       	ldi	r28, 0x02	; 2
    13ee:	d0 e0       	ldi	r29, 0x00	; 0
				break;
    13f0:	70 c0       	rjmp	.+224    	; 0x14d2 <bassTick+0x6d6>
			}
			if (paused) {state = Bp; DisplayPaused();}
    13f2:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <paused>
    13f6:	88 23       	and	r24, r24
    13f8:	11 f0       	breq	.+4      	; 0x13fe <bassTick+0x602>
    13fa:	6e d9       	rcall	.-3364   	; 0x6d8 <DisplayPaused>
    13fc:	6a c0       	rjmp	.+212    	; 0x14d2 <bassTick+0x6d6>
    13fe:	c0 91 ee 0a 	lds	r28, 0x0AEE	; 0x800aee <placeHolder.2250>
				}
				else if (it4 == 2) {
					DisplaySong3();
				}*/
    else {
			if (placeHolder == Bl) {
    1402:	c3 30       	cpi	r28, 0x03	; 3
    1404:	09 f0       	breq	.+2      	; 0x1408 <bassTick+0x60c>
    1406:	58 c0       	rjmp	.+176    	; 0x14b8 <bassTick+0x6bc>
    1408:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
				}
				else if (it4 == 2) {
					DisplaySong3();
				}*/
				//playB(playlistBas[it4][it1][it2]);
				if (it42 == 0) {
    140c:	81 11       	cpse	r24, r1
    140e:	1b c0       	rjmp	.+54     	; 0x1446 <bassTick+0x64a>
    1410:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
					playB(playlistBas[it42][it1][it2]);
    1414:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
    1418:	88 0f       	add	r24, r24
    141a:	99 1f       	adc	r25, r25
    141c:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <playlistBas>
    1420:	f0 91 16 01 	lds	r31, 0x0116	; 0x800116 <playlistBas+0x1>
    1424:	e8 0f       	add	r30, r24
    1426:	f9 1f       	adc	r31, r25
    1428:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2248>
    142c:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2248+0x1>
    1430:	88 0f       	add	r24, r24
    1432:	99 1f       	adc	r25, r25
    1434:	01 90       	ld	r0, Z+
    1436:	f0 81       	ld	r31, Z
    1438:	e0 2d       	mov	r30, r0
    143a:	e8 0f       	add	r30, r24
    143c:	f9 1f       	adc	r31, r25
    143e:	80 81       	ld	r24, Z
    1440:	91 81       	ldd	r25, Z+1	; 0x01
    1442:	0a d9       	rcall	.-3564   	; 0x658 <playB>
    1444:	39 c0       	rjmp	.+114    	; 0x14b8 <bassTick+0x6bc>
    1446:	81 30       	cpi	r24, 0x01	; 1
					//DisplaySong1();
					
				}
				else if (it42 == 1) {
    1448:	d9 f4       	brne	.+54     	; 0x1480 <bassTick+0x684>
    144a:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
					playB(playlistBas[it42][it1][it2]);
    144e:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
    1452:	88 0f       	add	r24, r24
    1454:	99 1f       	adc	r25, r25
    1456:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <playlistBas+0x2>
    145a:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <playlistBas+0x3>
    145e:	e8 0f       	add	r30, r24
    1460:	f9 1f       	adc	r31, r25
    1462:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2248>
    1466:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2248+0x1>
    146a:	88 0f       	add	r24, r24
    146c:	99 1f       	adc	r25, r25
    146e:	01 90       	ld	r0, Z+
    1470:	f0 81       	ld	r31, Z
    1472:	e0 2d       	mov	r30, r0
    1474:	e8 0f       	add	r30, r24
    1476:	f9 1f       	adc	r31, r25
    1478:	80 81       	ld	r24, Z
    147a:	91 81       	ldd	r25, Z+1	; 0x01
    147c:	ed d8       	rcall	.-3622   	; 0x658 <playB>
    147e:	1c c0       	rjmp	.+56     	; 0x14b8 <bassTick+0x6bc>
    1480:	82 30       	cpi	r24, 0x02	; 2
					//DisplaySong2();
					
				}
				else if (it42 == 2) {
    1482:	d1 f4       	brne	.+52     	; 0x14b8 <bassTick+0x6bc>
    1484:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2247>
					playB(playlistBas[it42][it1][it2]);
    1488:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2247+0x1>
    148c:	88 0f       	add	r24, r24
    148e:	99 1f       	adc	r25, r25
    1490:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <playlistBas+0x4>
    1494:	f0 91 1a 01 	lds	r31, 0x011A	; 0x80011a <playlistBas+0x5>
    1498:	e8 0f       	add	r30, r24
    149a:	f9 1f       	adc	r31, r25
    149c:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2248>
    14a0:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2248+0x1>
    14a4:	88 0f       	add	r24, r24
    14a6:	99 1f       	adc	r25, r25
    14a8:	01 90       	ld	r0, Z+
    14aa:	f0 81       	ld	r31, Z
    14ac:	e0 2d       	mov	r30, r0
    14ae:	e8 0f       	add	r30, r24
    14b0:	f9 1f       	adc	r31, r25
    14b2:	80 81       	ld	r24, Z
    14b4:	91 81       	ldd	r25, Z+1	; 0x01
    14b6:	d0 d8       	rcall	.-3680   	; 0x658 <playB>
    14b8:	d0 e0       	ldi	r29, 0x00	; 0
					//playB(playlistBas[it4][it1][it2]);
				}
					
			}
			//DisplayName(it42);
			state = placeHolder;
    14ba:	0b c0       	rjmp	.+22     	; 0x14d2 <bassTick+0x6d6>
    14bc:	c2 e0       	ldi	r28, 0x02	; 2
			prevSong = 0;
			nextSong = 0;
			silenceB();
			break;
		case Bwait:
			if (!paused) {state= Bplay;}
    14be:	d0 e0       	ldi	r29, 0x00	; 0
    14c0:	08 c0       	rjmp	.+16     	; 0x14d2 <bassTick+0x6d6>
    14c2:	c1 e0       	ldi	r28, 0x01	; 1
				break;
			}
			if (playlistBas[it42][it1][it2] == -1) {it1 = it1 + 1; it2 = 0;}
			if (it1 == numRows[it42]) {
				songDone = 1;
				state = Bwait;
    14c4:	d0 e0       	ldi	r29, 0x00	; 0
    14c6:	05 c0       	rjmp	.+10     	; 0x14d2 <bassTick+0x6d6>
    14c8:	c2 e0       	ldi	r28, 0x02	; 2
				it1 = 0;
				it2 = 0;
				it3 = 0;
				it42 = it42 + 1;
				if (it42 == playList) {it42 = 0;}
				state = Bplay;
    14ca:	d0 e0       	ldi	r29, 0x00	; 0
    14cc:	02 c0       	rjmp	.+4      	; 0x14d2 <bassTick+0x6d6>
    14ce:	c2 e0       	ldi	r28, 0x02	; 2
				it1 = 0;
				it2 = 0;
				it3 = 0;
				it42 = it42 + 1;
				if (it42 == playList) {it42 = 0;}
				state = Bplay;
    14d0:	d0 e0       	ldi	r29, 0x00	; 0
    14d2:	ce 01       	movw	r24, r28
		}
		break;
	}
	//DisplayName(it42);
	return state;
}
    14d4:	df 91       	pop	r29
    14d6:	cf 91       	pop	r28
    14d8:	1f 91       	pop	r17
    14da:	0f 91       	pop	r16
    14dc:	08 95       	ret

000014de <PressPlay>:
    14de:	10 d1       	rcall	.+544    	; 0x1700 <nokia_lcd_clear>
	nokia_lcd_write_string("Song Paused!  Press Play to Resume.", 1);
	nokia_lcd_render();
}
void PressPlay() {
	nokia_lcd_clear();
	nokia_lcd_set_cursor(0,0);
    14e0:	60 e0       	ldi	r22, 0x00	; 0
    14e2:	70 e0       	ldi	r23, 0x00	; 0
    14e4:	80 e0       	ldi	r24, 0x00	; 0
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	03 d2       	rcall	.+1030   	; 0x18f0 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Welcome to the iBreadBoard! Press Play to Begin Your     Music!", 1);
    14ea:	61 e0       	ldi	r22, 0x01	; 1
    14ec:	70 e0       	ldi	r23, 0x00	; 0
    14ee:	81 e8       	ldi	r24, 0x81	; 129
    14f0:	9a e0       	ldi	r25, 0x0A	; 10
	nokia_lcd_render();
    14f2:	ec d1       	rcall	.+984    	; 0x18cc <nokia_lcd_write_string>
    14f4:	02 c2       	rjmp	.+1028   	; 0x18fa <nokia_lcd_render>
    14f6:	08 95       	ret

000014f8 <main>:
			break;
		}
			
	return state;
};*/
int main(void) {
    14f8:	cf 93       	push	r28
    14fa:	df 93       	push	r29
    14fc:	cd b7       	in	r28, 0x3d	; 61
    14fe:	de b7       	in	r29, 0x3e	; 62
    1500:	28 97       	sbiw	r28, 0x08	; 8
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	f8 94       	cli
    1506:	de bf       	out	0x3e, r29	; 62
    1508:	0f be       	out	0x3f, r0	; 63
    150a:	cd bf       	out	0x3d, r28	; 61
    /* Insert DDR and PORT initializations */
	DDRA = 0x00;
    150c:	11 b8       	out	0x01, r1	; 1
	PORTA = 0x00;
    150e:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF;
    1510:	8f ef       	ldi	r24, 0xFF	; 255
    1512:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x00;
    1514:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF;
    1516:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x00;
    1518:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xF0;
    151a:	80 ef       	ldi	r24, 0xF0	; 240
    151c:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;
    151e:	1b b8       	out	0x0b, r1	; 11
	unsigned char timerPeriod = 1;
	static task  task2, task3, task4, task5;
	task *tasks[] = {  &task2, &task3, &task4, &task5};
    1520:	88 e0       	ldi	r24, 0x08	; 8
    1522:	ef ee       	ldi	r30, 0xEF	; 239
    1524:	f9 e0       	ldi	r31, 0x09	; 9
    1526:	de 01       	movw	r26, r28
    1528:	11 96       	adiw	r26, 0x01	; 1
    152a:	01 90       	ld	r0, Z+
    152c:	0d 92       	st	X+, r0
    152e:	8a 95       	dec	r24
    1530:	e1 f7       	brne	.-8      	; 0x152a <main+0x32>
	const unsigned short taskNum = sizeof(tasks) / sizeof(*tasks);
	//task1.state = 0;
	//task1.period = 50;
	//task1.elapsedTime = task1.period;
	//task1.TickFct = &DisplayName;
	task2.state = 0;
    1532:	e3 ee       	ldi	r30, 0xE3	; 227
    1534:	fa e0       	ldi	r31, 0x0A	; 10
    1536:	10 82       	st	Z, r1
	task2.period = 1;
    1538:	81 e0       	ldi	r24, 0x01	; 1
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	a0 e0       	ldi	r26, 0x00	; 0
    153e:	b0 e0       	ldi	r27, 0x00	; 0
    1540:	81 83       	std	Z+1, r24	; 0x01
    1542:	92 83       	std	Z+2, r25	; 0x02
    1544:	a3 83       	std	Z+3, r26	; 0x03
    1546:	b4 83       	std	Z+4, r27	; 0x04
	task2.elapsedTime = task2.period;
    1548:	85 83       	std	Z+5, r24	; 0x05
    154a:	96 83       	std	Z+6, r25	; 0x06
    154c:	a7 83       	std	Z+7, r26	; 0x07
    154e:	b0 87       	std	Z+8, r27	; 0x08
	task2.TickFct = &pauseTick;
    1550:	26 e5       	ldi	r18, 0x56	; 86
    1552:	31 e0       	ldi	r19, 0x01	; 1
    1554:	32 87       	std	Z+10, r19	; 0x0a
    1556:	21 87       	std	Z+9, r18	; 0x09
	task3.state = 0;
    1558:	e8 ed       	ldi	r30, 0xD8	; 216
    155a:	fa e0       	ldi	r31, 0x0A	; 10
    155c:	10 82       	st	Z, r1
	task3.period = 1;
    155e:	81 83       	std	Z+1, r24	; 0x01
    1560:	92 83       	std	Z+2, r25	; 0x02
    1562:	a3 83       	std	Z+3, r26	; 0x03
    1564:	b4 83       	std	Z+4, r27	; 0x04
	task3.elapsedTime = task3.period;
    1566:	85 83       	std	Z+5, r24	; 0x05
    1568:	96 83       	std	Z+6, r25	; 0x06
    156a:	a7 83       	std	Z+7, r26	; 0x07
    156c:	b0 87       	std	Z+8, r27	; 0x08
	task3.TickFct = &NextPrevTick;
    156e:	2a e7       	ldi	r18, 0x7A	; 122
    1570:	31 e0       	ldi	r19, 0x01	; 1
    1572:	32 87       	std	Z+10, r19	; 0x0a
    1574:	21 87       	std	Z+9, r18	; 0x09
	task4.state = 0;
    1576:	ed ec       	ldi	r30, 0xCD	; 205
    1578:	fa e0       	ldi	r31, 0x0A	; 10
    157a:	10 82       	st	Z, r1
	task4.period = 1;
    157c:	81 83       	std	Z+1, r24	; 0x01
    157e:	92 83       	std	Z+2, r25	; 0x02
    1580:	a3 83       	std	Z+3, r26	; 0x03
    1582:	b4 83       	std	Z+4, r27	; 0x04
	task4.elapsedTime = task4.period;
    1584:	85 83       	std	Z+5, r24	; 0x05
    1586:	96 83       	std	Z+6, r25	; 0x06
    1588:	a7 83       	std	Z+7, r26	; 0x07
    158a:	b0 87       	std	Z+8, r27	; 0x08
	task4.TickFct = &melodyTick;
    158c:	2d e7       	ldi	r18, 0x7D	; 125
    158e:	33 e0       	ldi	r19, 0x03	; 3
    1590:	32 87       	std	Z+10, r19	; 0x0a
    1592:	21 87       	std	Z+9, r18	; 0x09
	task5.state = 0;
    1594:	e2 ec       	ldi	r30, 0xC2	; 194
    1596:	fa e0       	ldi	r31, 0x0A	; 10
    1598:	10 82       	st	Z, r1
	task5.period = 1;
    159a:	81 83       	std	Z+1, r24	; 0x01
    159c:	92 83       	std	Z+2, r25	; 0x02
    159e:	a3 83       	std	Z+3, r26	; 0x03
    15a0:	b4 83       	std	Z+4, r27	; 0x04
	task5.elapsedTime = task5.period;
    15a2:	85 83       	std	Z+5, r24	; 0x05
    15a4:	96 83       	std	Z+6, r25	; 0x06
    15a6:	a7 83       	std	Z+7, r26	; 0x07
    15a8:	b0 87       	std	Z+8, r27	; 0x08
	task5.TickFct = &bassTick;
    15aa:	8e ef       	ldi	r24, 0xFE	; 254
    15ac:	96 e0       	ldi	r25, 0x06	; 6
    15ae:	92 87       	std	Z+10, r25	; 0x0a
    15b0:	81 87       	std	Z+9, r24	; 0x09
	TimerSet(timerPeriod);
    15b2:	61 e0       	ldi	r22, 0x01	; 1
    15b4:	70 e0       	ldi	r23, 0x00	; 0
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	0e 94 18 02 	call	0x430	; 0x430 <TimerSet>
	TimerOn();
    15be:	0e 94 bd 01 	call	0x37a	; 0x37a <TimerOn>
	nokia_lcd_init();
    15c2:	68 d0       	rcall	.+208    	; 0x1694 <nokia_lcd_init>
	PressPlay();
    15c4:	8c df       	rcall	.-232    	; 0x14de <PressPlay>
    15c6:	0e 94 99 02 	call	0x532	; 0x532 <PWM_on>
	//nokia_lcd_set_cursor(0, 0);
	//nokia_lcd_write_string("JESUS LOVES     YOU         JOHN 3:16", 1);
	//nokia_lcd_render();
	PWM_on();
	//PWM0_on();
	PWMB_on();
    15ca:	2e d8       	rcall	.-4004   	; 0x628 <PWMB_on>
    15cc:	7e 01       	movw	r14, r28
    15ce:	89 e0       	ldi	r24, 0x09	; 9
    15d0:	e8 0e       	add	r14, r24
    15d2:	f1 1c       	adc	r15, r1
    15d4:	de 01       	movw	r26, r28
    15d6:	11 96       	adiw	r26, 0x01	; 1
    15d8:	6d 01       	movw	r12, r26
    15da:	f6 01       	movw	r30, r12
	while (1) {
		for (unsigned char i = 0; i < taskNum; i++) {
			if ( tasks[i]->elapsedTime == tasks[i]->period) {
    15dc:	01 91       	ld	r16, Z+
    15de:	11 91       	ld	r17, Z+
    15e0:	6f 01       	movw	r12, r30
    15e2:	d8 01       	movw	r26, r16
    15e4:	15 96       	adiw	r26, 0x05	; 5
    15e6:	4d 91       	ld	r20, X+
    15e8:	5d 91       	ld	r21, X+
    15ea:	6d 91       	ld	r22, X+
    15ec:	7c 91       	ld	r23, X
    15ee:	18 97       	sbiw	r26, 0x08	; 8
    15f0:	11 96       	adiw	r26, 0x01	; 1
    15f2:	8d 91       	ld	r24, X+
    15f4:	9d 91       	ld	r25, X+
    15f6:	0d 90       	ld	r0, X+
    15f8:	bc 91       	ld	r27, X
    15fa:	a0 2d       	mov	r26, r0
    15fc:	48 17       	cp	r20, r24
    15fe:	59 07       	cpc	r21, r25
    1600:	6a 07       	cpc	r22, r26
    1602:	7b 07       	cpc	r23, r27
    1604:	81 f4       	brne	.+32     	; 0x1626 <main+0x12e>
    1606:	f8 01       	movw	r30, r16
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
    1608:	80 81       	ld	r24, Z
    160a:	01 84       	ldd	r0, Z+9	; 0x09
    160c:	f2 85       	ldd	r31, Z+10	; 0x0a
    160e:	e0 2d       	mov	r30, r0
    1610:	08 2e       	mov	r0, r24
    1612:	00 0c       	add	r0, r0
    1614:	99 0b       	sbc	r25, r25
    1616:	09 95       	icall
    1618:	d8 01       	movw	r26, r16
    161a:	8c 93       	st	X, r24
    161c:	f8 01       	movw	r30, r16
				tasks[i]->elapsedTime = 0;
    161e:	15 82       	std	Z+5, r1	; 0x05
    1620:	16 82       	std	Z+6, r1	; 0x06
    1622:	17 82       	std	Z+7, r1	; 0x07
    1624:	10 86       	std	Z+8, r1	; 0x08
    1626:	f8 01       	movw	r30, r16
			}
				tasks[i]->elapsedTime += timerPeriod;
    1628:	85 81       	ldd	r24, Z+5	; 0x05
    162a:	96 81       	ldd	r25, Z+6	; 0x06
    162c:	a7 81       	ldd	r26, Z+7	; 0x07
    162e:	b0 85       	ldd	r27, Z+8	; 0x08
    1630:	01 96       	adiw	r24, 0x01	; 1
    1632:	a1 1d       	adc	r26, r1
    1634:	b1 1d       	adc	r27, r1
    1636:	85 83       	std	Z+5, r24	; 0x05
    1638:	96 83       	std	Z+6, r25	; 0x06
    163a:	a7 83       	std	Z+7, r26	; 0x07
    163c:	b0 87       	std	Z+8, r27	; 0x08
    163e:	ce 14       	cp	r12, r14
	//nokia_lcd_render();
	PWM_on();
	//PWM0_on();
	PWMB_on();
	while (1) {
		for (unsigned char i = 0; i < taskNum; i++) {
    1640:	df 04       	cpc	r13, r15
    1642:	59 f6       	brne	.-106    	; 0x15da <main+0xe2>
    1644:	80 91 08 0b 	lds	r24, 0x0B08	; 0x800b08 <TimerFlag>
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
				tasks[i]->elapsedTime = 0;
			}
				tasks[i]->elapsedTime += timerPeriod;
			}
	while(!TimerFlag){};
    1648:	88 23       	and	r24, r24
    164a:	e1 f3       	breq	.-8      	; 0x1644 <main+0x14c>
    164c:	10 92 08 0b 	sts	0x0B08, r1	; 0x800b08 <TimerFlag>
			TimerFlag = 0;
    1650:	c1 cf       	rjmp	.-126    	; 0x15d4 <main+0xdc>

00001652 <write>:
		}
    1652:	41 98       	cbi	0x08, 1	; 8
		nokia_lcd.screen[i] = 0x00;
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
    1654:	66 23       	and	r22, r22
    1656:	11 f0       	breq	.+4      	; 0x165c <write+0xa>
    1658:	43 9a       	sbi	0x08, 3	; 8
    165a:	15 c0       	rjmp	.+42     	; 0x1686 <write+0x34>
    165c:	43 98       	cbi	0x08, 3	; 8
    165e:	13 c0       	rjmp	.+38     	; 0x1686 <write+0x34>
    1660:	ac 01       	movw	r20, r24
    1662:	02 2e       	mov	r0, r18
    1664:	02 c0       	rjmp	.+4      	; 0x166a <write+0x18>
    1666:	55 95       	asr	r21
    1668:	47 95       	ror	r20
    166a:	0a 94       	dec	r0
    166c:	e2 f7       	brpl	.-8      	; 0x1666 <write+0x14>
    166e:	40 ff       	sbrs	r20, 0
    1670:	02 c0       	rjmp	.+4      	; 0x1676 <write+0x24>
    1672:	44 9a       	sbi	0x08, 4	; 8
    1674:	01 c0       	rjmp	.+2      	; 0x1678 <write+0x26>
    1676:	44 98       	cbi	0x08, 4	; 8
    1678:	45 9a       	sbi	0x08, 5	; 8
    167a:	45 98       	cbi	0x08, 5	; 8
    167c:	21 50       	subi	r18, 0x01	; 1
    167e:	31 09       	sbc	r19, r1
    1680:	78 f7       	brcc	.-34     	; 0x1660 <write+0xe>
    1682:	41 9a       	sbi	0x08, 1	; 8
    1684:	08 95       	ret
    1686:	27 e0       	ldi	r18, 0x07	; 7
    1688:	30 e0       	ldi	r19, 0x00	; 0
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	e9 cf       	rjmp	.-46     	; 0x1660 <write+0xe>

0000168e <write_cmd>:
    168e:	60 e0       	ldi	r22, 0x00	; 0
    1690:	e0 cf       	rjmp	.-64     	; 0x1652 <write>
    1692:	08 95       	ret

00001694 <nokia_lcd_init>:
    1694:	cf 93       	push	r28
    1696:	df 93       	push	r29
    1698:	39 9a       	sbi	0x07, 1	; 7
    169a:	3a 9a       	sbi	0x07, 2	; 7
    169c:	3b 9a       	sbi	0x07, 3	; 7
    169e:	3c 9a       	sbi	0x07, 4	; 7
    16a0:	3d 9a       	sbi	0x07, 5	; 7
    16a2:	42 9a       	sbi	0x08, 2	; 8
    16a4:	41 9a       	sbi	0x08, 1	; 8
    16a6:	83 ec       	ldi	r24, 0xC3	; 195
    16a8:	99 e0       	ldi	r25, 0x09	; 9
    16aa:	01 97       	sbiw	r24, 0x01	; 1
    16ac:	f1 f7       	brne	.-4      	; 0x16aa <nokia_lcd_init+0x16>
    16ae:	00 c0       	rjmp	.+0      	; 0x16b0 <nokia_lcd_init+0x1c>
    16b0:	00 00       	nop
    16b2:	42 98       	cbi	0x08, 2	; 8
    16b4:	8b e5       	ldi	r24, 0x5B	; 91
    16b6:	94 e4       	ldi	r25, 0x44	; 68
    16b8:	01 97       	sbiw	r24, 0x01	; 1
    16ba:	f1 f7       	brne	.-4      	; 0x16b8 <nokia_lcd_init+0x24>
    16bc:	00 c0       	rjmp	.+0      	; 0x16be <nokia_lcd_init+0x2a>
    16be:	00 00       	nop
    16c0:	42 9a       	sbi	0x08, 2	; 8
    16c2:	41 98       	cbi	0x08, 1	; 8
    16c4:	81 e2       	ldi	r24, 0x21	; 33
    16c6:	e3 df       	rcall	.-58     	; 0x168e <write_cmd>
    16c8:	83 e1       	ldi	r24, 0x13	; 19
    16ca:	e1 df       	rcall	.-62     	; 0x168e <write_cmd>
    16cc:	86 e0       	ldi	r24, 0x06	; 6
    16ce:	df df       	rcall	.-66     	; 0x168e <write_cmd>
    16d0:	82 ec       	ldi	r24, 0xC2	; 194
    16d2:	dd df       	rcall	.-70     	; 0x168e <write_cmd>
    16d4:	80 e2       	ldi	r24, 0x20	; 32
    16d6:	db df       	rcall	.-74     	; 0x168e <write_cmd>
    16d8:	89 e0       	ldi	r24, 0x09	; 9
    16da:	d9 df       	rcall	.-78     	; 0x168e <write_cmd>
    16dc:	80 e8       	ldi	r24, 0x80	; 128
    16de:	d7 df       	rcall	.-82     	; 0x168e <write_cmd>
    16e0:	80 e4       	ldi	r24, 0x40	; 64
    16e2:	d5 df       	rcall	.-86     	; 0x168e <write_cmd>
    16e4:	c8 ef       	ldi	r28, 0xF8	; 248
    16e6:	d1 e0       	ldi	r29, 0x01	; 1
    16e8:	61 e0       	ldi	r22, 0x01	; 1
    16ea:	80 e0       	ldi	r24, 0x00	; 0
    16ec:	b2 df       	rcall	.-156    	; 0x1652 <write>
    16ee:	21 97       	sbiw	r28, 0x01	; 1
    16f0:	d9 f7       	brne	.-10     	; 0x16e8 <nokia_lcd_init+0x54>
    16f2:	88 e0       	ldi	r24, 0x08	; 8
    16f4:	cc df       	rcall	.-104    	; 0x168e <write_cmd>
    16f6:	8c e0       	ldi	r24, 0x0C	; 12
    16f8:	ca df       	rcall	.-108    	; 0x168e <write_cmd>
    16fa:	df 91       	pop	r29
    16fc:	cf 91       	pop	r28
    16fe:	08 95       	ret

00001700 <nokia_lcd_clear>:
    1700:	80 e8       	ldi	r24, 0x80	; 128
    1702:	c5 df       	rcall	.-118    	; 0x168e <write_cmd>
    1704:	80 e4       	ldi	r24, 0x40	; 64
    1706:	c3 df       	rcall	.-122    	; 0x168e <write_cmd>
    1708:	10 92 01 0d 	sts	0x0D01, r1	; 0x800d01 <nokia_lcd+0x1f8>
    170c:	10 92 02 0d 	sts	0x0D02, r1	; 0x800d02 <nokia_lcd+0x1f9>
    1710:	e9 e0       	ldi	r30, 0x09	; 9
    1712:	fb e0       	ldi	r31, 0x0B	; 11
    1714:	81 e0       	ldi	r24, 0x01	; 1
    1716:	9d e0       	ldi	r25, 0x0D	; 13
    1718:	11 92       	st	Z+, r1
    171a:	e8 17       	cp	r30, r24
    171c:	f9 07       	cpc	r31, r25
    171e:	e1 f7       	brne	.-8      	; 0x1718 <nokia_lcd_clear+0x18>
    1720:	08 95       	ret

00001722 <nokia_lcd_set_pixel>:
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    1722:	26 2f       	mov	r18, r22
    1724:	26 95       	lsr	r18
    1726:	26 95       	lsr	r18
    1728:	26 95       	lsr	r18
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	34 e5       	ldi	r19, 0x54	; 84
    172e:	23 9f       	mul	r18, r19
    1730:	80 0d       	add	r24, r0
    1732:	91 1d       	adc	r25, r1
    1734:	11 24       	eor	r1, r1
	if (value)
    1736:	44 23       	and	r20, r20
    1738:	79 f0       	breq	.+30     	; 0x1758 <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
    173a:	fc 01       	movw	r30, r24
    173c:	e7 5f       	subi	r30, 0xF7	; 247
    173e:	f4 4f       	sbci	r31, 0xF4	; 244
    1740:	67 70       	andi	r22, 0x07	; 7
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	02 c0       	rjmp	.+4      	; 0x174c <nokia_lcd_set_pixel+0x2a>
    1748:	88 0f       	add	r24, r24
    174a:	99 1f       	adc	r25, r25
    174c:	6a 95       	dec	r22
    174e:	e2 f7       	brpl	.-8      	; 0x1748 <nokia_lcd_set_pixel+0x26>
    1750:	90 81       	ld	r25, Z
    1752:	89 2b       	or	r24, r25
    1754:	80 83       	st	Z, r24
    1756:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
    1758:	fc 01       	movw	r30, r24
    175a:	e7 5f       	subi	r30, 0xF7	; 247
    175c:	f4 4f       	sbci	r31, 0xF4	; 244
    175e:	67 70       	andi	r22, 0x07	; 7
    1760:	81 e0       	ldi	r24, 0x01	; 1
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	02 c0       	rjmp	.+4      	; 0x176a <nokia_lcd_set_pixel+0x48>
    1766:	88 0f       	add	r24, r24
    1768:	99 1f       	adc	r25, r25
    176a:	6a 95       	dec	r22
    176c:	e2 f7       	brpl	.-8      	; 0x1766 <nokia_lcd_set_pixel+0x44>
    176e:	80 95       	com	r24
    1770:	90 81       	ld	r25, Z
    1772:	89 23       	and	r24, r25
    1774:	80 83       	st	Z, r24
    1776:	08 95       	ret

00001778 <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
    1778:	5f 92       	push	r5
    177a:	6f 92       	push	r6
    177c:	7f 92       	push	r7
    177e:	8f 92       	push	r8
    1780:	9f 92       	push	r9
    1782:	af 92       	push	r10
    1784:	bf 92       	push	r11
    1786:	cf 92       	push	r12
    1788:	df 92       	push	r13
    178a:	ef 92       	push	r14
    178c:	ff 92       	push	r15
    178e:	0f 93       	push	r16
    1790:	1f 93       	push	r17
    1792:	cf 93       	push	r28
    1794:	df 93       	push	r29
    1796:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1798:	26 2f       	mov	r18, r22
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	49 01       	movw	r8, r18
    179e:	88 0c       	add	r8, r8
    17a0:	99 1c       	adc	r9, r9
    17a2:	88 0c       	add	r8, r8
    17a4:	99 1c       	adc	r9, r9
    17a6:	82 0e       	add	r8, r18
    17a8:	93 1e       	adc	r9, r19
    17aa:	18 14       	cp	r1, r8
    17ac:	19 04       	cpc	r1, r9
    17ae:	0c f0       	brlt	.+2      	; 0x17b2 <nokia_lcd_write_char+0x3a>
    17b0:	59 c0       	rjmp	.+178    	; 0x1864 <nokia_lcd_write_char+0xec>
		for (y = 0; y < 7*scale; y++)
    17b2:	89 01       	movw	r16, r18
    17b4:	00 0f       	add	r16, r16
    17b6:	11 1f       	adc	r17, r17
    17b8:	00 0f       	add	r16, r16
    17ba:	11 1f       	adc	r17, r17
    17bc:	00 0f       	add	r16, r16
    17be:	11 1f       	adc	r17, r17
    17c0:	02 1b       	sub	r16, r18
    17c2:	13 0b       	sbc	r17, r19
    17c4:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    17c6:	a8 2e       	mov	r10, r24
    17c8:	b1 2c       	mov	r11, r1
    17ca:	c5 01       	movw	r24, r10
    17cc:	80 97       	sbiw	r24, 0x20	; 32
    17ce:	5c 01       	movw	r10, r24
    17d0:	aa 0c       	add	r10, r10
    17d2:	bb 1c       	adc	r11, r11
    17d4:	aa 0c       	add	r10, r10
    17d6:	bb 1c       	adc	r11, r11
    17d8:	a8 0e       	add	r10, r24
    17da:	b9 1e       	adc	r11, r25
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    17dc:	0f 2e       	mov	r0, r31
    17de:	f2 e0       	ldi	r31, 0x02	; 2
    17e0:	cf 2e       	mov	r12, r31
    17e2:	fd e0       	ldi	r31, 0x0D	; 13
    17e4:	df 2e       	mov	r13, r31
    17e6:	f0 2d       	mov	r31, r0
    17e8:	0f 2e       	mov	r0, r31
    17ea:	f1 e0       	ldi	r31, 0x01	; 1
    17ec:	ef 2e       	mov	r14, r31
    17ee:	fd e0       	ldi	r31, 0x0D	; 13
    17f0:	ff 2e       	mov	r15, r31
    17f2:	f0 2d       	mov	r31, r0
    17f4:	2a c0       	rjmp	.+84     	; 0x184a <nokia_lcd_write_char+0xd2>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    17f6:	fe 01       	movw	r30, r28
    17f8:	24 91       	lpm	r18, Z
    17fa:	30 e0       	ldi	r19, 0x00	; 0
    17fc:	87 2d       	mov	r24, r7
    17fe:	65 2d       	mov	r22, r5
    1800:	49 d2       	rcall	.+1170   	; 0x1c94 <__udivmodqi4>
    1802:	02 c0       	rjmp	.+4      	; 0x1808 <nokia_lcd_write_char+0x90>
    1804:	35 95       	asr	r19
    1806:	27 95       	ror	r18
    1808:	8a 95       	dec	r24
    180a:	e2 f7       	brpl	.-8      	; 0x1804 <nokia_lcd_write_char+0x8c>
    180c:	20 ff       	sbrs	r18, 0
    180e:	09 c0       	rjmp	.+18     	; 0x1822 <nokia_lcd_write_char+0xaa>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    1810:	f6 01       	movw	r30, r12
    1812:	60 81       	ld	r22, Z
    1814:	67 0d       	add	r22, r7
    1816:	f7 01       	movw	r30, r14
    1818:	80 81       	ld	r24, Z
    181a:	41 e0       	ldi	r20, 0x01	; 1
    181c:	86 0d       	add	r24, r6
    181e:	81 df       	rcall	.-254    	; 0x1722 <nokia_lcd_set_pixel>
    1820:	08 c0       	rjmp	.+16     	; 0x1832 <nokia_lcd_write_char+0xba>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    1822:	f6 01       	movw	r30, r12
    1824:	60 81       	ld	r22, Z
    1826:	67 0d       	add	r22, r7
    1828:	f7 01       	movw	r30, r14
    182a:	80 81       	ld	r24, Z
    182c:	40 e0       	ldi	r20, 0x00	; 0
    182e:	86 0d       	add	r24, r6
    1830:	78 df       	rcall	.-272    	; 0x1722 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    1832:	73 94       	inc	r7
    1834:	87 2d       	mov	r24, r7
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	80 17       	cp	r24, r16
    183a:	91 07       	cpc	r25, r17
    183c:	e4 f2       	brlt	.-72     	; 0x17f6 <nokia_lcd_write_char+0x7e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    183e:	63 94       	inc	r6
    1840:	86 2d       	mov	r24, r6
    1842:	90 e0       	ldi	r25, 0x00	; 0
    1844:	88 15       	cp	r24, r8
    1846:	99 05       	cpc	r25, r9
    1848:	6c f4       	brge	.+26     	; 0x1864 <nokia_lcd_write_char+0xec>
		for (y = 0; y < 7*scale; y++)
    184a:	10 16       	cp	r1, r16
    184c:	11 06       	cpc	r1, r17
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    184e:	bc f7       	brge	.-18     	; 0x183e <nokia_lcd_write_char+0xc6>
    1850:	86 2d       	mov	r24, r6
    1852:	65 2d       	mov	r22, r5
    1854:	1f d2       	rcall	.+1086   	; 0x1c94 <__udivmodqi4>
    1856:	e5 01       	movw	r28, r10
    1858:	c8 0f       	add	r28, r24
    185a:	d1 1d       	adc	r29, r1
    185c:	c4 57       	subi	r28, 0x74	; 116
    185e:	df 4f       	sbci	r29, 0xFF	; 255
    1860:	71 2c       	mov	r7, r1
    1862:	c9 cf       	rjmp	.-110    	; 0x17f6 <nokia_lcd_write_char+0x7e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1864:	80 91 01 0d 	lds	r24, 0x0D01	; 0x800d01 <nokia_lcd+0x1f8>
    1868:	91 e0       	ldi	r25, 0x01	; 1
    186a:	98 0f       	add	r25, r24
    186c:	85 2d       	mov	r24, r5
    186e:	88 0f       	add	r24, r24
    1870:	88 0f       	add	r24, r24
    1872:	85 0d       	add	r24, r5
    1874:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
    1876:	84 35       	cpi	r24, 0x54	; 84
    1878:	18 f4       	brcc	.+6      	; 0x1880 <nokia_lcd_write_char+0x108>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    187a:	80 93 01 0d 	sts	0x0D01, r24	; 0x800d01 <nokia_lcd+0x1f8>
    187e:	0e c0       	rjmp	.+28     	; 0x189c <nokia_lcd_write_char+0x124>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
    1880:	10 92 01 0d 	sts	0x0D01, r1	; 0x800d01 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    1884:	e2 e0       	ldi	r30, 0x02	; 2
    1886:	fd e0       	ldi	r31, 0x0D	; 13
    1888:	80 81       	ld	r24, Z
    188a:	91 e0       	ldi	r25, 0x01	; 1
    188c:	98 0f       	add	r25, r24
    188e:	85 2d       	mov	r24, r5
    1890:	88 0f       	add	r24, r24
    1892:	88 0f       	add	r24, r24
    1894:	88 0f       	add	r24, r24
    1896:	85 19       	sub	r24, r5
    1898:	89 0f       	add	r24, r25
    189a:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
    189c:	80 91 02 0d 	lds	r24, 0x0D02	; 0x800d02 <nokia_lcd+0x1f9>
    18a0:	80 33       	cpi	r24, 0x30	; 48
    18a2:	20 f0       	brcs	.+8      	; 0x18ac <nokia_lcd_write_char+0x134>
		nokia_lcd.cursor_x = 0;
    18a4:	10 92 01 0d 	sts	0x0D01, r1	; 0x800d01 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    18a8:	10 92 02 0d 	sts	0x0D02, r1	; 0x800d02 <nokia_lcd+0x1f9>
	}
}
    18ac:	df 91       	pop	r29
    18ae:	cf 91       	pop	r28
    18b0:	1f 91       	pop	r17
    18b2:	0f 91       	pop	r16
    18b4:	ff 90       	pop	r15
    18b6:	ef 90       	pop	r14
    18b8:	df 90       	pop	r13
    18ba:	cf 90       	pop	r12
    18bc:	bf 90       	pop	r11
    18be:	af 90       	pop	r10
    18c0:	9f 90       	pop	r9
    18c2:	8f 90       	pop	r8
    18c4:	7f 90       	pop	r7
    18c6:	6f 90       	pop	r6
    18c8:	5f 90       	pop	r5
    18ca:	08 95       	ret

000018cc <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    18cc:	1f 93       	push	r17
    18ce:	cf 93       	push	r28
    18d0:	df 93       	push	r29
    18d2:	ec 01       	movw	r28, r24
	while(*str)
    18d4:	88 81       	ld	r24, Y
    18d6:	88 23       	and	r24, r24
    18d8:	39 f0       	breq	.+14     	; 0x18e8 <nokia_lcd_write_string+0x1c>
    18da:	16 2f       	mov	r17, r22
    18dc:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
    18de:	61 2f       	mov	r22, r17
    18e0:	4b df       	rcall	.-362    	; 0x1778 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    18e2:	89 91       	ld	r24, Y+
    18e4:	81 11       	cpse	r24, r1
    18e6:	fb cf       	rjmp	.-10     	; 0x18de <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
    18e8:	df 91       	pop	r29
    18ea:	cf 91       	pop	r28
    18ec:	1f 91       	pop	r17
    18ee:	08 95       	ret

000018f0 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
    18f0:	80 93 01 0d 	sts	0x0D01, r24	; 0x800d01 <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    18f4:	60 93 02 0d 	sts	0x0D02, r22	; 0x800d02 <nokia_lcd+0x1f9>
    18f8:	08 95       	ret

000018fa <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
    18fa:	0f 93       	push	r16
    18fc:	1f 93       	push	r17
    18fe:	cf 93       	push	r28
    1900:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    1902:	80 e8       	ldi	r24, 0x80	; 128
    1904:	c4 de       	rcall	.-632    	; 0x168e <write_cmd>
	write_cmd(0x40);
    1906:	80 e4       	ldi	r24, 0x40	; 64
    1908:	c2 de       	rcall	.-636    	; 0x168e <write_cmd>
    190a:	c9 e0       	ldi	r28, 0x09	; 9
    190c:	db e0       	ldi	r29, 0x0B	; 11
    190e:	01 e0       	ldi	r16, 0x01	; 1
    1910:	1d e0       	ldi	r17, 0x0D	; 13
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
    1912:	61 e0       	ldi	r22, 0x01	; 1
    1914:	89 91       	ld	r24, Y+
    1916:	9d de       	rcall	.-710    	; 0x1652 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    1918:	c0 17       	cp	r28, r16
    191a:	d1 07       	cpc	r29, r17
    191c:	d1 f7       	brne	.-12     	; 0x1912 <nokia_lcd_render+0x18>
		write_data(nokia_lcd.screen[i]);
}
    191e:	df 91       	pop	r29
    1920:	cf 91       	pop	r28
    1922:	1f 91       	pop	r17
    1924:	0f 91       	pop	r16
    1926:	08 95       	ret

00001928 <__cmpsf2>:
    1928:	d9 d0       	rcall	.+434    	; 0x1adc <__fp_cmp>
    192a:	08 f4       	brcc	.+2      	; 0x192e <__cmpsf2+0x6>
    192c:	81 e0       	ldi	r24, 0x01	; 1
    192e:	08 95       	ret

00001930 <__divsf3>:
    1930:	0c d0       	rcall	.+24     	; 0x194a <__divsf3x>
    1932:	0f c1       	rjmp	.+542    	; 0x1b52 <__fp_round>
    1934:	07 d1       	rcall	.+526    	; 0x1b44 <__fp_pscB>
    1936:	40 f0       	brcs	.+16     	; 0x1948 <__divsf3+0x18>
    1938:	fe d0       	rcall	.+508    	; 0x1b36 <__fp_pscA>
    193a:	30 f0       	brcs	.+12     	; 0x1948 <__divsf3+0x18>
    193c:	21 f4       	brne	.+8      	; 0x1946 <__divsf3+0x16>
    193e:	5f 3f       	cpi	r21, 0xFF	; 255
    1940:	19 f0       	breq	.+6      	; 0x1948 <__divsf3+0x18>
    1942:	f0 c0       	rjmp	.+480    	; 0x1b24 <__fp_inf>
    1944:	51 11       	cpse	r21, r1
    1946:	39 c1       	rjmp	.+626    	; 0x1bba <__fp_szero>
    1948:	f3 c0       	rjmp	.+486    	; 0x1b30 <__fp_nan>

0000194a <__divsf3x>:
    194a:	14 d1       	rcall	.+552    	; 0x1b74 <__fp_split3>
    194c:	98 f3       	brcs	.-26     	; 0x1934 <__divsf3+0x4>

0000194e <__divsf3_pse>:
    194e:	99 23       	and	r25, r25
    1950:	c9 f3       	breq	.-14     	; 0x1944 <__divsf3+0x14>
    1952:	55 23       	and	r21, r21
    1954:	b1 f3       	breq	.-20     	; 0x1942 <__divsf3+0x12>
    1956:	95 1b       	sub	r25, r21
    1958:	55 0b       	sbc	r21, r21
    195a:	bb 27       	eor	r27, r27
    195c:	aa 27       	eor	r26, r26
    195e:	62 17       	cp	r22, r18
    1960:	73 07       	cpc	r23, r19
    1962:	84 07       	cpc	r24, r20
    1964:	38 f0       	brcs	.+14     	; 0x1974 <__divsf3_pse+0x26>
    1966:	9f 5f       	subi	r25, 0xFF	; 255
    1968:	5f 4f       	sbci	r21, 0xFF	; 255
    196a:	22 0f       	add	r18, r18
    196c:	33 1f       	adc	r19, r19
    196e:	44 1f       	adc	r20, r20
    1970:	aa 1f       	adc	r26, r26
    1972:	a9 f3       	breq	.-22     	; 0x195e <__divsf3_pse+0x10>
    1974:	33 d0       	rcall	.+102    	; 0x19dc <__divsf3_pse+0x8e>
    1976:	0e 2e       	mov	r0, r30
    1978:	3a f0       	brmi	.+14     	; 0x1988 <__divsf3_pse+0x3a>
    197a:	e0 e8       	ldi	r30, 0x80	; 128
    197c:	30 d0       	rcall	.+96     	; 0x19de <__divsf3_pse+0x90>
    197e:	91 50       	subi	r25, 0x01	; 1
    1980:	50 40       	sbci	r21, 0x00	; 0
    1982:	e6 95       	lsr	r30
    1984:	00 1c       	adc	r0, r0
    1986:	ca f7       	brpl	.-14     	; 0x197a <__divsf3_pse+0x2c>
    1988:	29 d0       	rcall	.+82     	; 0x19dc <__divsf3_pse+0x8e>
    198a:	fe 2f       	mov	r31, r30
    198c:	27 d0       	rcall	.+78     	; 0x19dc <__divsf3_pse+0x8e>
    198e:	66 0f       	add	r22, r22
    1990:	77 1f       	adc	r23, r23
    1992:	88 1f       	adc	r24, r24
    1994:	bb 1f       	adc	r27, r27
    1996:	26 17       	cp	r18, r22
    1998:	37 07       	cpc	r19, r23
    199a:	48 07       	cpc	r20, r24
    199c:	ab 07       	cpc	r26, r27
    199e:	b0 e8       	ldi	r27, 0x80	; 128
    19a0:	09 f0       	breq	.+2      	; 0x19a4 <__divsf3_pse+0x56>
    19a2:	bb 0b       	sbc	r27, r27
    19a4:	80 2d       	mov	r24, r0
    19a6:	bf 01       	movw	r22, r30
    19a8:	ff 27       	eor	r31, r31
    19aa:	93 58       	subi	r25, 0x83	; 131
    19ac:	5f 4f       	sbci	r21, 0xFF	; 255
    19ae:	2a f0       	brmi	.+10     	; 0x19ba <__divsf3_pse+0x6c>
    19b0:	9e 3f       	cpi	r25, 0xFE	; 254
    19b2:	51 05       	cpc	r21, r1
    19b4:	68 f0       	brcs	.+26     	; 0x19d0 <__divsf3_pse+0x82>
    19b6:	b6 c0       	rjmp	.+364    	; 0x1b24 <__fp_inf>
    19b8:	00 c1       	rjmp	.+512    	; 0x1bba <__fp_szero>
    19ba:	5f 3f       	cpi	r21, 0xFF	; 255
    19bc:	ec f3       	brlt	.-6      	; 0x19b8 <__divsf3_pse+0x6a>
    19be:	98 3e       	cpi	r25, 0xE8	; 232
    19c0:	dc f3       	brlt	.-10     	; 0x19b8 <__divsf3_pse+0x6a>
    19c2:	86 95       	lsr	r24
    19c4:	77 95       	ror	r23
    19c6:	67 95       	ror	r22
    19c8:	b7 95       	ror	r27
    19ca:	f7 95       	ror	r31
    19cc:	9f 5f       	subi	r25, 0xFF	; 255
    19ce:	c9 f7       	brne	.-14     	; 0x19c2 <__divsf3_pse+0x74>
    19d0:	88 0f       	add	r24, r24
    19d2:	91 1d       	adc	r25, r1
    19d4:	96 95       	lsr	r25
    19d6:	87 95       	ror	r24
    19d8:	97 f9       	bld	r25, 7
    19da:	08 95       	ret
    19dc:	e1 e0       	ldi	r30, 0x01	; 1
    19de:	66 0f       	add	r22, r22
    19e0:	77 1f       	adc	r23, r23
    19e2:	88 1f       	adc	r24, r24
    19e4:	bb 1f       	adc	r27, r27
    19e6:	62 17       	cp	r22, r18
    19e8:	73 07       	cpc	r23, r19
    19ea:	84 07       	cpc	r24, r20
    19ec:	ba 07       	cpc	r27, r26
    19ee:	20 f0       	brcs	.+8      	; 0x19f8 <__divsf3_pse+0xaa>
    19f0:	62 1b       	sub	r22, r18
    19f2:	73 0b       	sbc	r23, r19
    19f4:	84 0b       	sbc	r24, r20
    19f6:	ba 0b       	sbc	r27, r26
    19f8:	ee 1f       	adc	r30, r30
    19fa:	88 f7       	brcc	.-30     	; 0x19de <__divsf3_pse+0x90>
    19fc:	e0 95       	com	r30
    19fe:	08 95       	ret

00001a00 <__fixsfsi>:
    1a00:	04 d0       	rcall	.+8      	; 0x1a0a <__fixunssfsi>
    1a02:	68 94       	set
    1a04:	b1 11       	cpse	r27, r1
    1a06:	d9 c0       	rjmp	.+434    	; 0x1bba <__fp_szero>
    1a08:	08 95       	ret

00001a0a <__fixunssfsi>:
    1a0a:	bc d0       	rcall	.+376    	; 0x1b84 <__fp_splitA>
    1a0c:	88 f0       	brcs	.+34     	; 0x1a30 <__fixunssfsi+0x26>
    1a0e:	9f 57       	subi	r25, 0x7F	; 127
    1a10:	90 f0       	brcs	.+36     	; 0x1a36 <__fixunssfsi+0x2c>
    1a12:	b9 2f       	mov	r27, r25
    1a14:	99 27       	eor	r25, r25
    1a16:	b7 51       	subi	r27, 0x17	; 23
    1a18:	a0 f0       	brcs	.+40     	; 0x1a42 <__fixunssfsi+0x38>
    1a1a:	d1 f0       	breq	.+52     	; 0x1a50 <__fixunssfsi+0x46>
    1a1c:	66 0f       	add	r22, r22
    1a1e:	77 1f       	adc	r23, r23
    1a20:	88 1f       	adc	r24, r24
    1a22:	99 1f       	adc	r25, r25
    1a24:	1a f0       	brmi	.+6      	; 0x1a2c <__fixunssfsi+0x22>
    1a26:	ba 95       	dec	r27
    1a28:	c9 f7       	brne	.-14     	; 0x1a1c <__fixunssfsi+0x12>
    1a2a:	12 c0       	rjmp	.+36     	; 0x1a50 <__fixunssfsi+0x46>
    1a2c:	b1 30       	cpi	r27, 0x01	; 1
    1a2e:	81 f0       	breq	.+32     	; 0x1a50 <__fixunssfsi+0x46>
    1a30:	c3 d0       	rcall	.+390    	; 0x1bb8 <__fp_zero>
    1a32:	b1 e0       	ldi	r27, 0x01	; 1
    1a34:	08 95       	ret
    1a36:	c0 c0       	rjmp	.+384    	; 0x1bb8 <__fp_zero>
    1a38:	67 2f       	mov	r22, r23
    1a3a:	78 2f       	mov	r23, r24
    1a3c:	88 27       	eor	r24, r24
    1a3e:	b8 5f       	subi	r27, 0xF8	; 248
    1a40:	39 f0       	breq	.+14     	; 0x1a50 <__fixunssfsi+0x46>
    1a42:	b9 3f       	cpi	r27, 0xF9	; 249
    1a44:	cc f3       	brlt	.-14     	; 0x1a38 <__fixunssfsi+0x2e>
    1a46:	86 95       	lsr	r24
    1a48:	77 95       	ror	r23
    1a4a:	67 95       	ror	r22
    1a4c:	b3 95       	inc	r27
    1a4e:	d9 f7       	brne	.-10     	; 0x1a46 <__fixunssfsi+0x3c>
    1a50:	3e f4       	brtc	.+14     	; 0x1a60 <__fixunssfsi+0x56>
    1a52:	90 95       	com	r25
    1a54:	80 95       	com	r24
    1a56:	70 95       	com	r23
    1a58:	61 95       	neg	r22
    1a5a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a5c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a60:	08 95       	ret

00001a62 <__floatunsisf>:
    1a62:	e8 94       	clt
    1a64:	09 c0       	rjmp	.+18     	; 0x1a78 <__floatsisf+0x12>

00001a66 <__floatsisf>:
    1a66:	97 fb       	bst	r25, 7
    1a68:	3e f4       	brtc	.+14     	; 0x1a78 <__floatsisf+0x12>
    1a6a:	90 95       	com	r25
    1a6c:	80 95       	com	r24
    1a6e:	70 95       	com	r23
    1a70:	61 95       	neg	r22
    1a72:	7f 4f       	sbci	r23, 0xFF	; 255
    1a74:	8f 4f       	sbci	r24, 0xFF	; 255
    1a76:	9f 4f       	sbci	r25, 0xFF	; 255
    1a78:	99 23       	and	r25, r25
    1a7a:	a9 f0       	breq	.+42     	; 0x1aa6 <__floatsisf+0x40>
    1a7c:	f9 2f       	mov	r31, r25
    1a7e:	96 e9       	ldi	r25, 0x96	; 150
    1a80:	bb 27       	eor	r27, r27
    1a82:	93 95       	inc	r25
    1a84:	f6 95       	lsr	r31
    1a86:	87 95       	ror	r24
    1a88:	77 95       	ror	r23
    1a8a:	67 95       	ror	r22
    1a8c:	b7 95       	ror	r27
    1a8e:	f1 11       	cpse	r31, r1
    1a90:	f8 cf       	rjmp	.-16     	; 0x1a82 <__floatsisf+0x1c>
    1a92:	fa f4       	brpl	.+62     	; 0x1ad2 <__floatsisf+0x6c>
    1a94:	bb 0f       	add	r27, r27
    1a96:	11 f4       	brne	.+4      	; 0x1a9c <__floatsisf+0x36>
    1a98:	60 ff       	sbrs	r22, 0
    1a9a:	1b c0       	rjmp	.+54     	; 0x1ad2 <__floatsisf+0x6c>
    1a9c:	6f 5f       	subi	r22, 0xFF	; 255
    1a9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1aa0:	8f 4f       	sbci	r24, 0xFF	; 255
    1aa2:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa4:	16 c0       	rjmp	.+44     	; 0x1ad2 <__floatsisf+0x6c>
    1aa6:	88 23       	and	r24, r24
    1aa8:	11 f0       	breq	.+4      	; 0x1aae <__floatsisf+0x48>
    1aaa:	96 e9       	ldi	r25, 0x96	; 150
    1aac:	11 c0       	rjmp	.+34     	; 0x1ad0 <__floatsisf+0x6a>
    1aae:	77 23       	and	r23, r23
    1ab0:	21 f0       	breq	.+8      	; 0x1aba <__floatsisf+0x54>
    1ab2:	9e e8       	ldi	r25, 0x8E	; 142
    1ab4:	87 2f       	mov	r24, r23
    1ab6:	76 2f       	mov	r23, r22
    1ab8:	05 c0       	rjmp	.+10     	; 0x1ac4 <__floatsisf+0x5e>
    1aba:	66 23       	and	r22, r22
    1abc:	71 f0       	breq	.+28     	; 0x1ada <__floatsisf+0x74>
    1abe:	96 e8       	ldi	r25, 0x86	; 134
    1ac0:	86 2f       	mov	r24, r22
    1ac2:	70 e0       	ldi	r23, 0x00	; 0
    1ac4:	60 e0       	ldi	r22, 0x00	; 0
    1ac6:	2a f0       	brmi	.+10     	; 0x1ad2 <__floatsisf+0x6c>
    1ac8:	9a 95       	dec	r25
    1aca:	66 0f       	add	r22, r22
    1acc:	77 1f       	adc	r23, r23
    1ace:	88 1f       	adc	r24, r24
    1ad0:	da f7       	brpl	.-10     	; 0x1ac8 <__floatsisf+0x62>
    1ad2:	88 0f       	add	r24, r24
    1ad4:	96 95       	lsr	r25
    1ad6:	87 95       	ror	r24
    1ad8:	97 f9       	bld	r25, 7
    1ada:	08 95       	ret

00001adc <__fp_cmp>:
    1adc:	99 0f       	add	r25, r25
    1ade:	00 08       	sbc	r0, r0
    1ae0:	55 0f       	add	r21, r21
    1ae2:	aa 0b       	sbc	r26, r26
    1ae4:	e0 e8       	ldi	r30, 0x80	; 128
    1ae6:	fe ef       	ldi	r31, 0xFE	; 254
    1ae8:	16 16       	cp	r1, r22
    1aea:	17 06       	cpc	r1, r23
    1aec:	e8 07       	cpc	r30, r24
    1aee:	f9 07       	cpc	r31, r25
    1af0:	c0 f0       	brcs	.+48     	; 0x1b22 <__fp_cmp+0x46>
    1af2:	12 16       	cp	r1, r18
    1af4:	13 06       	cpc	r1, r19
    1af6:	e4 07       	cpc	r30, r20
    1af8:	f5 07       	cpc	r31, r21
    1afa:	98 f0       	brcs	.+38     	; 0x1b22 <__fp_cmp+0x46>
    1afc:	62 1b       	sub	r22, r18
    1afe:	73 0b       	sbc	r23, r19
    1b00:	84 0b       	sbc	r24, r20
    1b02:	95 0b       	sbc	r25, r21
    1b04:	39 f4       	brne	.+14     	; 0x1b14 <__fp_cmp+0x38>
    1b06:	0a 26       	eor	r0, r26
    1b08:	61 f0       	breq	.+24     	; 0x1b22 <__fp_cmp+0x46>
    1b0a:	23 2b       	or	r18, r19
    1b0c:	24 2b       	or	r18, r20
    1b0e:	25 2b       	or	r18, r21
    1b10:	21 f4       	brne	.+8      	; 0x1b1a <__fp_cmp+0x3e>
    1b12:	08 95       	ret
    1b14:	0a 26       	eor	r0, r26
    1b16:	09 f4       	brne	.+2      	; 0x1b1a <__fp_cmp+0x3e>
    1b18:	a1 40       	sbci	r26, 0x01	; 1
    1b1a:	a6 95       	lsr	r26
    1b1c:	8f ef       	ldi	r24, 0xFF	; 255
    1b1e:	81 1d       	adc	r24, r1
    1b20:	81 1d       	adc	r24, r1
    1b22:	08 95       	ret

00001b24 <__fp_inf>:
    1b24:	97 f9       	bld	r25, 7
    1b26:	9f 67       	ori	r25, 0x7F	; 127
    1b28:	80 e8       	ldi	r24, 0x80	; 128
    1b2a:	70 e0       	ldi	r23, 0x00	; 0
    1b2c:	60 e0       	ldi	r22, 0x00	; 0
    1b2e:	08 95       	ret

00001b30 <__fp_nan>:
    1b30:	9f ef       	ldi	r25, 0xFF	; 255
    1b32:	80 ec       	ldi	r24, 0xC0	; 192
    1b34:	08 95       	ret

00001b36 <__fp_pscA>:
    1b36:	00 24       	eor	r0, r0
    1b38:	0a 94       	dec	r0
    1b3a:	16 16       	cp	r1, r22
    1b3c:	17 06       	cpc	r1, r23
    1b3e:	18 06       	cpc	r1, r24
    1b40:	09 06       	cpc	r0, r25
    1b42:	08 95       	ret

00001b44 <__fp_pscB>:
    1b44:	00 24       	eor	r0, r0
    1b46:	0a 94       	dec	r0
    1b48:	12 16       	cp	r1, r18
    1b4a:	13 06       	cpc	r1, r19
    1b4c:	14 06       	cpc	r1, r20
    1b4e:	05 06       	cpc	r0, r21
    1b50:	08 95       	ret

00001b52 <__fp_round>:
    1b52:	09 2e       	mov	r0, r25
    1b54:	03 94       	inc	r0
    1b56:	00 0c       	add	r0, r0
    1b58:	11 f4       	brne	.+4      	; 0x1b5e <__fp_round+0xc>
    1b5a:	88 23       	and	r24, r24
    1b5c:	52 f0       	brmi	.+20     	; 0x1b72 <__fp_round+0x20>
    1b5e:	bb 0f       	add	r27, r27
    1b60:	40 f4       	brcc	.+16     	; 0x1b72 <__fp_round+0x20>
    1b62:	bf 2b       	or	r27, r31
    1b64:	11 f4       	brne	.+4      	; 0x1b6a <__fp_round+0x18>
    1b66:	60 ff       	sbrs	r22, 0
    1b68:	04 c0       	rjmp	.+8      	; 0x1b72 <__fp_round+0x20>
    1b6a:	6f 5f       	subi	r22, 0xFF	; 255
    1b6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b6e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b70:	9f 4f       	sbci	r25, 0xFF	; 255
    1b72:	08 95       	ret

00001b74 <__fp_split3>:
    1b74:	57 fd       	sbrc	r21, 7
    1b76:	90 58       	subi	r25, 0x80	; 128
    1b78:	44 0f       	add	r20, r20
    1b7a:	55 1f       	adc	r21, r21
    1b7c:	59 f0       	breq	.+22     	; 0x1b94 <__fp_splitA+0x10>
    1b7e:	5f 3f       	cpi	r21, 0xFF	; 255
    1b80:	71 f0       	breq	.+28     	; 0x1b9e <__fp_splitA+0x1a>
    1b82:	47 95       	ror	r20

00001b84 <__fp_splitA>:
    1b84:	88 0f       	add	r24, r24
    1b86:	97 fb       	bst	r25, 7
    1b88:	99 1f       	adc	r25, r25
    1b8a:	61 f0       	breq	.+24     	; 0x1ba4 <__fp_splitA+0x20>
    1b8c:	9f 3f       	cpi	r25, 0xFF	; 255
    1b8e:	79 f0       	breq	.+30     	; 0x1bae <__fp_splitA+0x2a>
    1b90:	87 95       	ror	r24
    1b92:	08 95       	ret
    1b94:	12 16       	cp	r1, r18
    1b96:	13 06       	cpc	r1, r19
    1b98:	14 06       	cpc	r1, r20
    1b9a:	55 1f       	adc	r21, r21
    1b9c:	f2 cf       	rjmp	.-28     	; 0x1b82 <__fp_split3+0xe>
    1b9e:	46 95       	lsr	r20
    1ba0:	f1 df       	rcall	.-30     	; 0x1b84 <__fp_splitA>
    1ba2:	08 c0       	rjmp	.+16     	; 0x1bb4 <__fp_splitA+0x30>
    1ba4:	16 16       	cp	r1, r22
    1ba6:	17 06       	cpc	r1, r23
    1ba8:	18 06       	cpc	r1, r24
    1baa:	99 1f       	adc	r25, r25
    1bac:	f1 cf       	rjmp	.-30     	; 0x1b90 <__fp_splitA+0xc>
    1bae:	86 95       	lsr	r24
    1bb0:	71 05       	cpc	r23, r1
    1bb2:	61 05       	cpc	r22, r1
    1bb4:	08 94       	sec
    1bb6:	08 95       	ret

00001bb8 <__fp_zero>:
    1bb8:	e8 94       	clt

00001bba <__fp_szero>:
    1bba:	bb 27       	eor	r27, r27
    1bbc:	66 27       	eor	r22, r22
    1bbe:	77 27       	eor	r23, r23
    1bc0:	cb 01       	movw	r24, r22
    1bc2:	97 f9       	bld	r25, 7
    1bc4:	08 95       	ret

00001bc6 <__gesf2>:
    1bc6:	8a df       	rcall	.-236    	; 0x1adc <__fp_cmp>
    1bc8:	08 f4       	brcc	.+2      	; 0x1bcc <__gesf2+0x6>
    1bca:	8f ef       	ldi	r24, 0xFF	; 255
    1bcc:	08 95       	ret

00001bce <__mulsf3>:
    1bce:	0b d0       	rcall	.+22     	; 0x1be6 <__mulsf3x>
    1bd0:	c0 cf       	rjmp	.-128    	; 0x1b52 <__fp_round>
    1bd2:	b1 df       	rcall	.-158    	; 0x1b36 <__fp_pscA>
    1bd4:	28 f0       	brcs	.+10     	; 0x1be0 <__mulsf3+0x12>
    1bd6:	b6 df       	rcall	.-148    	; 0x1b44 <__fp_pscB>
    1bd8:	18 f0       	brcs	.+6      	; 0x1be0 <__mulsf3+0x12>
    1bda:	95 23       	and	r25, r21
    1bdc:	09 f0       	breq	.+2      	; 0x1be0 <__mulsf3+0x12>
    1bde:	a2 cf       	rjmp	.-188    	; 0x1b24 <__fp_inf>
    1be0:	a7 cf       	rjmp	.-178    	; 0x1b30 <__fp_nan>
    1be2:	11 24       	eor	r1, r1
    1be4:	ea cf       	rjmp	.-44     	; 0x1bba <__fp_szero>

00001be6 <__mulsf3x>:
    1be6:	c6 df       	rcall	.-116    	; 0x1b74 <__fp_split3>
    1be8:	a0 f3       	brcs	.-24     	; 0x1bd2 <__mulsf3+0x4>

00001bea <__mulsf3_pse>:
    1bea:	95 9f       	mul	r25, r21
    1bec:	d1 f3       	breq	.-12     	; 0x1be2 <__mulsf3+0x14>
    1bee:	95 0f       	add	r25, r21
    1bf0:	50 e0       	ldi	r21, 0x00	; 0
    1bf2:	55 1f       	adc	r21, r21
    1bf4:	62 9f       	mul	r22, r18
    1bf6:	f0 01       	movw	r30, r0
    1bf8:	72 9f       	mul	r23, r18
    1bfa:	bb 27       	eor	r27, r27
    1bfc:	f0 0d       	add	r31, r0
    1bfe:	b1 1d       	adc	r27, r1
    1c00:	63 9f       	mul	r22, r19
    1c02:	aa 27       	eor	r26, r26
    1c04:	f0 0d       	add	r31, r0
    1c06:	b1 1d       	adc	r27, r1
    1c08:	aa 1f       	adc	r26, r26
    1c0a:	64 9f       	mul	r22, r20
    1c0c:	66 27       	eor	r22, r22
    1c0e:	b0 0d       	add	r27, r0
    1c10:	a1 1d       	adc	r26, r1
    1c12:	66 1f       	adc	r22, r22
    1c14:	82 9f       	mul	r24, r18
    1c16:	22 27       	eor	r18, r18
    1c18:	b0 0d       	add	r27, r0
    1c1a:	a1 1d       	adc	r26, r1
    1c1c:	62 1f       	adc	r22, r18
    1c1e:	73 9f       	mul	r23, r19
    1c20:	b0 0d       	add	r27, r0
    1c22:	a1 1d       	adc	r26, r1
    1c24:	62 1f       	adc	r22, r18
    1c26:	83 9f       	mul	r24, r19
    1c28:	a0 0d       	add	r26, r0
    1c2a:	61 1d       	adc	r22, r1
    1c2c:	22 1f       	adc	r18, r18
    1c2e:	74 9f       	mul	r23, r20
    1c30:	33 27       	eor	r19, r19
    1c32:	a0 0d       	add	r26, r0
    1c34:	61 1d       	adc	r22, r1
    1c36:	23 1f       	adc	r18, r19
    1c38:	84 9f       	mul	r24, r20
    1c3a:	60 0d       	add	r22, r0
    1c3c:	21 1d       	adc	r18, r1
    1c3e:	82 2f       	mov	r24, r18
    1c40:	76 2f       	mov	r23, r22
    1c42:	6a 2f       	mov	r22, r26
    1c44:	11 24       	eor	r1, r1
    1c46:	9f 57       	subi	r25, 0x7F	; 127
    1c48:	50 40       	sbci	r21, 0x00	; 0
    1c4a:	8a f0       	brmi	.+34     	; 0x1c6e <__mulsf3_pse+0x84>
    1c4c:	e1 f0       	breq	.+56     	; 0x1c86 <__mulsf3_pse+0x9c>
    1c4e:	88 23       	and	r24, r24
    1c50:	4a f0       	brmi	.+18     	; 0x1c64 <__mulsf3_pse+0x7a>
    1c52:	ee 0f       	add	r30, r30
    1c54:	ff 1f       	adc	r31, r31
    1c56:	bb 1f       	adc	r27, r27
    1c58:	66 1f       	adc	r22, r22
    1c5a:	77 1f       	adc	r23, r23
    1c5c:	88 1f       	adc	r24, r24
    1c5e:	91 50       	subi	r25, 0x01	; 1
    1c60:	50 40       	sbci	r21, 0x00	; 0
    1c62:	a9 f7       	brne	.-22     	; 0x1c4e <__mulsf3_pse+0x64>
    1c64:	9e 3f       	cpi	r25, 0xFE	; 254
    1c66:	51 05       	cpc	r21, r1
    1c68:	70 f0       	brcs	.+28     	; 0x1c86 <__mulsf3_pse+0x9c>
    1c6a:	5c cf       	rjmp	.-328    	; 0x1b24 <__fp_inf>
    1c6c:	a6 cf       	rjmp	.-180    	; 0x1bba <__fp_szero>
    1c6e:	5f 3f       	cpi	r21, 0xFF	; 255
    1c70:	ec f3       	brlt	.-6      	; 0x1c6c <__mulsf3_pse+0x82>
    1c72:	98 3e       	cpi	r25, 0xE8	; 232
    1c74:	dc f3       	brlt	.-10     	; 0x1c6c <__mulsf3_pse+0x82>
    1c76:	86 95       	lsr	r24
    1c78:	77 95       	ror	r23
    1c7a:	67 95       	ror	r22
    1c7c:	b7 95       	ror	r27
    1c7e:	f7 95       	ror	r31
    1c80:	e7 95       	ror	r30
    1c82:	9f 5f       	subi	r25, 0xFF	; 255
    1c84:	c1 f7       	brne	.-16     	; 0x1c76 <__mulsf3_pse+0x8c>
    1c86:	fe 2b       	or	r31, r30
    1c88:	88 0f       	add	r24, r24
    1c8a:	91 1d       	adc	r25, r1
    1c8c:	96 95       	lsr	r25
    1c8e:	87 95       	ror	r24
    1c90:	97 f9       	bld	r25, 7
    1c92:	08 95       	ret

00001c94 <__udivmodqi4>:
    1c94:	99 1b       	sub	r25, r25
    1c96:	79 e0       	ldi	r23, 0x09	; 9
    1c98:	04 c0       	rjmp	.+8      	; 0x1ca2 <__udivmodqi4_ep>

00001c9a <__udivmodqi4_loop>:
    1c9a:	99 1f       	adc	r25, r25
    1c9c:	96 17       	cp	r25, r22
    1c9e:	08 f0       	brcs	.+2      	; 0x1ca2 <__udivmodqi4_ep>
    1ca0:	96 1b       	sub	r25, r22

00001ca2 <__udivmodqi4_ep>:
    1ca2:	88 1f       	adc	r24, r24
    1ca4:	7a 95       	dec	r23
    1ca6:	c9 f7       	brne	.-14     	; 0x1c9a <__udivmodqi4_loop>
    1ca8:	80 95       	com	r24
    1caa:	08 95       	ret

00001cac <_exit>:
    1cac:	f8 94       	cli

00001cae <__stop_program>:
    1cae:	ff cf       	rjmp	.-2      	; 0x1cae <__stop_program>
