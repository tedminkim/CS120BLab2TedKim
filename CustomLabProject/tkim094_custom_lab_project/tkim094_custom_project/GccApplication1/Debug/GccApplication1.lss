
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000009c2  00800100  00001c76  00001d0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c76  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000245  00800ac2  00800ac2  000026cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000026cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  0000273c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000207e  00000000  00000000  00002894  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c3a  00000000  00000000  00004912  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001361  00000000  00000000  0000554c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000374  00000000  00000000  000068b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ac8  00000000  00000000  00006c24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010ff  00000000  00000000  000076ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  000087eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	35 c1       	rjmp	.+618    	; 0x26c <__ctors_end>
       2:	00 00       	nop
       4:	52 c1       	rjmp	.+676    	; 0x2aa <__bad_interrupt>
       6:	00 00       	nop
       8:	50 c1       	rjmp	.+672    	; 0x2aa <__bad_interrupt>
       a:	00 00       	nop
       c:	4e c1       	rjmp	.+668    	; 0x2aa <__bad_interrupt>
       e:	00 00       	nop
      10:	4c c1       	rjmp	.+664    	; 0x2aa <__bad_interrupt>
      12:	00 00       	nop
      14:	4a c1       	rjmp	.+660    	; 0x2aa <__bad_interrupt>
      16:	00 00       	nop
      18:	48 c1       	rjmp	.+656    	; 0x2aa <__bad_interrupt>
      1a:	00 00       	nop
      1c:	46 c1       	rjmp	.+652    	; 0x2aa <__bad_interrupt>
      1e:	00 00       	nop
      20:	44 c1       	rjmp	.+648    	; 0x2aa <__bad_interrupt>
      22:	00 00       	nop
      24:	bc c1       	rjmp	.+888    	; 0x39e <__vector_9>
      26:	00 00       	nop
      28:	40 c1       	rjmp	.+640    	; 0x2aa <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3e c1       	rjmp	.+636    	; 0x2aa <__bad_interrupt>
      2e:	00 00       	nop
      30:	3c c1       	rjmp	.+632    	; 0x2aa <__bad_interrupt>
      32:	00 00       	nop
      34:	3a c1       	rjmp	.+628    	; 0x2aa <__bad_interrupt>
      36:	00 00       	nop
      38:	38 c1       	rjmp	.+624    	; 0x2aa <__bad_interrupt>
      3a:	00 00       	nop
      3c:	36 c1       	rjmp	.+620    	; 0x2aa <__bad_interrupt>
      3e:	00 00       	nop
      40:	34 c1       	rjmp	.+616    	; 0x2aa <__bad_interrupt>
      42:	00 00       	nop
      44:	32 c1       	rjmp	.+612    	; 0x2aa <__bad_interrupt>
      46:	00 00       	nop
      48:	30 c1       	rjmp	.+608    	; 0x2aa <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2e c1       	rjmp	.+604    	; 0x2aa <__bad_interrupt>
      4e:	00 00       	nop
      50:	2c c1       	rjmp	.+600    	; 0x2aa <__bad_interrupt>
      52:	00 00       	nop
      54:	2a c1       	rjmp	.+596    	; 0x2aa <__bad_interrupt>
      56:	00 00       	nop
      58:	28 c1       	rjmp	.+592    	; 0x2aa <__bad_interrupt>
      5a:	00 00       	nop
      5c:	26 c1       	rjmp	.+588    	; 0x2aa <__bad_interrupt>
      5e:	00 00       	nop
      60:	24 c1       	rjmp	.+584    	; 0x2aa <__bad_interrupt>
      62:	00 00       	nop
      64:	22 c1       	rjmp	.+580    	; 0x2aa <__bad_interrupt>
      66:	00 00       	nop
      68:	20 c1       	rjmp	.+576    	; 0x2aa <__bad_interrupt>
      6a:	00 00       	nop
      6c:	1e c1       	rjmp	.+572    	; 0x2aa <__bad_interrupt>
      6e:	00 00       	nop
      70:	1c c1       	rjmp	.+568    	; 0x2aa <__bad_interrupt>
      72:	00 00       	nop
      74:	1a c1       	rjmp	.+564    	; 0x2aa <__bad_interrupt>
      76:	00 00       	nop
      78:	18 c1       	rjmp	.+560    	; 0x2aa <__bad_interrupt>
      7a:	00 00       	nop
      7c:	16 c1       	rjmp	.+556    	; 0x2aa <__bad_interrupt>
      7e:	00 00       	nop
      80:	14 c1       	rjmp	.+552    	; 0x2aa <__bad_interrupt>
      82:	00 00       	nop
      84:	12 c1       	rjmp	.+548    	; 0x2aa <__bad_interrupt>
      86:	00 00       	nop
      88:	10 c1       	rjmp	.+544    	; 0x2aa <__bad_interrupt>
	...

0000008c <CHARSET>:
      8c:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      9c:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      ac:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      bc:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      cc:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      dc:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      ec:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      fc:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     10c:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     11c:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     12c:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     13c:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     14c:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     15c:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     16c:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     17c:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     18c:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     19c:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1ac:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1bc:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1cc:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1dc:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1ec:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1fc:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     20c:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     21c:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     22c:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     23c:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     24c:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     25c:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000026c <__ctors_end>:
     26c:	11 24       	eor	r1, r1
     26e:	1f be       	out	0x3f, r1	; 63
     270:	cf ef       	ldi	r28, 0xFF	; 255
     272:	d0 e4       	ldi	r29, 0x40	; 64
     274:	de bf       	out	0x3e, r29	; 62
     276:	cd bf       	out	0x3d, r28	; 61

00000278 <__do_copy_data>:
     278:	1a e0       	ldi	r17, 0x0A	; 10
     27a:	a0 e0       	ldi	r26, 0x00	; 0
     27c:	b1 e0       	ldi	r27, 0x01	; 1
     27e:	e6 e7       	ldi	r30, 0x76	; 118
     280:	fc e1       	ldi	r31, 0x1C	; 28
     282:	00 e0       	ldi	r16, 0x00	; 0
     284:	0b bf       	out	0x3b, r16	; 59
     286:	02 c0       	rjmp	.+4      	; 0x28c <__do_copy_data+0x14>
     288:	07 90       	elpm	r0, Z+
     28a:	0d 92       	st	X+, r0
     28c:	a2 3c       	cpi	r26, 0xC2	; 194
     28e:	b1 07       	cpc	r27, r17
     290:	d9 f7       	brne	.-10     	; 0x288 <__do_copy_data+0x10>

00000292 <__do_clear_bss>:
     292:	2d e0       	ldi	r18, 0x0D	; 13
     294:	a2 ec       	ldi	r26, 0xC2	; 194
     296:	ba e0       	ldi	r27, 0x0A	; 10
     298:	01 c0       	rjmp	.+2      	; 0x29c <.do_clear_bss_start>

0000029a <.do_clear_bss_loop>:
     29a:	1d 92       	st	X+, r1

0000029c <.do_clear_bss_start>:
     29c:	a7 30       	cpi	r26, 0x07	; 7
     29e:	b2 07       	cpc	r27, r18
     2a0:	e1 f7       	brne	.-8      	; 0x29a <.do_clear_bss_loop>
     2a2:	0e 94 5f 0a 	call	0x14be	; 0x14be <main>
     2a6:	0c 94 39 0e 	jmp	0x1c72	; 0x1c72 <_exit>

000002aa <__bad_interrupt>:
     2aa:	aa ce       	rjmp	.-684    	; 0x0 <__vectors>

000002ac <pauseTick>:
	//buzzerSound = 0; //dud
	set_PWM0(freqSound);
}
void silenceH() {
	//buzzerSound = 0; //dud
	set_PWM0(0);
     2ac:	20 b1       	in	r18, 0x00	; 0
     2ae:	21 70       	andi	r18, 0x01	; 1
     2b0:	81 30       	cpi	r24, 0x01	; 1
     2b2:	91 05       	cpc	r25, r1
     2b4:	59 f0       	breq	.+22     	; 0x2cc <pauseTick+0x20>
     2b6:	82 30       	cpi	r24, 0x02	; 2
     2b8:	91 05       	cpc	r25, r1
     2ba:	a1 f0       	breq	.+40     	; 0x2e4 <pauseTick+0x38>
     2bc:	89 2b       	or	r24, r25
     2be:	b9 f4       	brne	.+46     	; 0x2ee <pauseTick+0x42>
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <paused>
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	08 95       	ret
     2cc:	22 23       	and	r18, r18
     2ce:	89 f0       	breq	.+34     	; 0x2f2 <pauseTick+0x46>
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <paused>
     2d6:	91 11       	cpse	r25, r1
     2d8:	80 e0       	ldi	r24, 0x00	; 0
     2da:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <paused>
     2de:	82 e0       	ldi	r24, 0x02	; 2
     2e0:	90 e0       	ldi	r25, 0x00	; 0
     2e2:	08 95       	ret
     2e4:	21 11       	cpse	r18, r1
     2e6:	05 c0       	rjmp	.+10     	; 0x2f2 <pauseTick+0x46>
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	08 95       	ret
     2ee:	80 e0       	ldi	r24, 0x00	; 0
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	08 95       	ret

000002f4 <NextPrevTick>:
     2f4:	20 b1       	in	r18, 0x00	; 0
     2f6:	32 2f       	mov	r19, r18
     2f8:	32 70       	andi	r19, 0x02	; 2
     2fa:	20 b1       	in	r18, 0x00	; 0
     2fc:	24 70       	andi	r18, 0x04	; 4
     2fe:	81 30       	cpi	r24, 0x01	; 1
     300:	91 05       	cpc	r25, r1
     302:	f1 f0       	breq	.+60     	; 0x340 <NextPrevTick+0x4c>
     304:	82 30       	cpi	r24, 0x02	; 2
     306:	91 05       	cpc	r25, r1
     308:	19 f1       	breq	.+70     	; 0x350 <NextPrevTick+0x5c>
     30a:	00 97       	sbiw	r24, 0x00	; 0
     30c:	31 f5       	brne	.+76     	; 0x35a <NextPrevTick+0x66>
     30e:	22 23       	and	r18, r18
     310:	41 f0       	breq	.+16     	; 0x322 <NextPrevTick+0x2e>
     312:	81 e0       	ldi	r24, 0x01	; 1
     314:	80 93 06 0d 	sts	0x0D06, r24	; 0x800d06 <prevSong>
     318:	10 92 03 0d 	sts	0x0D03, r1	; 0x800d03 <nextSong>
     31c:	81 e0       	ldi	r24, 0x01	; 1
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	08 95       	ret
     322:	33 23       	and	r19, r19
     324:	41 f0       	breq	.+16     	; 0x336 <NextPrevTick+0x42>
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	80 93 03 0d 	sts	0x0D03, r24	; 0x800d03 <nextSong>
     32c:	10 92 06 0d 	sts	0x0D06, r1	; 0x800d06 <prevSong>
     330:	82 e0       	ldi	r24, 0x02	; 2
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	08 95       	ret
     336:	10 92 06 0d 	sts	0x0D06, r1	; 0x800d06 <prevSong>
     33a:	10 92 03 0d 	sts	0x0D03, r1	; 0x800d03 <nextSong>
     33e:	08 95       	ret
     340:	41 e0       	ldi	r20, 0x01	; 1
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	21 11       	cpse	r18, r1
     346:	01 c0       	rjmp	.+2      	; 0x34a <NextPrevTick+0x56>
     348:	40 e0       	ldi	r20, 0x00	; 0
     34a:	84 2f       	mov	r24, r20
     34c:	93 2f       	mov	r25, r19
     34e:	08 95       	ret
     350:	31 11       	cpse	r19, r1
     352:	05 c0       	rjmp	.+10     	; 0x35e <NextPrevTick+0x6a>
     354:	80 e0       	ldi	r24, 0x00	; 0
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	08 95       	ret
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	08 95       	ret

00000360 <TimerOn>:
     360:	8b e0       	ldi	r24, 0x0B	; 11
     362:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
     366:	8d e7       	ldi	r24, 0x7D	; 125
     368:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     372:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
     376:	80 91 eb 09 	lds	r24, 0x09EB	; 0x8009eb <_avr_timer_M>
     37a:	90 91 ec 09 	lds	r25, 0x09EC	; 0x8009ec <_avr_timer_M+0x1>
     37e:	a0 91 ed 09 	lds	r26, 0x09ED	; 0x8009ed <_avr_timer_M+0x2>
     382:	b0 91 ee 09 	lds	r27, 0x09EE	; 0x8009ee <_avr_timer_M+0x3>
     386:	80 93 04 0b 	sts	0x0B04, r24	; 0x800b04 <_avr_timer_cntcurr>
     38a:	90 93 05 0b 	sts	0x0B05, r25	; 0x800b05 <_avr_timer_cntcurr+0x1>
     38e:	a0 93 06 0b 	sts	0x0B06, r26	; 0x800b06 <_avr_timer_cntcurr+0x2>
     392:	b0 93 07 0b 	sts	0x0B07, r27	; 0x800b07 <_avr_timer_cntcurr+0x3>
     396:	8f b7       	in	r24, 0x3f	; 63
     398:	80 68       	ori	r24, 0x80	; 128
     39a:	8f bf       	out	0x3f, r24	; 63
     39c:	08 95       	ret

0000039e <__vector_9>:
     39e:	1f 92       	push	r1
     3a0:	0f 92       	push	r0
     3a2:	0f b6       	in	r0, 0x3f	; 63
     3a4:	0f 92       	push	r0
     3a6:	11 24       	eor	r1, r1
     3a8:	8f 93       	push	r24
     3aa:	9f 93       	push	r25
     3ac:	af 93       	push	r26
     3ae:	bf 93       	push	r27
     3b0:	80 91 04 0b 	lds	r24, 0x0B04	; 0x800b04 <_avr_timer_cntcurr>
     3b4:	90 91 05 0b 	lds	r25, 0x0B05	; 0x800b05 <_avr_timer_cntcurr+0x1>
     3b8:	a0 91 06 0b 	lds	r26, 0x0B06	; 0x800b06 <_avr_timer_cntcurr+0x2>
     3bc:	b0 91 07 0b 	lds	r27, 0x0B07	; 0x800b07 <_avr_timer_cntcurr+0x3>
     3c0:	01 97       	sbiw	r24, 0x01	; 1
     3c2:	a1 09       	sbc	r26, r1
     3c4:	b1 09       	sbc	r27, r1
     3c6:	80 93 04 0b 	sts	0x0B04, r24	; 0x800b04 <_avr_timer_cntcurr>
     3ca:	90 93 05 0b 	sts	0x0B05, r25	; 0x800b05 <_avr_timer_cntcurr+0x1>
     3ce:	a0 93 06 0b 	sts	0x0B06, r26	; 0x800b06 <_avr_timer_cntcurr+0x2>
     3d2:	b0 93 07 0b 	sts	0x0B07, r27	; 0x800b07 <_avr_timer_cntcurr+0x3>
     3d6:	89 2b       	or	r24, r25
     3d8:	8a 2b       	or	r24, r26
     3da:	8b 2b       	or	r24, r27
     3dc:	99 f4       	brne	.+38     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     3de:	81 e0       	ldi	r24, 0x01	; 1
     3e0:	80 93 08 0b 	sts	0x0B08, r24	; 0x800b08 <TimerFlag>
     3e4:	80 91 eb 09 	lds	r24, 0x09EB	; 0x8009eb <_avr_timer_M>
     3e8:	90 91 ec 09 	lds	r25, 0x09EC	; 0x8009ec <_avr_timer_M+0x1>
     3ec:	a0 91 ed 09 	lds	r26, 0x09ED	; 0x8009ed <_avr_timer_M+0x2>
     3f0:	b0 91 ee 09 	lds	r27, 0x09EE	; 0x8009ee <_avr_timer_M+0x3>
     3f4:	80 93 04 0b 	sts	0x0B04, r24	; 0x800b04 <_avr_timer_cntcurr>
     3f8:	90 93 05 0b 	sts	0x0B05, r25	; 0x800b05 <_avr_timer_cntcurr+0x1>
     3fc:	a0 93 06 0b 	sts	0x0B06, r26	; 0x800b06 <_avr_timer_cntcurr+0x2>
     400:	b0 93 07 0b 	sts	0x0B07, r27	; 0x800b07 <_avr_timer_cntcurr+0x3>
     404:	bf 91       	pop	r27
     406:	af 91       	pop	r26
     408:	9f 91       	pop	r25
     40a:	8f 91       	pop	r24
     40c:	0f 90       	pop	r0
     40e:	0f be       	out	0x3f, r0	; 63
     410:	0f 90       	pop	r0
     412:	1f 90       	pop	r1
     414:	18 95       	reti

00000416 <TimerSet>:
     416:	60 93 eb 09 	sts	0x09EB, r22	; 0x8009eb <_avr_timer_M>
     41a:	70 93 ec 09 	sts	0x09EC, r23	; 0x8009ec <_avr_timer_M+0x1>
     41e:	80 93 ed 09 	sts	0x09ED, r24	; 0x8009ed <_avr_timer_M+0x2>
     422:	90 93 ee 09 	sts	0x09EE, r25	; 0x8009ee <_avr_timer_M+0x3>
     426:	60 93 04 0b 	sts	0x0B04, r22	; 0x800b04 <_avr_timer_cntcurr>
     42a:	70 93 05 0b 	sts	0x0B05, r23	; 0x800b05 <_avr_timer_cntcurr+0x1>
     42e:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <_avr_timer_cntcurr+0x2>
     432:	90 93 07 0b 	sts	0x0B07, r25	; 0x800b07 <_avr_timer_cntcurr+0x3>
     436:	08 95       	ret

00000438 <set_PWM>:
     438:	cf 92       	push	r12
     43a:	df 92       	push	r13
     43c:	ef 92       	push	r14
     43e:	ff 92       	push	r15
     440:	6b 01       	movw	r12, r22
     442:	7c 01       	movw	r14, r24
     444:	9b 01       	movw	r18, r22
     446:	ac 01       	movw	r20, r24
     448:	60 91 00 0b 	lds	r22, 0x0B00	; 0x800b00 <current_frequency.2060>
     44c:	70 91 01 0b 	lds	r23, 0x0B01	; 0x800b01 <current_frequency.2060+0x1>
     450:	80 91 02 0b 	lds	r24, 0x0B02	; 0x800b02 <current_frequency.2060+0x2>
     454:	90 91 03 0b 	lds	r25, 0x0B03	; 0x800b03 <current_frequency.2060+0x3>
     458:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__cmpsf2>
     45c:	88 23       	and	r24, r24
     45e:	09 f4       	brne	.+2      	; 0x462 <set_PWM+0x2a>
     460:	56 c0       	rjmp	.+172    	; 0x50e <set_PWM+0xd6>
     462:	20 e0       	ldi	r18, 0x00	; 0
     464:	30 e0       	ldi	r19, 0x00	; 0
     466:	a9 01       	movw	r20, r18
     468:	c7 01       	movw	r24, r14
     46a:	b6 01       	movw	r22, r12
     46c:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__cmpsf2>
     470:	81 11       	cpse	r24, r1
     472:	06 c0       	rjmp	.+12     	; 0x480 <set_PWM+0x48>
     474:	e1 e9       	ldi	r30, 0x91	; 145
     476:	f0 e0       	ldi	r31, 0x00	; 0
     478:	80 81       	ld	r24, Z
     47a:	88 70       	andi	r24, 0x08	; 8
     47c:	80 83       	st	Z, r24
     47e:	05 c0       	rjmp	.+10     	; 0x48a <set_PWM+0x52>
     480:	e1 e9       	ldi	r30, 0x91	; 145
     482:	f0 e0       	ldi	r31, 0x00	; 0
     484:	80 81       	ld	r24, Z
     486:	83 60       	ori	r24, 0x03	; 3
     488:	80 83       	st	Z, r24
     48a:	28 e5       	ldi	r18, 0x58	; 88
     48c:	39 e3       	ldi	r19, 0x39	; 57
     48e:	44 e7       	ldi	r20, 0x74	; 116
     490:	5f e3       	ldi	r21, 0x3F	; 63
     492:	c7 01       	movw	r24, r14
     494:	b6 01       	movw	r22, r12
     496:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__cmpsf2>
     49a:	88 23       	and	r24, r24
     49c:	3c f4       	brge	.+14     	; 0x4ac <set_PWM+0x74>
     49e:	8f ef       	ldi	r24, 0xFF	; 255
     4a0:	9f ef       	ldi	r25, 0xFF	; 255
     4a2:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     4a6:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     4aa:	25 c0       	rjmp	.+74     	; 0x4f6 <set_PWM+0xbe>
     4ac:	20 e0       	ldi	r18, 0x00	; 0
     4ae:	34 e2       	ldi	r19, 0x24	; 36
     4b0:	44 ef       	ldi	r20, 0xF4	; 244
     4b2:	56 e4       	ldi	r21, 0x46	; 70
     4b4:	c7 01       	movw	r24, r14
     4b6:	b6 01       	movw	r22, r12
     4b8:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <__gesf2>
     4bc:	18 16       	cp	r1, r24
     4be:	2c f4       	brge	.+10     	; 0x4ca <set_PWM+0x92>
     4c0:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     4c4:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     4c8:	16 c0       	rjmp	.+44     	; 0x4f6 <set_PWM+0xbe>
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	30 e0       	ldi	r19, 0x00	; 0
     4ce:	40 e0       	ldi	r20, 0x00	; 0
     4d0:	53 e4       	ldi	r21, 0x43	; 67
     4d2:	c7 01       	movw	r24, r14
     4d4:	b6 01       	movw	r22, r12
     4d6:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <__mulsf3>
     4da:	9b 01       	movw	r18, r22
     4dc:	ac 01       	movw	r20, r24
     4de:	60 e0       	ldi	r22, 0x00	; 0
     4e0:	74 e2       	ldi	r23, 0x24	; 36
     4e2:	84 ef       	ldi	r24, 0xF4	; 244
     4e4:	9a e4       	ldi	r25, 0x4A	; 74
     4e6:	0e 94 7b 0c 	call	0x18f6	; 0x18f6 <__divsf3>
     4ea:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__fixsfsi>
     4ee:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
     4f2:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
     4f6:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
     4fa:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
     4fe:	c0 92 00 0b 	sts	0x0B00, r12	; 0x800b00 <current_frequency.2060>
     502:	d0 92 01 0b 	sts	0x0B01, r13	; 0x800b01 <current_frequency.2060+0x1>
     506:	e0 92 02 0b 	sts	0x0B02, r14	; 0x800b02 <current_frequency.2060+0x2>
     50a:	f0 92 03 0b 	sts	0x0B03, r15	; 0x800b03 <current_frequency.2060+0x3>
     50e:	ff 90       	pop	r15
     510:	ef 90       	pop	r14
     512:	df 90       	pop	r13
     514:	cf 90       	pop	r12
     516:	08 95       	ret

00000518 <PWM_on>:
     518:	80 e4       	ldi	r24, 0x40	; 64
     51a:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
     51e:	8b e0       	ldi	r24, 0x0B	; 11
     520:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
     524:	60 e0       	ldi	r22, 0x00	; 0
     526:	70 e0       	ldi	r23, 0x00	; 0
     528:	cb 01       	movw	r24, r22
     52a:	86 cf       	rjmp	.-244    	; 0x438 <set_PWM>
     52c:	08 95       	ret

0000052e <set_PWMB>:
     52e:	cf 92       	push	r12
     530:	df 92       	push	r13
     532:	ef 92       	push	r14
     534:	ff 92       	push	r15
     536:	6b 01       	movw	r12, r22
     538:	7c 01       	movw	r14, r24
     53a:	9b 01       	movw	r18, r22
     53c:	ac 01       	movw	r20, r24
     53e:	60 91 fc 0a 	lds	r22, 0x0AFC	; 0x800afc <current_frequency.2068>
     542:	70 91 fd 0a 	lds	r23, 0x0AFD	; 0x800afd <current_frequency.2068+0x1>
     546:	80 91 fe 0a 	lds	r24, 0x0AFE	; 0x800afe <current_frequency.2068+0x2>
     54a:	90 91 ff 0a 	lds	r25, 0x0AFF	; 0x800aff <current_frequency.2068+0x3>
     54e:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__cmpsf2>
     552:	88 23       	and	r24, r24
     554:	09 f4       	brne	.+2      	; 0x558 <set_PWMB+0x2a>
     556:	56 c0       	rjmp	.+172    	; 0x604 <set_PWMB+0xd6>
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	a9 01       	movw	r20, r18
     55e:	c7 01       	movw	r24, r14
     560:	b6 01       	movw	r22, r12
     562:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__cmpsf2>
     566:	81 11       	cpse	r24, r1
     568:	06 c0       	rjmp	.+12     	; 0x576 <set_PWMB+0x48>
     56a:	e1 e8       	ldi	r30, 0x81	; 129
     56c:	f0 e0       	ldi	r31, 0x00	; 0
     56e:	80 81       	ld	r24, Z
     570:	88 70       	andi	r24, 0x08	; 8
     572:	80 83       	st	Z, r24
     574:	05 c0       	rjmp	.+10     	; 0x580 <set_PWMB+0x52>
     576:	e1 e8       	ldi	r30, 0x81	; 129
     578:	f0 e0       	ldi	r31, 0x00	; 0
     57a:	80 81       	ld	r24, Z
     57c:	83 60       	ori	r24, 0x03	; 3
     57e:	80 83       	st	Z, r24
     580:	28 e5       	ldi	r18, 0x58	; 88
     582:	39 e3       	ldi	r19, 0x39	; 57
     584:	44 e7       	ldi	r20, 0x74	; 116
     586:	5f e3       	ldi	r21, 0x3F	; 63
     588:	c7 01       	movw	r24, r14
     58a:	b6 01       	movw	r22, r12
     58c:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__cmpsf2>
     590:	88 23       	and	r24, r24
     592:	3c f4       	brge	.+14     	; 0x5a2 <set_PWMB+0x74>
     594:	8f ef       	ldi	r24, 0xFF	; 255
     596:	9f ef       	ldi	r25, 0xFF	; 255
     598:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     59c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5a0:	25 c0       	rjmp	.+74     	; 0x5ec <set_PWMB+0xbe>
     5a2:	20 e0       	ldi	r18, 0x00	; 0
     5a4:	34 e2       	ldi	r19, 0x24	; 36
     5a6:	44 ef       	ldi	r20, 0xF4	; 244
     5a8:	56 e4       	ldi	r21, 0x46	; 70
     5aa:	c7 01       	movw	r24, r14
     5ac:	b6 01       	movw	r22, r12
     5ae:	0e 94 c6 0d 	call	0x1b8c	; 0x1b8c <__gesf2>
     5b2:	18 16       	cp	r1, r24
     5b4:	2c f4       	brge	.+10     	; 0x5c0 <set_PWMB+0x92>
     5b6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     5ba:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5be:	16 c0       	rjmp	.+44     	; 0x5ec <set_PWMB+0xbe>
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	40 e0       	ldi	r20, 0x00	; 0
     5c6:	53 e4       	ldi	r21, 0x43	; 67
     5c8:	c7 01       	movw	r24, r14
     5ca:	b6 01       	movw	r22, r12
     5cc:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <__mulsf3>
     5d0:	9b 01       	movw	r18, r22
     5d2:	ac 01       	movw	r20, r24
     5d4:	60 e0       	ldi	r22, 0x00	; 0
     5d6:	74 e2       	ldi	r23, 0x24	; 36
     5d8:	84 ef       	ldi	r24, 0xF4	; 244
     5da:	9a e4       	ldi	r25, 0x4A	; 74
     5dc:	0e 94 7b 0c 	call	0x18f6	; 0x18f6 <__divsf3>
     5e0:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <__fixsfsi>
     5e4:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     5e8:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5ec:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     5f0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     5f4:	c0 92 fc 0a 	sts	0x0AFC, r12	; 0x800afc <current_frequency.2068>
     5f8:	d0 92 fd 0a 	sts	0x0AFD, r13	; 0x800afd <current_frequency.2068+0x1>
     5fc:	e0 92 fe 0a 	sts	0x0AFE, r14	; 0x800afe <current_frequency.2068+0x2>
     600:	f0 92 ff 0a 	sts	0x0AFF, r15	; 0x800aff <current_frequency.2068+0x3>
     604:	ff 90       	pop	r15
     606:	ef 90       	pop	r14
     608:	df 90       	pop	r13
     60a:	cf 90       	pop	r12
     60c:	08 95       	ret

0000060e <PWMB_on>:
     60e:	80 e4       	ldi	r24, 0x40	; 64
     610:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     614:	8b e0       	ldi	r24, 0x0B	; 11
     616:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     61a:	60 e0       	ldi	r22, 0x00	; 0
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	cb 01       	movw	r24, r22
     620:	86 cf       	rjmp	.-244    	; 0x52e <set_PWMB>
     622:	08 95       	ret

00000624 <play>:
     624:	bc 01       	movw	r22, r24
     626:	99 0f       	add	r25, r25
     628:	88 0b       	sbc	r24, r24
     62a:	99 0b       	sbc	r25, r25
     62c:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__floatsisf>
     630:	03 cf       	rjmp	.-506    	; 0x438 <set_PWM>
     632:	08 95       	ret

00000634 <silence>:
     634:	60 e0       	ldi	r22, 0x00	; 0
     636:	70 e0       	ldi	r23, 0x00	; 0
     638:	cb 01       	movw	r24, r22
     63a:	fe ce       	rjmp	.-516    	; 0x438 <set_PWM>
     63c:	08 95       	ret

0000063e <playB>:
}
void playB(short freqSound) {
  //buzzerSound = 0;
  set_PWMB(freqSound);
     63e:	bc 01       	movw	r22, r24
     640:	99 0f       	add	r25, r25
     642:	88 0b       	sbc	r24, r24
     644:	99 0b       	sbc	r25, r25
     646:	0e 94 16 0d 	call	0x1a2c	; 0x1a2c <__floatsisf>
     64a:	71 cf       	rjmp	.-286    	; 0x52e <set_PWMB>
     64c:	08 95       	ret

0000064e <silenceB>:
}
void silenceB() {
  //buzzerSound = 0;
  set_PWMB(0);
     64e:	60 e0       	ldi	r22, 0x00	; 0
     650:	70 e0       	ldi	r23, 0x00	; 0
     652:	cb 01       	movw	r24, r22
     654:	6c cf       	rjmp	.-296    	; 0x52e <set_PWMB>
     656:	08 95       	ret

00000658 <DisplaySong1>:
short** playlistBasNL[] = {renCircHarNL, AmGrBasN, mooHLBasN};
short** playlistBasRL[] = {renCircHarRL, AmGrBasR, mooHLBasR};
char numRows[] = {1, 1, 1};

void DisplaySong1() {
	nokia_lcd_clear();
     658:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
     65c:	60 e0       	ldi	r22, 0x00	; 0
     65e:	70 e0       	ldi	r23, 0x00	; 0
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Song Name:    Renai         Circulation", 1);
     668:	61 e0       	ldi	r22, 0x01	; 1
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	87 ef       	ldi	r24, 0xF7	; 247
     66e:	99 e0       	ldi	r25, 0x09	; 9
     670:	0e 94 49 0c 	call	0x1892	; 0x1892 <nokia_lcd_write_string>
	nokia_lcd_render();
     674:	0c 94 60 0c 	jmp	0x18c0	; 0x18c0 <nokia_lcd_render>
     678:	08 95       	ret

0000067a <DisplaySong2>:
	nokia_lcd_set_cursor(0, 0);
	nokia_lcd_write_string("Song Name:    Mary Had A    Little Lamb", 1);
	nokia_lcd_render();
}*/
void DisplaySong2() {
	nokia_lcd_clear();
     67a:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
     67e:	60 e0       	ldi	r22, 0x00	; 0
     680:	70 e0       	ldi	r23, 0x00	; 0
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Song Name:    Amazing Grace", 1);
     68a:	61 e0       	ldi	r22, 0x01	; 1
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	8f e1       	ldi	r24, 0x1F	; 31
     690:	9a e0       	ldi	r25, 0x0A	; 10
     692:	0e 94 49 0c 	call	0x1892	; 0x1892 <nokia_lcd_write_string>
	nokia_lcd_render();
     696:	0c 94 60 0c 	jmp	0x18c0	; 0x18c0 <nokia_lcd_render>
     69a:	08 95       	ret

0000069c <DisplaySong3>:
}
void DisplaySong3() {
	nokia_lcd_clear();
     69c:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
     6a0:	60 e0       	ldi	r22, 0x00	; 0
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	80 e0       	ldi	r24, 0x00	; 0
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Song Name:    Mamamoo :     Hello", 1);
     6ac:	61 e0       	ldi	r22, 0x01	; 1
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	8b e3       	ldi	r24, 0x3B	; 59
     6b2:	9a e0       	ldi	r25, 0x0A	; 10
     6b4:	0e 94 49 0c 	call	0x1892	; 0x1892 <nokia_lcd_write_string>
	nokia_lcd_render();
     6b8:	0c 94 60 0c 	jmp	0x18c0	; 0x18c0 <nokia_lcd_render>
     6bc:	08 95       	ret

000006be <DisplayPaused>:
}
void DisplayPaused() {
	nokia_lcd_clear();
     6be:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	80 e0       	ldi	r24, 0x00	; 0
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Song Paused!  Press Play to Resume.", 1);
     6ce:	61 e0       	ldi	r22, 0x01	; 1
     6d0:	70 e0       	ldi	r23, 0x00	; 0
     6d2:	8d e5       	ldi	r24, 0x5D	; 93
     6d4:	9a e0       	ldi	r25, 0x0A	; 10
     6d6:	0e 94 49 0c 	call	0x1892	; 0x1892 <nokia_lcd_write_string>
	nokia_lcd_render();
     6da:	0c 94 60 0c 	jmp	0x18c0	; 0x18c0 <nokia_lcd_render>
     6de:	08 95       	ret

000006e0 <melodyTick>:
unsigned long y = sizeof(playlistMel[0]);
unsigned long playList = sizeof(playlistMel) / sizeof(playlistMel[0]);

unsigned char it4;
enum MelodyStates{Minit, Mwait, Mplay, Ml, Mr, Mp};
int melodyTick(int state) {
     6e0:	0f 93       	push	r16
     6e2:	1f 93       	push	r17
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	ec 01       	movw	r28, r24
	static unsigned short it1;
	static unsigned short it2;
	static unsigned short it3;
	//static unsigned char it4;
	static unsigned char placeHolder;
	switch(state) {
     6ea:	82 30       	cpi	r24, 0x02	; 2
     6ec:	91 05       	cpc	r25, r1
     6ee:	69 f1       	breq	.+90     	; 0x74a <melodyTick+0x6a>
     6f0:	2c f4       	brge	.+10     	; 0x6fc <melodyTick+0x1c>
     6f2:	00 97       	sbiw	r24, 0x00	; 0
     6f4:	69 f0       	breq	.+26     	; 0x710 <melodyTick+0x30>
     6f6:	01 97       	sbiw	r24, 0x01	; 1
     6f8:	11 f1       	breq	.+68     	; 0x73e <melodyTick+0x5e>
     6fa:	5d c3       	rjmp	.+1722   	; 0xdb6 <melodyTick+0x6d6>
     6fc:	84 30       	cpi	r24, 0x04	; 4
     6fe:	91 05       	cpc	r25, r1
     700:	09 f4       	brne	.+2      	; 0x704 <melodyTick+0x24>
     702:	db c1       	rjmp	.+950    	; 0xaba <melodyTick+0x3da>
     704:	0c f4       	brge	.+2      	; 0x708 <melodyTick+0x28>
     706:	36 c1       	rjmp	.+620    	; 0x974 <melodyTick+0x294>
     708:	05 97       	sbiw	r24, 0x05	; 5
     70a:	09 f4       	brne	.+2      	; 0x70e <melodyTick+0x2e>
     70c:	7f c2       	rjmp	.+1278   	; 0xc0c <melodyTick+0x52c>
     70e:	53 c3       	rjmp	.+1702   	; 0xdb6 <melodyTick+0x6d6>
		case Minit:
			state= Mwait;
			it1 = 0;
     710:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
     714:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
			it2 = 0;
     718:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
     71c:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
			it3 = 0;
     720:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
     724:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
			it4 = 1;
     728:	81 e0       	ldi	r24, 0x01	; 1
     72a:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
			prevSong = 0;
     72e:	10 92 06 0d 	sts	0x0D06, r1	; 0x800d06 <prevSong>
			nextSong = 0;
     732:	10 92 03 0d 	sts	0x0D03, r1	; 0x800d03 <nextSong>
			silence();
     736:	7e df       	rcall	.-260    	; 0x634 <silence>
	static unsigned short it3;
	//static unsigned char it4;
	static unsigned char placeHolder;
	switch(state) {
		case Minit:
			state= Mwait;
     738:	c1 e0       	ldi	r28, 0x01	; 1
     73a:	d0 e0       	ldi	r29, 0x00	; 0
			it3 = 0;
			it4 = 1;
			prevSong = 0;
			nextSong = 0;
			silence();
			break;
     73c:	3c c3       	rjmp	.+1656   	; 0xdb6 <melodyTick+0x6d6>

		case Mwait:
			if (!paused) {
     73e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
     742:	88 23       	and	r24, r24
     744:	09 f4       	brne	.+2      	; 0x748 <melodyTick+0x68>
     746:	2c c3       	rjmp	.+1624   	; 0xda0 <melodyTick+0x6c0>
     748:	36 c3       	rjmp	.+1644   	; 0xdb6 <melodyTick+0x6d6>
				state= Mwait;
			}
			break;

		case Mplay:
			songDone = 0;
     74a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <songDone>
			if (paused) {
     74e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
     752:	88 23       	and	r24, r24
				silence();
     754:	41 f0       	breq	.+16     	; 0x766 <melodyTick+0x86>
				DisplayPaused();
     756:	6e df       	rcall	.-292    	; 0x634 <silence>
     758:	b2 df       	rcall	.-156    	; 0x6be <DisplayPaused>
				placeHolder = state;
     75a:	82 e0       	ldi	r24, 0x02	; 2
     75c:	80 93 f5 0a 	sts	0x0AF5, r24	; 0x800af5 <placeHolder.2240>
				state = Mp;
     760:	c5 e0       	ldi	r28, 0x05	; 5
     762:	d0 e0       	ldi	r29, 0x00	; 0
				break;
     764:	28 c3       	rjmp	.+1616   	; 0xdb6 <melodyTick+0x6d6>
			}
			//else {
				//DisplayName(it4);
			//}
			if (prevSong && (it1 == 0)) {
     766:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
     76a:	88 23       	and	r24, r24
     76c:	69 f1       	breq	.+90     	; 0x7c8 <melodyTick+0xe8>
     76e:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
     772:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     776:	89 2b       	or	r24, r25
     778:	d1 f4       	brne	.+52     	; 0x7ae <melodyTick+0xce>
				it1 = 0;
     77a:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
     77e:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
				it2 = 0;
     782:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
     786:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
				it3 = 0;
     78a:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
     78e:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
				if (it4 == 0) {
     792:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
     796:	81 11       	cpse	r24, r1
     798:	06 c0       	rjmp	.+12     	; 0x7a6 <melodyTick+0xc6>
					it4 = playList - 1;
     79a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     79e:	81 50       	subi	r24, 0x01	; 1
     7a0:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     7a4:	08 c3       	rjmp	.+1552   	; 0xdb6 <melodyTick+0x6d6>
					//else if (it4 == 0) {
						//DisplaySong1();
					//}
				}
				else {
					it4 = it4 - 1;
     7a6:	81 50       	subi	r24, 0x01	; 1
     7a8:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     7ac:	04 c3       	rjmp	.+1544   	; 0xdb6 <melodyTick+0x6d6>
				}
				state = Mplay;
				break;
			}
			else if (prevSong){
				it1 = 0;
     7ae:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
     7b2:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
				it2 = 0;
     7b6:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
     7ba:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
				it3 = 0;
     7be:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
     7c2:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
				state = Mplay;
				break;
     7c6:	f7 c2       	rjmp	.+1518   	; 0xdb6 <melodyTick+0x6d6>
		}
		if (nextSong) {
     7c8:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
     7cc:	88 23       	and	r24, r24
     7ce:	29 f1       	breq	.+74     	; 0x81a <melodyTick+0x13a>
			it1 = 0;
     7d0:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
     7d4:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
			it2 = 0;
     7d8:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
     7dc:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
			it3 = 0;
     7e0:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
     7e4:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
			it4 = it4 + 1;
     7e8:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
     7ec:	8f 5f       	subi	r24, 0xFF	; 255
     7ee:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
			if (it4 == playList) {
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	a0 e0       	ldi	r26, 0x00	; 0
     7f6:	b0 e0       	ldi	r27, 0x00	; 0
     7f8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7fc:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     800:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     804:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     808:	84 17       	cp	r24, r20
     80a:	95 07       	cpc	r25, r21
     80c:	a6 07       	cpc	r26, r22
     80e:	b7 07       	cpc	r27, r23
     810:	09 f0       	breq	.+2      	; 0x814 <melodyTick+0x134>
     812:	d1 c2       	rjmp	.+1442   	; 0xdb6 <melodyTick+0x6d6>
				it4 = 0;
     814:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
     818:	ce c2       	rjmp	.+1436   	; 0xdb6 <melodyTick+0x6d6>
			}
			state = Mplay;
			break;
		}
		if (playlistMel[it4][it1][it2] == -1) {
     81a:	60 91 05 0d 	lds	r22, 0x0D05	; 0x800d05 <it4>
     81e:	26 2f       	mov	r18, r22
     820:	30 e0       	ldi	r19, 0x00	; 0
     822:	f9 01       	movw	r30, r18
     824:	ee 0f       	add	r30, r30
     826:	ff 1f       	adc	r31, r31
     828:	e9 5d       	subi	r30, 0xD9	; 217
     82a:	fe 4f       	sbci	r31, 0xFE	; 254
     82c:	40 81       	ld	r20, Z
     82e:	51 81       	ldd	r21, Z+1	; 0x01
     830:	00 91 fa 0a 	lds	r16, 0x0AFA	; 0x800afa <it1.2237>
     834:	10 91 fb 0a 	lds	r17, 0x0AFB	; 0x800afb <it1.2237+0x1>
     838:	d8 01       	movw	r26, r16
     83a:	aa 0f       	add	r26, r26
     83c:	bb 1f       	adc	r27, r27
     83e:	a4 0f       	add	r26, r20
     840:	b5 1f       	adc	r27, r21
     842:	e0 91 f8 0a 	lds	r30, 0x0AF8	; 0x800af8 <it2.2238>
     846:	f0 91 f9 0a 	lds	r31, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     84a:	cf 01       	movw	r24, r30
     84c:	88 0f       	add	r24, r24
     84e:	99 1f       	adc	r25, r25
     850:	ed 91       	ld	r30, X+
     852:	fc 91       	ld	r31, X
     854:	e8 0f       	add	r30, r24
     856:	f9 1f       	adc	r31, r25
     858:	80 81       	ld	r24, Z
     85a:	91 81       	ldd	r25, Z+1	; 0x01
     85c:	01 96       	adiw	r24, 0x01	; 1
     85e:	51 f4       	brne	.+20     	; 0x874 <melodyTick+0x194>
			it1 = it1 + 1;
     860:	0f 5f       	subi	r16, 0xFF	; 255
     862:	1f 4f       	sbci	r17, 0xFF	; 255
     864:	10 93 fb 0a 	sts	0x0AFB, r17	; 0x800afb <it1.2237+0x1>
     868:	00 93 fa 0a 	sts	0x0AFA, r16	; 0x800afa <it1.2237>
			it2 = 0;
     86c:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
     870:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
		}
		if (it1 == numRows[it4]) {
     874:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
     878:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     87c:	f9 01       	movw	r30, r18
     87e:	ea 5f       	subi	r30, 0xFA	; 250
     880:	fe 4f       	sbci	r31, 0xFE	; 254
     882:	20 81       	ld	r18, Z
     884:	30 e0       	ldi	r19, 0x00	; 0
     886:	28 17       	cp	r18, r24
     888:	39 07       	cpc	r19, r25
     88a:	41 f5       	brne	.+80     	; 0x8dc <melodyTick+0x1fc>
			songDone = 1;
     88c:	81 e0       	ldi	r24, 0x01	; 1
     88e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <songDone>
			state = Mwait;
			it1 = 0;
     892:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
     896:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
			it2 = 0;
     89a:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
     89e:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
			it3 = 0;
     8a2:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
     8a6:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
			it4 = it4 + 1;
     8aa:	86 0f       	add	r24, r22
     8ac:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
			if (it4 == playList) {
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	a0 e0       	ldi	r26, 0x00	; 0
     8b4:	b0 e0       	ldi	r27, 0x00	; 0
     8b6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     8ba:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8be:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     8c2:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     8c6:	84 17       	cp	r24, r20
     8c8:	95 07       	cpc	r25, r21
     8ca:	a6 07       	cpc	r26, r22
     8cc:	b7 07       	cpc	r27, r23
     8ce:	09 f0       	breq	.+2      	; 0x8d2 <melodyTick+0x1f2>
     8d0:	6a c2       	rjmp	.+1236   	; 0xda6 <melodyTick+0x6c6>
				it4 = 0;
     8d2:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
			it1 = it1 + 1;
			it2 = 0;
		}
		if (it1 == numRows[it4]) {
			songDone = 1;
			state = Mwait;
     8d6:	c1 e0       	ldi	r28, 0x01	; 1
     8d8:	d0 e0       	ldi	r29, 0x00	; 0
     8da:	6d c2       	rjmp	.+1242   	; 0xdb6 <melodyTick+0x6d6>
			DisplaySong3();
		}*/
		//play(playlistMel[it4][it1][it2]);
		//play(playlistMel[it4][it1][it2]);
		//DisplayName(it4);
		if (it4 == 0) {
     8dc:	61 11       	cpse	r22, r1
     8de:	17 c0       	rjmp	.+46     	; 0x90e <melodyTick+0x22e>
			play(playlistMel[it4][it1][it2]);
     8e0:	88 0f       	add	r24, r24
     8e2:	99 1f       	adc	r25, r25
     8e4:	fa 01       	movw	r30, r20
     8e6:	e8 0f       	add	r30, r24
     8e8:	f9 1f       	adc	r31, r25
     8ea:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2238>
     8ee:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     8f2:	88 0f       	add	r24, r24
     8f4:	99 1f       	adc	r25, r25
     8f6:	01 90       	ld	r0, Z+
     8f8:	f0 81       	ld	r31, Z
     8fa:	e0 2d       	mov	r30, r0
     8fc:	e8 0f       	add	r30, r24
     8fe:	f9 1f       	adc	r31, r25
     900:	80 81       	ld	r24, Z
     902:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong1();
     904:	8f de       	rcall	.-738    	; 0x624 <play>
     906:	a8 de       	rcall	.-688    	; 0x658 <DisplaySong1>
			
			state = Ml;
     908:	c3 e0       	ldi	r28, 0x03	; 3
     90a:	d0 e0       	ldi	r29, 0x00	; 0
     90c:	54 c2       	rjmp	.+1192   	; 0xdb6 <melodyTick+0x6d6>
			//state = Ms0;
		}
		else if (it4 == 1) {
     90e:	61 30       	cpi	r22, 0x01	; 1
     910:	b9 f4       	brne	.+46     	; 0x940 <melodyTick+0x260>
			play(playlistMel[it4][it1][it2]);
     912:	88 0f       	add	r24, r24
     914:	99 1f       	adc	r25, r25
     916:	fa 01       	movw	r30, r20
     918:	e8 0f       	add	r30, r24
     91a:	f9 1f       	adc	r31, r25
     91c:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2238>
     920:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     924:	88 0f       	add	r24, r24
     926:	99 1f       	adc	r25, r25
     928:	01 90       	ld	r0, Z+
     92a:	f0 81       	ld	r31, Z
     92c:	e0 2d       	mov	r30, r0
     92e:	e8 0f       	add	r30, r24
     930:	f9 1f       	adc	r31, r25
     932:	80 81       	ld	r24, Z
     934:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong2();
     936:	76 de       	rcall	.-788    	; 0x624 <play>
     938:	a0 de       	rcall	.-704    	; 0x67a <DisplaySong2>
			
			state = Ml;
     93a:	c3 e0       	ldi	r28, 0x03	; 3
     93c:	d0 e0       	ldi	r29, 0x00	; 0
     93e:	3b c2       	rjmp	.+1142   	; 0xdb6 <melodyTick+0x6d6>
			//state = Ms1;
		}
		else if (it4 == 2) {
     940:	62 30       	cpi	r22, 0x02	; 2
     942:	09 f0       	breq	.+2      	; 0x946 <melodyTick+0x266>
     944:	38 c2       	rjmp	.+1136   	; 0xdb6 <melodyTick+0x6d6>
			play(playlistMel[it4][it1][it2]);
     946:	88 0f       	add	r24, r24
     948:	99 1f       	adc	r25, r25
     94a:	fa 01       	movw	r30, r20
     94c:	e8 0f       	add	r30, r24
     94e:	f9 1f       	adc	r31, r25
     950:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2238>
     954:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     958:	88 0f       	add	r24, r24
     95a:	99 1f       	adc	r25, r25
     95c:	01 90       	ld	r0, Z+
     95e:	f0 81       	ld	r31, Z
     960:	e0 2d       	mov	r30, r0
     962:	e8 0f       	add	r30, r24
     964:	f9 1f       	adc	r31, r25
     966:	80 81       	ld	r24, Z
     968:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong3();
     96a:	5c de       	rcall	.-840    	; 0x624 <play>
			
			state = Ml;
     96c:	97 de       	rcall	.-722    	; 0x69c <DisplaySong3>
     96e:	c3 e0       	ldi	r28, 0x03	; 3
     970:	d0 e0       	ldi	r29, 0x00	; 0

		//case Ms0:
					

		case Ml:
		if (paused) {
     972:	21 c2       	rjmp	.+1090   	; 0xdb6 <melodyTick+0x6d6>
     974:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
     978:	88 23       	and	r24, r24
			silence();
     97a:	41 f0       	breq	.+16     	; 0x98c <melodyTick+0x2ac>
     97c:	5b de       	rcall	.-842    	; 0x634 <silence>
			DisplayPaused();
     97e:	9f de       	rcall	.-706    	; 0x6be <DisplayPaused>
     980:	83 e0       	ldi	r24, 0x03	; 3
			placeHolder = state;
     982:	80 93 f5 0a 	sts	0x0AF5, r24	; 0x800af5 <placeHolder.2240>
     986:	c5 e0       	ldi	r28, 0x05	; 5
			state = Mp;
     988:	d0 e0       	ldi	r29, 0x00	; 0
     98a:	15 c2       	rjmp	.+1066   	; 0xdb6 <melodyTick+0x6d6>
			break;
     98c:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		if (prevSong && (it1 == 0)) {
     990:	88 23       	and	r24, r24
     992:	99 f1       	breq	.+102    	; 0x9fa <melodyTick+0x31a>
     994:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
     998:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     99c:	89 2b       	or	r24, r25
     99e:	f1 f4       	brne	.+60     	; 0x9dc <melodyTick+0x2fc>
     9a0:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
			it1 = 0;
     9a4:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     9a8:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			it2 = 0;
     9ac:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     9b0:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			it3 = 0;
     9b4:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     9b8:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			if (it4 == 0) {
     9bc:	81 11       	cpse	r24, r1
     9be:	08 c0       	rjmp	.+16     	; 0x9d0 <melodyTick+0x2f0>
     9c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
				it4 = playList - 1;
     9c4:	81 50       	subi	r24, 0x01	; 1
     9c6:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     9ca:	c2 e0       	ldi	r28, 0x02	; 2
				}
			else {
				it4 = it4 - 1;
			}
			state = Mplay;
     9cc:	d0 e0       	ldi	r29, 0x00	; 0
     9ce:	f3 c1       	rjmp	.+998    	; 0xdb6 <melodyTick+0x6d6>
     9d0:	81 50       	subi	r24, 0x01	; 1
			it3 = 0;
			if (it4 == 0) {
				it4 = playList - 1;
				}
			else {
				it4 = it4 - 1;
     9d2:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     9d6:	c2 e0       	ldi	r28, 0x02	; 2
			}
			state = Mplay;
     9d8:	d0 e0       	ldi	r29, 0x00	; 0
     9da:	ed c1       	rjmp	.+986    	; 0xdb6 <melodyTick+0x6d6>
     9dc:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
			break;
    }
    else if (prevSong){
			it1 = 0;
     9e0:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     9e4:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			it2 = 0;
     9e8:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     9ec:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			it3 = 0;
     9f0:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     9f4:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     9f6:	d0 e0       	ldi	r29, 0x00	; 0
     9f8:	de c1       	rjmp	.+956    	; 0xdb6 <melodyTick+0x6d6>
			break;
     9fa:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
     9fe:	88 23       	and	r24, r24
     a00:	39 f1       	breq	.+78     	; 0xa50 <melodyTick+0x370>
     a02:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
			it1 = 0;
     a06:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     a0a:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			it2 = 0;
     a0e:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     a12:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			it3 = 0;
     a16:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     a1a:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			it4 = it4 + 1;
     a1e:	8f 5f       	subi	r24, 0xFF	; 255
     a20:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     a24:	90 e0       	ldi	r25, 0x00	; 0
			if (it4 == playList) {
     a26:	a0 e0       	ldi	r26, 0x00	; 0
     a28:	b0 e0       	ldi	r27, 0x00	; 0
     a2a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a2e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a32:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     a36:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     a3a:	84 17       	cp	r24, r20
     a3c:	95 07       	cpc	r25, r21
     a3e:	a6 07       	cpc	r26, r22
     a40:	b7 07       	cpc	r27, r23
     a42:	09 f0       	breq	.+2      	; 0xa46 <melodyTick+0x366>
     a44:	b3 c1       	rjmp	.+870    	; 0xdac <melodyTick+0x6cc>
     a46:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
				it4 = 0;
     a4a:	c2 e0       	ldi	r28, 0x02	; 2
			}
			state = Mplay;
     a4c:	d0 e0       	ldi	r29, 0x00	; 0
     a4e:	b3 c1       	rjmp	.+870    	; 0xdb6 <melodyTick+0x6d6>
     a50:	20 91 f6 0a 	lds	r18, 0x0AF6	; 0x800af6 <it3.2239>
			break;
		}
		if (it3 < playlistMelNL[it4][it1][it2]) {
     a54:	30 91 f7 0a 	lds	r19, 0x0AF7	; 0x800af7 <it3.2239+0x1>
     a58:	e0 91 05 0d 	lds	r30, 0x0D05	; 0x800d05 <it4>
     a5c:	f0 e0       	ldi	r31, 0x00	; 0
     a5e:	ee 0f       	add	r30, r30
     a60:	ff 1f       	adc	r31, r31
     a62:	ef 5d       	subi	r30, 0xDF	; 223
     a64:	fe 4f       	sbci	r31, 0xFE	; 254
     a66:	a0 91 fa 0a 	lds	r26, 0x0AFA	; 0x800afa <it1.2237>
     a6a:	b0 91 fb 0a 	lds	r27, 0x0AFB	; 0x800afb <it1.2237+0x1>
     a6e:	cd 01       	movw	r24, r26
     a70:	88 0f       	add	r24, r24
     a72:	99 1f       	adc	r25, r25
     a74:	a0 81       	ld	r26, Z
     a76:	b1 81       	ldd	r27, Z+1	; 0x01
     a78:	a8 0f       	add	r26, r24
     a7a:	b9 1f       	adc	r27, r25
     a7c:	e0 91 f8 0a 	lds	r30, 0x0AF8	; 0x800af8 <it2.2238>
     a80:	f0 91 f9 0a 	lds	r31, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     a84:	cf 01       	movw	r24, r30
     a86:	88 0f       	add	r24, r24
     a88:	99 1f       	adc	r25, r25
     a8a:	ed 91       	ld	r30, X+
     a8c:	fc 91       	ld	r31, X
     a8e:	e8 0f       	add	r30, r24
     a90:	f9 1f       	adc	r31, r25
     a92:	80 81       	ld	r24, Z
     a94:	91 81       	ldd	r25, Z+1	; 0x01
     a96:	28 17       	cp	r18, r24
     a98:	39 07       	cpc	r19, r25
     a9a:	38 f4       	brcc	.+14     	; 0xaaa <melodyTick+0x3ca>
     a9c:	2f 5f       	subi	r18, 0xFF	; 255
			it3 = it3 + 1;
     a9e:	3f 4f       	sbci	r19, 0xFF	; 255
     aa0:	30 93 f7 0a 	sts	0x0AF7, r19	; 0x800af7 <it3.2239+0x1>
     aa4:	20 93 f6 0a 	sts	0x0AF6, r18	; 0x800af6 <it3.2239>
     aa8:	86 c1       	rjmp	.+780    	; 0xdb6 <melodyTick+0x6d6>
			state = Ml;
			}
			else {
				it3 = 0;
     aaa:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
				silence();
     aae:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
				state = Mr;
     ab2:	c0 dd       	rcall	.-1152   	; 0x634 <silence>
     ab4:	c4 e0       	ldi	r28, 0x04	; 4
     ab6:	d0 e0       	ldi	r29, 0x00	; 0
			DisplaySong3();
		}*/
		break;

		case Mr:
		if (paused) {
     ab8:	7e c1       	rjmp	.+764    	; 0xdb6 <melodyTick+0x6d6>
     aba:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
     abe:	88 23       	and	r24, r24
			DisplayPaused();
     ac0:	41 f0       	breq	.+16     	; 0xad2 <melodyTick+0x3f2>
     ac2:	fd dd       	rcall	.-1030   	; 0x6be <DisplayPaused>
			silence();
     ac4:	b7 dd       	rcall	.-1170   	; 0x634 <silence>
     ac6:	84 e0       	ldi	r24, 0x04	; 4
			placeHolder = state;
     ac8:	80 93 f5 0a 	sts	0x0AF5, r24	; 0x800af5 <placeHolder.2240>
     acc:	c5 e0       	ldi	r28, 0x05	; 5
			state = Mp;
     ace:	d0 e0       	ldi	r29, 0x00	; 0
     ad0:	72 c1       	rjmp	.+740    	; 0xdb6 <melodyTick+0x6d6>
			break;
     ad2:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		if (prevSong && (it1 == 0)) {
     ad6:	88 23       	and	r24, r24
     ad8:	99 f1       	breq	.+102    	; 0xb40 <melodyTick+0x460>
     ada:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
     ade:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     ae2:	89 2b       	or	r24, r25
     ae4:	f1 f4       	brne	.+60     	; 0xb22 <melodyTick+0x442>
     ae6:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
			it1 = 0;
     aea:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     aee:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			it2 = 0;
     af2:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     af6:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			it3 = 0;
     afa:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     afe:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			if (it4 == 0) {
     b02:	81 11       	cpse	r24, r1
     b04:	08 c0       	rjmp	.+16     	; 0xb16 <melodyTick+0x436>
     b06:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
				it4 = playList - 1;
     b0a:	81 50       	subi	r24, 0x01	; 1
     b0c:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     b10:	c2 e0       	ldi	r28, 0x02	; 2
				}
      else {
				it4 = it4 - 1;
			}
			state = Mplay;
     b12:	d0 e0       	ldi	r29, 0x00	; 0
     b14:	50 c1       	rjmp	.+672    	; 0xdb6 <melodyTick+0x6d6>
     b16:	81 50       	subi	r24, 0x01	; 1
			it3 = 0;
			if (it4 == 0) {
				it4 = playList - 1;
				}
      else {
				it4 = it4 - 1;
     b18:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     b1c:	c2 e0       	ldi	r28, 0x02	; 2
			}
			state = Mplay;
     b1e:	d0 e0       	ldi	r29, 0x00	; 0
     b20:	4a c1       	rjmp	.+660    	; 0xdb6 <melodyTick+0x6d6>
     b22:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
			break;
    }
    else if (prevSong){
			it1 = 0;
     b26:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     b2a:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			 it2 = 0;
     b2e:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     b32:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			  it3 = 0;
     b36:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     b3a:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     b3c:	d0 e0       	ldi	r29, 0x00	; 0
     b3e:	3b c1       	rjmp	.+630    	; 0xdb6 <melodyTick+0x6d6>
			break;
     b40:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
     b44:	88 23       	and	r24, r24
     b46:	39 f1       	breq	.+78     	; 0xb96 <melodyTick+0x4b6>
     b48:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
			it1 = 0;
     b4c:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     b50:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			 it2 = 0;
     b54:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     b58:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			 it3 = 0;
     b5c:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     b60:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			it4 = it4 + 1;
     b64:	8f 5f       	subi	r24, 0xFF	; 255
     b66:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     b6a:	90 e0       	ldi	r25, 0x00	; 0
			if (it4 == playList) {
     b6c:	a0 e0       	ldi	r26, 0x00	; 0
     b6e:	b0 e0       	ldi	r27, 0x00	; 0
     b70:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b74:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b78:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     b7c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     b80:	84 17       	cp	r24, r20
     b82:	95 07       	cpc	r25, r21
     b84:	a6 07       	cpc	r26, r22
     b86:	b7 07       	cpc	r27, r23
     b88:	09 f0       	breq	.+2      	; 0xb8c <melodyTick+0x4ac>
     b8a:	13 c1       	rjmp	.+550    	; 0xdb2 <melodyTick+0x6d2>
     b8c:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
				it4 = 0;
     b90:	c2 e0       	ldi	r28, 0x02	; 2
			}
			state = Mplay;
     b92:	d0 e0       	ldi	r29, 0x00	; 0
     b94:	10 c1       	rjmp	.+544    	; 0xdb6 <melodyTick+0x6d6>
     b96:	20 91 f8 0a 	lds	r18, 0x0AF8	; 0x800af8 <it2.2238>
			break;
		}
		if (it3 < playlistMelRL[it4][it1][it2]) {
     b9a:	30 91 f9 0a 	lds	r19, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     b9e:	40 91 f6 0a 	lds	r20, 0x0AF6	; 0x800af6 <it3.2239>
     ba2:	50 91 f7 0a 	lds	r21, 0x0AF7	; 0x800af7 <it3.2239+0x1>
     ba6:	e0 91 05 0d 	lds	r30, 0x0D05	; 0x800d05 <it4>
     baa:	f0 e0       	ldi	r31, 0x00	; 0
     bac:	ee 0f       	add	r30, r30
     bae:	ff 1f       	adc	r31, r31
     bb0:	e5 5e       	subi	r30, 0xE5	; 229
     bb2:	fe 4f       	sbci	r31, 0xFE	; 254
     bb4:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
     bb8:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     bbc:	88 0f       	add	r24, r24
     bbe:	99 1f       	adc	r25, r25
     bc0:	01 90       	ld	r0, Z+
     bc2:	f0 81       	ld	r31, Z
     bc4:	e0 2d       	mov	r30, r0
     bc6:	e8 0f       	add	r30, r24
     bc8:	f9 1f       	adc	r31, r25
     bca:	c9 01       	movw	r24, r18
     bcc:	88 0f       	add	r24, r24
     bce:	99 1f       	adc	r25, r25
     bd0:	01 90       	ld	r0, Z+
     bd2:	f0 81       	ld	r31, Z
     bd4:	e0 2d       	mov	r30, r0
     bd6:	e8 0f       	add	r30, r24
     bd8:	f9 1f       	adc	r31, r25
     bda:	80 81       	ld	r24, Z
     bdc:	91 81       	ldd	r25, Z+1	; 0x01
     bde:	48 17       	cp	r20, r24
     be0:	59 07       	cpc	r21, r25
     be2:	38 f4       	brcc	.+14     	; 0xbf2 <melodyTick+0x512>
     be4:	4f 5f       	subi	r20, 0xFF	; 255
			it3 = it3 + 1;
     be6:	5f 4f       	sbci	r21, 0xFF	; 255
     be8:	50 93 f7 0a 	sts	0x0AF7, r21	; 0x800af7 <it3.2239+0x1>
     bec:	40 93 f6 0a 	sts	0x0AF6, r20	; 0x800af6 <it3.2239>
     bf0:	e2 c0       	rjmp	.+452    	; 0xdb6 <melodyTick+0x6d6>
     bf2:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			state = Mr;
			}
    else {
			it3 = 0;
     bf6:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     bfa:	2f 5f       	subi	r18, 0xFF	; 255
			it2 = it2 + 1;
     bfc:	3f 4f       	sbci	r19, 0xFF	; 255
     bfe:	30 93 f9 0a 	sts	0x0AF9, r19	; 0x800af9 <it2.2238+0x1>
     c02:	20 93 f8 0a 	sts	0x0AF8, r18	; 0x800af8 <it2.2238>
     c06:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     c08:	d0 e0       	ldi	r29, 0x00	; 0
     c0a:	d5 c0       	rjmp	.+426    	; 0xdb6 <melodyTick+0x6d6>
     c0c:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		break;

		case Mp:
		if (prevSong && (it1 == 0)) {
     c10:	88 23       	and	r24, r24
     c12:	a9 f1       	breq	.+106    	; 0xc7e <melodyTick+0x59e>
     c14:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
     c18:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     c1c:	89 2b       	or	r24, r25
     c1e:	f1 f4       	brne	.+60     	; 0xc5c <melodyTick+0x57c>
     c20:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
			it1 = 0;
     c24:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     c28:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			it2 = 0;
     c2c:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     c30:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			it3 = 0;
     c34:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     c38:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			if (it4 == 0) {
     c3c:	81 11       	cpse	r24, r1
     c3e:	06 c0       	rjmp	.+12     	; 0xc4c <melodyTick+0x56c>
     c40:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
				it4 = playList - 1;
     c44:	81 50       	subi	r24, 0x01	; 1
     c46:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     c4a:	03 c0       	rjmp	.+6      	; 0xc52 <melodyTick+0x572>
     c4c:	81 50       	subi	r24, 0x01	; 1
				}
      else {
				it4 = it4 - 1;
     c4e:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     c52:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <paused>
			}
			paused = 0;
     c56:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     c58:	d0 e0       	ldi	r29, 0x00	; 0
     c5a:	ad c0       	rjmp	.+346    	; 0xdb6 <melodyTick+0x6d6>
			break;
     c5c:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
    } else if (prevSong){
			it1 = 0;
     c60:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     c64:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			it2 = 0;
     c68:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     c6c:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			it3 = 0;
     c70:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     c74:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <paused>
			paused = 0;
     c78:	c2 e0       	ldi	r28, 0x02	; 2
			state = Mplay;
     c7a:	d0 e0       	ldi	r29, 0x00	; 0
     c7c:	9c c0       	rjmp	.+312    	; 0xdb6 <melodyTick+0x6d6>
			break;
     c7e:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
     c82:	88 23       	and	r24, r24
     c84:	41 f1       	breq	.+80     	; 0xcd6 <melodyTick+0x5f6>
     c86:	10 92 fb 0a 	sts	0x0AFB, r1	; 0x800afb <it1.2237+0x1>
			it1 = 0;
     c8a:	10 92 fa 0a 	sts	0x0AFA, r1	; 0x800afa <it1.2237>
     c8e:	10 92 f9 0a 	sts	0x0AF9, r1	; 0x800af9 <it2.2238+0x1>
			it2 = 0;
     c92:	10 92 f8 0a 	sts	0x0AF8, r1	; 0x800af8 <it2.2238>
     c96:	10 92 f7 0a 	sts	0x0AF7, r1	; 0x800af7 <it3.2239+0x1>
			it3 = 0;
     c9a:	10 92 f6 0a 	sts	0x0AF6, r1	; 0x800af6 <it3.2239>
     c9e:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
			it4 = it4 + 1;
     ca2:	8f 5f       	subi	r24, 0xFF	; 255
     ca4:	80 93 05 0d 	sts	0x0D05, r24	; 0x800d05 <it4>
     ca8:	90 e0       	ldi	r25, 0x00	; 0
			if (it4 == playList) {
     caa:	a0 e0       	ldi	r26, 0x00	; 0
     cac:	b0 e0       	ldi	r27, 0x00	; 0
     cae:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     cb2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     cb6:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     cba:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     cbe:	84 17       	cp	r24, r20
     cc0:	95 07       	cpc	r25, r21
     cc2:	a6 07       	cpc	r26, r22
     cc4:	b7 07       	cpc	r27, r23
     cc6:	11 f4       	brne	.+4      	; 0xccc <melodyTick+0x5ec>
				it4 = 0;
     cc8:	10 92 05 0d 	sts	0x0D05, r1	; 0x800d05 <it4>
			}
			paused = 0;
     ccc:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <paused>
			state = Mplay;
     cd0:	c2 e0       	ldi	r28, 0x02	; 2
     cd2:	d0 e0       	ldi	r29, 0x00	; 0
			break;
     cd4:	70 c0       	rjmp	.+224    	; 0xdb6 <melodyTick+0x6d6>
		}
		if (paused) {
     cd6:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
     cda:	88 23       	and	r24, r24
     cdc:	11 f0       	breq	.+4      	; 0xce2 <melodyTick+0x602>
			DisplayPaused();
     cde:	ef dc       	rcall	.-1570   	; 0x6be <DisplayPaused>
     ce0:	6a c0       	rjmp	.+212    	; 0xdb6 <melodyTick+0x6d6>
     ce2:	c0 91 f5 0a 	lds	r28, 0x0AF5	; 0x800af5 <placeHolder.2240>
			state = Mp;
			}
    else {
			if (placeHolder == Ml) {
     ce6:	c3 30       	cpi	r28, 0x03	; 3
     ce8:	09 f0       	breq	.+2      	; 0xcec <melodyTick+0x60c>
     cea:	58 c0       	rjmp	.+176    	; 0xd9c <melodyTick+0x6bc>
     cec:	80 91 05 0d 	lds	r24, 0x0D05	; 0x800d05 <it4>
				}
				else if (it4 == 2) {
					DisplaySong3();
				}*/
				
				if (it4 == 0) {
     cf0:	81 11       	cpse	r24, r1
     cf2:	1b c0       	rjmp	.+54     	; 0xd2a <melodyTick+0x64a>
     cf4:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
					play(playlistMel[it4][it1][it2]);
     cf8:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     cfc:	88 0f       	add	r24, r24
     cfe:	99 1f       	adc	r25, r25
     d00:	e0 91 27 01 	lds	r30, 0x0127	; 0x800127 <playlistMel>
     d04:	f0 91 28 01 	lds	r31, 0x0128	; 0x800128 <playlistMel+0x1>
     d08:	e8 0f       	add	r30, r24
     d0a:	f9 1f       	adc	r31, r25
     d0c:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2238>
     d10:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     d14:	88 0f       	add	r24, r24
     d16:	99 1f       	adc	r25, r25
     d18:	01 90       	ld	r0, Z+
     d1a:	f0 81       	ld	r31, Z
     d1c:	e0 2d       	mov	r30, r0
     d1e:	e8 0f       	add	r30, r24
     d20:	f9 1f       	adc	r31, r25
     d22:	80 81       	ld	r24, Z
     d24:	91 81       	ldd	r25, Z+1	; 0x01
     d26:	7e dc       	rcall	.-1796   	; 0x624 <play>
     d28:	39 c0       	rjmp	.+114    	; 0xd9c <melodyTick+0x6bc>
     d2a:	81 30       	cpi	r24, 0x01	; 1
					//DisplaySong1();
					
				}
				else if (it4 == 1) {
     d2c:	d9 f4       	brne	.+54     	; 0xd64 <melodyTick+0x684>
     d2e:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
					play(playlistMel[it4][it1][it2]);
     d32:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     d36:	88 0f       	add	r24, r24
     d38:	99 1f       	adc	r25, r25
     d3a:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <playlistMel+0x2>
     d3e:	f0 91 2a 01 	lds	r31, 0x012A	; 0x80012a <playlistMel+0x3>
     d42:	e8 0f       	add	r30, r24
     d44:	f9 1f       	adc	r31, r25
     d46:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2238>
     d4a:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     d4e:	88 0f       	add	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	01 90       	ld	r0, Z+
     d54:	f0 81       	ld	r31, Z
     d56:	e0 2d       	mov	r30, r0
     d58:	e8 0f       	add	r30, r24
     d5a:	f9 1f       	adc	r31, r25
     d5c:	80 81       	ld	r24, Z
     d5e:	91 81       	ldd	r25, Z+1	; 0x01
     d60:	61 dc       	rcall	.-1854   	; 0x624 <play>
     d62:	1c c0       	rjmp	.+56     	; 0xd9c <melodyTick+0x6bc>
     d64:	82 30       	cpi	r24, 0x02	; 2
					//DisplaySong2();
					
				}
				else if (it4 == 2) {
     d66:	d1 f4       	brne	.+52     	; 0xd9c <melodyTick+0x6bc>
     d68:	80 91 fa 0a 	lds	r24, 0x0AFA	; 0x800afa <it1.2237>
					play(playlistMel[it4][it1][it2]);
     d6c:	90 91 fb 0a 	lds	r25, 0x0AFB	; 0x800afb <it1.2237+0x1>
     d70:	88 0f       	add	r24, r24
     d72:	99 1f       	adc	r25, r25
     d74:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <playlistMel+0x4>
     d78:	f0 91 2c 01 	lds	r31, 0x012C	; 0x80012c <playlistMel+0x5>
     d7c:	e8 0f       	add	r30, r24
     d7e:	f9 1f       	adc	r31, r25
     d80:	80 91 f8 0a 	lds	r24, 0x0AF8	; 0x800af8 <it2.2238>
     d84:	90 91 f9 0a 	lds	r25, 0x0AF9	; 0x800af9 <it2.2238+0x1>
     d88:	88 0f       	add	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	01 90       	ld	r0, Z+
     d8e:	f0 81       	ld	r31, Z
     d90:	e0 2d       	mov	r30, r0
     d92:	e8 0f       	add	r30, r24
     d94:	f9 1f       	adc	r31, r25
     d96:	80 81       	ld	r24, Z
     d98:	91 81       	ldd	r25, Z+1	; 0x01
     d9a:	44 dc       	rcall	.-1912   	; 0x624 <play>
     d9c:	d0 e0       	ldi	r29, 0x00	; 0
				}
				//play(playlistMel[it4][it1][it2]);
					
				}
			//DisplayName(it4);
			state = placeHolder;
     d9e:	0b c0       	rjmp	.+22     	; 0xdb6 <melodyTick+0x6d6>
     da0:	c2 e0       	ldi	r28, 0x02	; 2
			silence();
			break;

		case Mwait:
			if (!paused) {
				state= Mplay;
     da2:	d0 e0       	ldi	r29, 0x00	; 0
     da4:	08 c0       	rjmp	.+16     	; 0xdb6 <melodyTick+0x6d6>
     da6:	c1 e0       	ldi	r28, 0x01	; 1
			it1 = it1 + 1;
			it2 = 0;
		}
		if (it1 == numRows[it4]) {
			songDone = 1;
			state = Mwait;
     da8:	d0 e0       	ldi	r29, 0x00	; 0
     daa:	05 c0       	rjmp	.+10     	; 0xdb6 <melodyTick+0x6d6>
     dac:	c2 e0       	ldi	r28, 0x02	; 2
			it3 = 0;
			it4 = it4 + 1;
			if (it4 == playList) {
				it4 = 0;
			}
			state = Mplay;
     dae:	d0 e0       	ldi	r29, 0x00	; 0
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <melodyTick+0x6d6>
     db2:	c2 e0       	ldi	r28, 0x02	; 2
			 it3 = 0;
			it4 = it4 + 1;
			if (it4 == playList) {
				it4 = 0;
			}
			state = Mplay;
     db4:	d0 e0       	ldi	r29, 0x00	; 0
     db6:	ce 01       	movw	r24, r28
		}
		break;
	}
	//DisplayName(it4);
	return state;
}
     db8:	df 91       	pop	r29
     dba:	cf 91       	pop	r28
     dbc:	1f 91       	pop	r17
     dbe:	0f 91       	pop	r16
     dc0:	08 95       	ret

00000dc2 <bassTick>:
     dc2:	0f 93       	push	r16
unsigned char it42;
enum BassStates{Binit, Bwait, Bplay, Bl, Br, Bp};
int bassTick(int state) {
     dc4:	1f 93       	push	r17
     dc6:	cf 93       	push	r28
     dc8:	df 93       	push	r29
     dca:	ec 01       	movw	r28, r24
	static unsigned short it1;
	static unsigned short it2;
	static unsigned short it3;
	//static unsigned char it42 = 0;
	static unsigned char placeHolder;
	switch(state) {
     dcc:	82 30       	cpi	r24, 0x02	; 2
     dce:	91 05       	cpc	r25, r1
     dd0:	69 f1       	breq	.+90     	; 0xe2c <bassTick+0x6a>
     dd2:	2c f4       	brge	.+10     	; 0xdde <bassTick+0x1c>
     dd4:	00 97       	sbiw	r24, 0x00	; 0
     dd6:	69 f0       	breq	.+26     	; 0xdf2 <bassTick+0x30>
     dd8:	01 97       	sbiw	r24, 0x01	; 1
     dda:	11 f1       	breq	.+68     	; 0xe20 <bassTick+0x5e>
     ddc:	5d c3       	rjmp	.+1722   	; 0x1498 <bassTick+0x6d6>
     dde:	84 30       	cpi	r24, 0x04	; 4
     de0:	91 05       	cpc	r25, r1
     de2:	09 f4       	brne	.+2      	; 0xde6 <bassTick+0x24>
     de4:	db c1       	rjmp	.+950    	; 0x119c <bassTick+0x3da>
     de6:	0c f4       	brge	.+2      	; 0xdea <bassTick+0x28>
     de8:	36 c1       	rjmp	.+620    	; 0x1056 <bassTick+0x294>
     dea:	05 97       	sbiw	r24, 0x05	; 5
     dec:	09 f4       	brne	.+2      	; 0xdf0 <bassTick+0x2e>
     dee:	7f c2       	rjmp	.+1278   	; 0x12ee <bassTick+0x52c>
     df0:	53 c3       	rjmp	.+1702   	; 0x1498 <bassTick+0x6d6>
		case Binit:
		state= Bwait;
		it1 = 0;
     df2:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
     df6:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
		it2 = 0;
     dfa:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
     dfe:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
		it3 = 0;
     e02:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
     e06:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
		it42 = 1;
     e0a:	81 e0       	ldi	r24, 0x01	; 1
     e0c:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
		prevSong = 0;
     e10:	10 92 06 0d 	sts	0x0D06, r1	; 0x800d06 <prevSong>
		nextSong = 0;
     e14:	10 92 03 0d 	sts	0x0D03, r1	; 0x800d03 <nextSong>
		silenceB();
     e18:	1a dc       	rcall	.-1996   	; 0x64e <silenceB>
	static unsigned short it3;
	//static unsigned char it42 = 0;
	static unsigned char placeHolder;
	switch(state) {
		case Binit:
		state= Bwait;
     e1a:	c1 e0       	ldi	r28, 0x01	; 1
     e1c:	d0 e0       	ldi	r29, 0x00	; 0
		it3 = 0;
		it42 = 1;
		prevSong = 0;
		nextSong = 0;
		silenceB();
		break;
     e1e:	3c c3       	rjmp	.+1656   	; 0x1498 <bassTick+0x6d6>

		case Bwait:
		if (!paused) {
     e20:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
     e24:	88 23       	and	r24, r24
     e26:	09 f4       	brne	.+2      	; 0xe2a <bassTick+0x68>
     e28:	2c c3       	rjmp	.+1624   	; 0x1482 <bassTick+0x6c0>
     e2a:	36 c3       	rjmp	.+1644   	; 0x1498 <bassTick+0x6d6>
			state= Bwait;
		}
		break;

		case Bplay:
		songDone = 0;
     e2c:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <songDone>
		if (paused) {
     e30:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
     e34:	88 23       	and	r24, r24
			silenceB();
     e36:	41 f0       	breq	.+16     	; 0xe48 <bassTick+0x86>
			DisplayPaused();
     e38:	0a dc       	rcall	.-2028   	; 0x64e <silenceB>
     e3a:	41 dc       	rcall	.-1918   	; 0x6be <DisplayPaused>
			placeHolder = state;
     e3c:	82 e0       	ldi	r24, 0x02	; 2
     e3e:	80 93 ee 0a 	sts	0x0AEE, r24	; 0x800aee <placeHolder.2262>
			state = Bp;
     e42:	c5 e0       	ldi	r28, 0x05	; 5
     e44:	d0 e0       	ldi	r29, 0x00	; 0
			break;
     e46:	28 c3       	rjmp	.+1616   	; 0x1498 <bassTick+0x6d6>
		}
		if (prevSong && (it1 == 0)) {
     e48:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
     e4c:	88 23       	and	r24, r24
     e4e:	69 f1       	breq	.+90     	; 0xeaa <bassTick+0xe8>
     e50:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
     e54:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
     e58:	89 2b       	or	r24, r25
     e5a:	d1 f4       	brne	.+52     	; 0xe90 <bassTick+0xce>
			it1 = 0;
     e5c:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
     e60:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
			it2 = 0;
     e64:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
     e68:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
			it3 = 0;
     e6c:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
     e70:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
			if (it42 == 0) {
     e74:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
     e78:	81 11       	cpse	r24, r1
     e7a:	06 c0       	rjmp	.+12     	; 0xe88 <bassTick+0xc6>
				it42 = playList - 1;
     e7c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e80:	81 50       	subi	r24, 0x01	; 1
     e82:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
     e86:	08 c3       	rjmp	.+1552   	; 0x1498 <bassTick+0x6d6>
			}
			else {
				it42 = it42 - 1;
     e88:	81 50       	subi	r24, 0x01	; 1
     e8a:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
     e8e:	04 c3       	rjmp	.+1544   	; 0x1498 <bassTick+0x6d6>
			}
			state = Bplay;
			break;
		}
		else if (prevSong){
			it1 = 0;
     e90:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
     e94:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
			it2 = 0;
     e98:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
     e9c:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
			it3 = 0;
     ea0:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
     ea4:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
			state = Bplay;
			break;
     ea8:	f7 c2       	rjmp	.+1518   	; 0x1498 <bassTick+0x6d6>
		}
		if (nextSong) {
     eaa:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
     eae:	88 23       	and	r24, r24
     eb0:	29 f1       	breq	.+74     	; 0xefc <bassTick+0x13a>
			it1 = 0;
     eb2:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
     eb6:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
			it2 = 0;
     eba:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
     ebe:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
			it3 = 0;
     ec2:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
     ec6:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
			it42 = it42 + 1;;
     eca:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
     ece:	8f 5f       	subi	r24, 0xFF	; 255
     ed0:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
			if (it42 == playList) {
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	a0 e0       	ldi	r26, 0x00	; 0
     ed8:	b0 e0       	ldi	r27, 0x00	; 0
     eda:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ede:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     ee2:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     ee6:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     eea:	84 17       	cp	r24, r20
     eec:	95 07       	cpc	r25, r21
     eee:	a6 07       	cpc	r26, r22
     ef0:	b7 07       	cpc	r27, r23
     ef2:	09 f0       	breq	.+2      	; 0xef6 <bassTick+0x134>
     ef4:	d1 c2       	rjmp	.+1442   	; 0x1498 <bassTick+0x6d6>
				it42 = 0;
     ef6:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
     efa:	ce c2       	rjmp	.+1436   	; 0x1498 <bassTick+0x6d6>
			}
			state = Bplay;
			break;
		}
		if (playlistBas[it42][it1][it2] == -1) {
     efc:	60 91 04 0d 	lds	r22, 0x0D04	; 0x800d04 <it42>
     f00:	26 2f       	mov	r18, r22
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	f9 01       	movw	r30, r18
     f06:	ee 0f       	add	r30, r30
     f08:	ff 1f       	adc	r31, r31
     f0a:	eb 5e       	subi	r30, 0xEB	; 235
     f0c:	fe 4f       	sbci	r31, 0xFE	; 254
     f0e:	40 81       	ld	r20, Z
     f10:	51 81       	ldd	r21, Z+1	; 0x01
     f12:	00 91 f3 0a 	lds	r16, 0x0AF3	; 0x800af3 <it1.2259>
     f16:	10 91 f4 0a 	lds	r17, 0x0AF4	; 0x800af4 <it1.2259+0x1>
     f1a:	d8 01       	movw	r26, r16
     f1c:	aa 0f       	add	r26, r26
     f1e:	bb 1f       	adc	r27, r27
     f20:	a4 0f       	add	r26, r20
     f22:	b5 1f       	adc	r27, r21
     f24:	e0 91 f1 0a 	lds	r30, 0x0AF1	; 0x800af1 <it2.2260>
     f28:	f0 91 f2 0a 	lds	r31, 0x0AF2	; 0x800af2 <it2.2260+0x1>
     f2c:	cf 01       	movw	r24, r30
     f2e:	88 0f       	add	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	ed 91       	ld	r30, X+
     f34:	fc 91       	ld	r31, X
     f36:	e8 0f       	add	r30, r24
     f38:	f9 1f       	adc	r31, r25
     f3a:	80 81       	ld	r24, Z
     f3c:	91 81       	ldd	r25, Z+1	; 0x01
     f3e:	01 96       	adiw	r24, 0x01	; 1
     f40:	51 f4       	brne	.+20     	; 0xf56 <bassTick+0x194>
			it1 = it1 + 1;
     f42:	0f 5f       	subi	r16, 0xFF	; 255
     f44:	1f 4f       	sbci	r17, 0xFF	; 255
     f46:	10 93 f4 0a 	sts	0x0AF4, r17	; 0x800af4 <it1.2259+0x1>
     f4a:	00 93 f3 0a 	sts	0x0AF3, r16	; 0x800af3 <it1.2259>
			it2 = 0;
     f4e:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
     f52:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
		}
		if (it1 == numRows[it42]) {
     f56:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
     f5a:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
     f5e:	f9 01       	movw	r30, r18
     f60:	ea 5f       	subi	r30, 0xFA	; 250
     f62:	fe 4f       	sbci	r31, 0xFE	; 254
     f64:	20 81       	ld	r18, Z
     f66:	30 e0       	ldi	r19, 0x00	; 0
     f68:	28 17       	cp	r18, r24
     f6a:	39 07       	cpc	r19, r25
     f6c:	41 f5       	brne	.+80     	; 0xfbe <bassTick+0x1fc>
			songDone = 1;
     f6e:	81 e0       	ldi	r24, 0x01	; 1
     f70:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <songDone>
			state = Bwait;
			it1 = 0;
     f74:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
     f78:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
			it2 = 0;
     f7c:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
     f80:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
			it3 = 0;
     f84:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
     f88:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
			it42 = it42 + 1;
     f8c:	86 0f       	add	r24, r22
     f8e:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
			if (it42 == playList) {
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	a0 e0       	ldi	r26, 0x00	; 0
     f96:	b0 e0       	ldi	r27, 0x00	; 0
     f98:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     f9c:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     fa0:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     fa4:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     fa8:	84 17       	cp	r24, r20
     faa:	95 07       	cpc	r25, r21
     fac:	a6 07       	cpc	r26, r22
     fae:	b7 07       	cpc	r27, r23
     fb0:	09 f0       	breq	.+2      	; 0xfb4 <bassTick+0x1f2>
     fb2:	6a c2       	rjmp	.+1236   	; 0x1488 <bassTick+0x6c6>
				it42 = 0;
     fb4:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
			it1 = it1 + 1;
			it2 = 0;
		}
		if (it1 == numRows[it42]) {
			songDone = 1;
			state = Bwait;
     fb8:	c1 e0       	ldi	r28, 0x01	; 1
     fba:	d0 e0       	ldi	r29, 0x00	; 0
     fbc:	6d c2       	rjmp	.+1242   	; 0x1498 <bassTick+0x6d6>
			break;
		}
		//playB(playlistBas[it42][it1][it2]);
		//playB(playlistBas[it4][it1][it2]);
		//DisplayName(it42);
		if (it42 == 0) {
     fbe:	61 11       	cpse	r22, r1
     fc0:	17 c0       	rjmp	.+46     	; 0xff0 <bassTick+0x22e>
			playB(playlistBas[it42][it1][it2]);
     fc2:	88 0f       	add	r24, r24
     fc4:	99 1f       	adc	r25, r25
     fc6:	fa 01       	movw	r30, r20
     fc8:	e8 0f       	add	r30, r24
     fca:	f9 1f       	adc	r31, r25
     fcc:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2260>
     fd0:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2260+0x1>
     fd4:	88 0f       	add	r24, r24
     fd6:	99 1f       	adc	r25, r25
     fd8:	01 90       	ld	r0, Z+
     fda:	f0 81       	ld	r31, Z
     fdc:	e0 2d       	mov	r30, r0
     fde:	e8 0f       	add	r30, r24
     fe0:	f9 1f       	adc	r31, r25
     fe2:	80 81       	ld	r24, Z
     fe4:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong1();
     fe6:	2b db       	rcall	.-2474   	; 0x63e <playB>
     fe8:	37 db       	rcall	.-2450   	; 0x658 <DisplaySong1>
			state = Bl;
     fea:	c3 e0       	ldi	r28, 0x03	; 3
     fec:	d0 e0       	ldi	r29, 0x00	; 0
     fee:	54 c2       	rjmp	.+1192   	; 0x1498 <bassTick+0x6d6>
		}
		else if (it42 == 1) {
     ff0:	61 30       	cpi	r22, 0x01	; 1
     ff2:	b9 f4       	brne	.+46     	; 0x1022 <bassTick+0x260>
			playB(playlistBas[it42][it1][it2]);
     ff4:	88 0f       	add	r24, r24
     ff6:	99 1f       	adc	r25, r25
     ff8:	fa 01       	movw	r30, r20
     ffa:	e8 0f       	add	r30, r24
     ffc:	f9 1f       	adc	r31, r25
     ffe:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2260>
    1002:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2260+0x1>
    1006:	88 0f       	add	r24, r24
    1008:	99 1f       	adc	r25, r25
    100a:	01 90       	ld	r0, Z+
    100c:	f0 81       	ld	r31, Z
    100e:	e0 2d       	mov	r30, r0
    1010:	e8 0f       	add	r30, r24
    1012:	f9 1f       	adc	r31, r25
    1014:	80 81       	ld	r24, Z
    1016:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong2();
    1018:	12 db       	rcall	.-2524   	; 0x63e <playB>
    101a:	2f db       	rcall	.-2466   	; 0x67a <DisplaySong2>
			state = Bl;
    101c:	c3 e0       	ldi	r28, 0x03	; 3
    101e:	d0 e0       	ldi	r29, 0x00	; 0
    1020:	3b c2       	rjmp	.+1142   	; 0x1498 <bassTick+0x6d6>
		}
		else if (it42 == 2) {
    1022:	62 30       	cpi	r22, 0x02	; 2
    1024:	09 f0       	breq	.+2      	; 0x1028 <bassTick+0x266>
    1026:	38 c2       	rjmp	.+1136   	; 0x1498 <bassTick+0x6d6>
			playB(playlistBas[it42][it1][it2]);
    1028:	88 0f       	add	r24, r24
    102a:	99 1f       	adc	r25, r25
    102c:	fa 01       	movw	r30, r20
    102e:	e8 0f       	add	r30, r24
    1030:	f9 1f       	adc	r31, r25
    1032:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2260>
    1036:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2260+0x1>
    103a:	88 0f       	add	r24, r24
    103c:	99 1f       	adc	r25, r25
    103e:	01 90       	ld	r0, Z+
    1040:	f0 81       	ld	r31, Z
    1042:	e0 2d       	mov	r30, r0
    1044:	e8 0f       	add	r30, r24
    1046:	f9 1f       	adc	r31, r25
    1048:	80 81       	ld	r24, Z
    104a:	91 81       	ldd	r25, Z+1	; 0x01
			DisplaySong3();
    104c:	f8 da       	rcall	.-2576   	; 0x63e <playB>
			state = Bl;
    104e:	26 db       	rcall	.-2484   	; 0x69c <DisplaySong3>
    1050:	c3 e0       	ldi	r28, 0x03	; 3
    1052:	d0 e0       	ldi	r29, 0x00	; 0
		//playB(playlistBas[it42][it1][it2]);
		//state = Bl;
		break;

		case Bl:
		if (paused) {
    1054:	21 c2       	rjmp	.+1090   	; 0x1498 <bassTick+0x6d6>
    1056:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
    105a:	88 23       	and	r24, r24
			silenceB();
    105c:	41 f0       	breq	.+16     	; 0x106e <bassTick+0x2ac>
    105e:	f7 da       	rcall	.-2578   	; 0x64e <silenceB>
			DisplayPaused();
    1060:	2e db       	rcall	.-2468   	; 0x6be <DisplayPaused>
    1062:	83 e0       	ldi	r24, 0x03	; 3
			placeHolder = state;
    1064:	80 93 ee 0a 	sts	0x0AEE, r24	; 0x800aee <placeHolder.2262>
    1068:	c5 e0       	ldi	r28, 0x05	; 5
			state = Bp;
    106a:	d0 e0       	ldi	r29, 0x00	; 0
    106c:	15 c2       	rjmp	.+1066   	; 0x1498 <bassTick+0x6d6>
			break;
    106e:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		if (prevSong && (it1 == 0)) {
    1072:	88 23       	and	r24, r24
    1074:	99 f1       	breq	.+102    	; 0x10dc <bassTick+0x31a>
    1076:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
    107a:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
    107e:	89 2b       	or	r24, r25
    1080:	f1 f4       	brne	.+60     	; 0x10be <bassTick+0x2fc>
    1082:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			it1 = 0;
    1086:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    108a:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    108e:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    1092:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    1096:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    109a:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
			if (it42 == 0) {
    109e:	81 11       	cpse	r24, r1
    10a0:	08 c0       	rjmp	.+16     	; 0x10b2 <bassTick+0x2f0>
    10a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
				it42 = playList - 1;
    10a6:	81 50       	subi	r24, 0x01	; 1
    10a8:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    10ac:	c2 e0       	ldi	r28, 0x02	; 2
			}
			else {
				it42 = it42 - 1;
			}
			state = Bplay;
    10ae:	d0 e0       	ldi	r29, 0x00	; 0
    10b0:	f3 c1       	rjmp	.+998    	; 0x1498 <bassTick+0x6d6>
    10b2:	81 50       	subi	r24, 0x01	; 1
			it3 = 0;
			if (it42 == 0) {
				it42 = playList - 1;
			}
			else {
				it42 = it42 - 1;
    10b4:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    10b8:	c2 e0       	ldi	r28, 0x02	; 2
			}
			state = Bplay;
    10ba:	d0 e0       	ldi	r29, 0x00	; 0
    10bc:	ed c1       	rjmp	.+986    	; 0x1498 <bassTick+0x6d6>
    10be:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			break;
			}
    else if (prevSong){
			it1 = 0;
    10c2:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    10c6:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    10ca:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    10ce:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    10d2:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    10d6:	c2 e0       	ldi	r28, 0x02	; 2
			state = Bplay;
    10d8:	d0 e0       	ldi	r29, 0x00	; 0
    10da:	de c1       	rjmp	.+956    	; 0x1498 <bassTick+0x6d6>
			break;
    10dc:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
    10e0:	88 23       	and	r24, r24
    10e2:	39 f1       	breq	.+78     	; 0x1132 <bassTick+0x370>
    10e4:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			it1 = 0;
    10e8:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    10ec:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    10f0:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    10f4:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    10f8:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    10fc:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
			it42 = it42 + 1;
    1100:	8f 5f       	subi	r24, 0xFF	; 255
    1102:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    1106:	90 e0       	ldi	r25, 0x00	; 0
			if (it42 == playList) {
    1108:	a0 e0       	ldi	r26, 0x00	; 0
    110a:	b0 e0       	ldi	r27, 0x00	; 0
    110c:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1110:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1114:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    1118:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    111c:	84 17       	cp	r24, r20
    111e:	95 07       	cpc	r25, r21
    1120:	a6 07       	cpc	r26, r22
    1122:	b7 07       	cpc	r27, r23
    1124:	09 f0       	breq	.+2      	; 0x1128 <bassTick+0x366>
    1126:	b3 c1       	rjmp	.+870    	; 0x148e <bassTick+0x6cc>
    1128:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
				it42 = 0;
    112c:	c2 e0       	ldi	r28, 0x02	; 2
			}
			state = Bplay;
    112e:	d0 e0       	ldi	r29, 0x00	; 0
    1130:	b3 c1       	rjmp	.+870    	; 0x1498 <bassTick+0x6d6>
    1132:	20 91 ef 0a 	lds	r18, 0x0AEF	; 0x800aef <it3.2261>
			break;
		}
		if (it3 < playlistBasNL[it42][it1][it2]) {
    1136:	30 91 f0 0a 	lds	r19, 0x0AF0	; 0x800af0 <it3.2261+0x1>
    113a:	e0 91 04 0d 	lds	r30, 0x0D04	; 0x800d04 <it42>
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	ee 0f       	add	r30, r30
    1142:	ff 1f       	adc	r31, r31
    1144:	e1 5f       	subi	r30, 0xF1	; 241
    1146:	fe 4f       	sbci	r31, 0xFE	; 254
    1148:	a0 91 f3 0a 	lds	r26, 0x0AF3	; 0x800af3 <it1.2259>
    114c:	b0 91 f4 0a 	lds	r27, 0x0AF4	; 0x800af4 <it1.2259+0x1>
    1150:	cd 01       	movw	r24, r26
    1152:	88 0f       	add	r24, r24
    1154:	99 1f       	adc	r25, r25
    1156:	a0 81       	ld	r26, Z
    1158:	b1 81       	ldd	r27, Z+1	; 0x01
    115a:	a8 0f       	add	r26, r24
    115c:	b9 1f       	adc	r27, r25
    115e:	e0 91 f1 0a 	lds	r30, 0x0AF1	; 0x800af1 <it2.2260>
    1162:	f0 91 f2 0a 	lds	r31, 0x0AF2	; 0x800af2 <it2.2260+0x1>
    1166:	cf 01       	movw	r24, r30
    1168:	88 0f       	add	r24, r24
    116a:	99 1f       	adc	r25, r25
    116c:	ed 91       	ld	r30, X+
    116e:	fc 91       	ld	r31, X
    1170:	e8 0f       	add	r30, r24
    1172:	f9 1f       	adc	r31, r25
    1174:	80 81       	ld	r24, Z
    1176:	91 81       	ldd	r25, Z+1	; 0x01
    1178:	28 17       	cp	r18, r24
    117a:	39 07       	cpc	r19, r25
    117c:	38 f4       	brcc	.+14     	; 0x118c <bassTick+0x3ca>
    117e:	2f 5f       	subi	r18, 0xFF	; 255
			it3 = it3 + 1;
    1180:	3f 4f       	sbci	r19, 0xFF	; 255
    1182:	30 93 f0 0a 	sts	0x0AF0, r19	; 0x800af0 <it3.2261+0x1>
    1186:	20 93 ef 0a 	sts	0x0AEF, r18	; 0x800aef <it3.2261>
    118a:	86 c1       	rjmp	.+780    	; 0x1498 <bassTick+0x6d6>
			state = Bl;
		}
		else {
			it3 = 0;
    118c:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			silenceB();
    1190:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
			state = Br;
    1194:	5c da       	rcall	.-2888   	; 0x64e <silenceB>
    1196:	c4 e0       	ldi	r28, 0x04	; 4
    1198:	d0 e0       	ldi	r29, 0x00	; 0
		}*/
		//DisplayName(it42);
		break;

		case Br:
		if (paused) {
    119a:	7e c1       	rjmp	.+764    	; 0x1498 <bassTick+0x6d6>
    119c:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
    11a0:	88 23       	and	r24, r24
			silenceB();
    11a2:	41 f0       	breq	.+16     	; 0x11b4 <bassTick+0x3f2>
    11a4:	54 da       	rcall	.-2904   	; 0x64e <silenceB>
			DisplayPaused();
    11a6:	8b da       	rcall	.-2794   	; 0x6be <DisplayPaused>
    11a8:	84 e0       	ldi	r24, 0x04	; 4
			placeHolder = state;
    11aa:	80 93 ee 0a 	sts	0x0AEE, r24	; 0x800aee <placeHolder.2262>
    11ae:	c5 e0       	ldi	r28, 0x05	; 5
			state = Bp;
    11b0:	d0 e0       	ldi	r29, 0x00	; 0
    11b2:	72 c1       	rjmp	.+740    	; 0x1498 <bassTick+0x6d6>
			break;
    11b4:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		if (prevSong && (it1 == 0)) {
    11b8:	88 23       	and	r24, r24
    11ba:	99 f1       	breq	.+102    	; 0x1222 <bassTick+0x460>
    11bc:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
    11c0:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
    11c4:	89 2b       	or	r24, r25
    11c6:	f1 f4       	brne	.+60     	; 0x1204 <bassTick+0x442>
    11c8:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			it1 = 0;
    11cc:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    11d0:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    11d4:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    11d8:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    11dc:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    11e0:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
			if (it42 == 0) {
    11e4:	81 11       	cpse	r24, r1
    11e6:	08 c0       	rjmp	.+16     	; 0x11f8 <bassTick+0x436>
    11e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
				it42 = playList - 1;
    11ec:	81 50       	subi	r24, 0x01	; 1
    11ee:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    11f2:	c2 e0       	ldi	r28, 0x02	; 2
				}
      else {
				it42 = it42 - 1;
			}
			state = Bplay;
    11f4:	d0 e0       	ldi	r29, 0x00	; 0
    11f6:	50 c1       	rjmp	.+672    	; 0x1498 <bassTick+0x6d6>
    11f8:	81 50       	subi	r24, 0x01	; 1
			it3 = 0;
			if (it42 == 0) {
				it42 = playList - 1;
				}
      else {
				it42 = it42 - 1;
    11fa:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    11fe:	c2 e0       	ldi	r28, 0x02	; 2
			}
			state = Bplay;
    1200:	d0 e0       	ldi	r29, 0x00	; 0
    1202:	4a c1       	rjmp	.+660    	; 0x1498 <bassTick+0x6d6>
    1204:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			break;
			}
      else if (prevSong){
			it1 = 0;
    1208:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    120c:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    1210:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    1214:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    1218:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    121c:	c2 e0       	ldi	r28, 0x02	; 2
			state = Bplay;
    121e:	d0 e0       	ldi	r29, 0x00	; 0
    1220:	3b c1       	rjmp	.+630    	; 0x1498 <bassTick+0x6d6>
			break;
    1222:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
    1226:	88 23       	and	r24, r24
    1228:	39 f1       	breq	.+78     	; 0x1278 <bassTick+0x4b6>
    122a:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			it1 = 0;
    122e:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    1232:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    1236:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    123a:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    123e:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    1242:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
			it42 = it42 + 1;
    1246:	8f 5f       	subi	r24, 0xFF	; 255
    1248:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    124c:	90 e0       	ldi	r25, 0x00	; 0
			if (it42 == playList) {
    124e:	a0 e0       	ldi	r26, 0x00	; 0
    1250:	b0 e0       	ldi	r27, 0x00	; 0
    1252:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1256:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    125a:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    125e:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    1262:	84 17       	cp	r24, r20
    1264:	95 07       	cpc	r25, r21
    1266:	a6 07       	cpc	r26, r22
    1268:	b7 07       	cpc	r27, r23
    126a:	09 f0       	breq	.+2      	; 0x126e <bassTick+0x4ac>
    126c:	13 c1       	rjmp	.+550    	; 0x1494 <bassTick+0x6d2>
    126e:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
				it42 = 0;
    1272:	c2 e0       	ldi	r28, 0x02	; 2
			}
			state = Bplay;
    1274:	d0 e0       	ldi	r29, 0x00	; 0
    1276:	10 c1       	rjmp	.+544    	; 0x1498 <bassTick+0x6d6>
    1278:	20 91 f1 0a 	lds	r18, 0x0AF1	; 0x800af1 <it2.2260>
			break;
		}
		if (it3 < playlistBasRL[it42][it1][it2]) {
    127c:	30 91 f2 0a 	lds	r19, 0x0AF2	; 0x800af2 <it2.2260+0x1>
    1280:	40 91 ef 0a 	lds	r20, 0x0AEF	; 0x800aef <it3.2261>
    1284:	50 91 f0 0a 	lds	r21, 0x0AF0	; 0x800af0 <it3.2261+0x1>
    1288:	e0 91 04 0d 	lds	r30, 0x0D04	; 0x800d04 <it42>
    128c:	f0 e0       	ldi	r31, 0x00	; 0
    128e:	ee 0f       	add	r30, r30
    1290:	ff 1f       	adc	r31, r31
    1292:	e7 5f       	subi	r30, 0xF7	; 247
    1294:	fe 4f       	sbci	r31, 0xFE	; 254
    1296:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
    129a:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
    129e:	88 0f       	add	r24, r24
    12a0:	99 1f       	adc	r25, r25
    12a2:	01 90       	ld	r0, Z+
    12a4:	f0 81       	ld	r31, Z
    12a6:	e0 2d       	mov	r30, r0
    12a8:	e8 0f       	add	r30, r24
    12aa:	f9 1f       	adc	r31, r25
    12ac:	c9 01       	movw	r24, r18
    12ae:	88 0f       	add	r24, r24
    12b0:	99 1f       	adc	r25, r25
    12b2:	01 90       	ld	r0, Z+
    12b4:	f0 81       	ld	r31, Z
    12b6:	e0 2d       	mov	r30, r0
    12b8:	e8 0f       	add	r30, r24
    12ba:	f9 1f       	adc	r31, r25
    12bc:	80 81       	ld	r24, Z
    12be:	91 81       	ldd	r25, Z+1	; 0x01
    12c0:	48 17       	cp	r20, r24
    12c2:	59 07       	cpc	r21, r25
    12c4:	38 f4       	brcc	.+14     	; 0x12d4 <bassTick+0x512>
    12c6:	4f 5f       	subi	r20, 0xFF	; 255
			it3 = it3 + 1;
    12c8:	5f 4f       	sbci	r21, 0xFF	; 255
    12ca:	50 93 f0 0a 	sts	0x0AF0, r21	; 0x800af0 <it3.2261+0x1>
    12ce:	40 93 ef 0a 	sts	0x0AEF, r20	; 0x800aef <it3.2261>
    12d2:	e2 c0       	rjmp	.+452    	; 0x1498 <bassTick+0x6d6>
    12d4:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			state = Br;
			}
    else {
			it3 = 0;
    12d8:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    12dc:	2f 5f       	subi	r18, 0xFF	; 255
			it2 = it2 + 1;
    12de:	3f 4f       	sbci	r19, 0xFF	; 255
    12e0:	30 93 f2 0a 	sts	0x0AF2, r19	; 0x800af2 <it2.2260+0x1>
    12e4:	20 93 f1 0a 	sts	0x0AF1, r18	; 0x800af1 <it2.2260>
    12e8:	c2 e0       	ldi	r28, 0x02	; 2
			state = Bplay;
    12ea:	d0 e0       	ldi	r29, 0x00	; 0
    12ec:	d5 c0       	rjmp	.+426    	; 0x1498 <bassTick+0x6d6>
    12ee:	80 91 06 0d 	lds	r24, 0x0D06	; 0x800d06 <prevSong>
		}
		break;

		case Bp:
		if (prevSong && (it1 == 0)) {
    12f2:	88 23       	and	r24, r24
    12f4:	a9 f1       	breq	.+106    	; 0x1360 <bassTick+0x59e>
    12f6:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
    12fa:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
    12fe:	89 2b       	or	r24, r25
    1300:	f1 f4       	brne	.+60     	; 0x133e <bassTick+0x57c>
    1302:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			it1 = 0;
    1306:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    130a:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    130e:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    1312:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    1316:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    131a:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
			if (it42 == 0) {
    131e:	81 11       	cpse	r24, r1
    1320:	06 c0       	rjmp	.+12     	; 0x132e <bassTick+0x56c>
    1322:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
				it42 = playList - 1;
    1326:	81 50       	subi	r24, 0x01	; 1
    1328:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    132c:	03 c0       	rjmp	.+6      	; 0x1334 <bassTick+0x572>
    132e:	81 50       	subi	r24, 0x01	; 1
				}
      else {
				it42 = it42 - 1;
    1330:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    1334:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <paused>
			}
			paused = 0;
    1338:	c2 e0       	ldi	r28, 0x02	; 2
			state = Bplay;
    133a:	d0 e0       	ldi	r29, 0x00	; 0
    133c:	ad c0       	rjmp	.+346    	; 0x1498 <bassTick+0x6d6>
			break;
    133e:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			} else if (prevSong){
			it1 = 0;
    1342:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    1346:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    134a:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    134e:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    1352:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    1356:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <paused>
			paused = 0;
    135a:	c2 e0       	ldi	r28, 0x02	; 2
			state = Bplay;
    135c:	d0 e0       	ldi	r29, 0x00	; 0
    135e:	9c c0       	rjmp	.+312    	; 0x1498 <bassTick+0x6d6>
			break;
    1360:	80 91 03 0d 	lds	r24, 0x0D03	; 0x800d03 <nextSong>
		}
		if (nextSong) {
    1364:	88 23       	and	r24, r24
    1366:	41 f1       	breq	.+80     	; 0x13b8 <bassTick+0x5f6>
    1368:	10 92 f4 0a 	sts	0x0AF4, r1	; 0x800af4 <it1.2259+0x1>
			it1 = 0;
    136c:	10 92 f3 0a 	sts	0x0AF3, r1	; 0x800af3 <it1.2259>
    1370:	10 92 f2 0a 	sts	0x0AF2, r1	; 0x800af2 <it2.2260+0x1>
			it2 = 0;
    1374:	10 92 f1 0a 	sts	0x0AF1, r1	; 0x800af1 <it2.2260>
    1378:	10 92 f0 0a 	sts	0x0AF0, r1	; 0x800af0 <it3.2261+0x1>
			it3 = 0;
    137c:	10 92 ef 0a 	sts	0x0AEF, r1	; 0x800aef <it3.2261>
    1380:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
			it42 = it42 + 1;
    1384:	8f 5f       	subi	r24, 0xFF	; 255
    1386:	80 93 04 0d 	sts	0x0D04, r24	; 0x800d04 <it42>
    138a:	90 e0       	ldi	r25, 0x00	; 0
			if (it42 == playList) {
    138c:	a0 e0       	ldi	r26, 0x00	; 0
    138e:	b0 e0       	ldi	r27, 0x00	; 0
    1390:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1394:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1398:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    139c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    13a0:	84 17       	cp	r24, r20
    13a2:	95 07       	cpc	r25, r21
    13a4:	a6 07       	cpc	r26, r22
    13a6:	b7 07       	cpc	r27, r23
    13a8:	11 f4       	brne	.+4      	; 0x13ae <bassTick+0x5ec>
				it42 = 0;
    13aa:	10 92 04 0d 	sts	0x0D04, r1	; 0x800d04 <it42>
			}
			paused = 0;
    13ae:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <paused>
			state = Bplay;
    13b2:	c2 e0       	ldi	r28, 0x02	; 2
    13b4:	d0 e0       	ldi	r29, 0x00	; 0
			break;
    13b6:	70 c0       	rjmp	.+224    	; 0x1498 <bassTick+0x6d6>
		}
		if (paused) {
    13b8:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <paused>
    13bc:	88 23       	and	r24, r24
    13be:	11 f0       	breq	.+4      	; 0x13c4 <bassTick+0x602>
			
			state = Bp;
			DisplayPaused();
    13c0:	7e d9       	rcall	.-3332   	; 0x6be <DisplayPaused>
    13c2:	6a c0       	rjmp	.+212    	; 0x1498 <bassTick+0x6d6>
    13c4:	c0 91 ee 0a 	lds	r28, 0x0AEE	; 0x800aee <placeHolder.2262>
			}
    else {
			if (placeHolder == Bl) {
    13c8:	c3 30       	cpi	r28, 0x03	; 3
    13ca:	09 f0       	breq	.+2      	; 0x13ce <bassTick+0x60c>
    13cc:	58 c0       	rjmp	.+176    	; 0x147e <bassTick+0x6bc>
    13ce:	80 91 04 0d 	lds	r24, 0x0D04	; 0x800d04 <it42>
				}
				else if (it4 == 2) {
					DisplaySong3();
				}*/
				//playB(playlistBas[it4][it1][it2]);
				if (it42 == 0) {
    13d2:	81 11       	cpse	r24, r1
    13d4:	1b c0       	rjmp	.+54     	; 0x140c <bassTick+0x64a>
    13d6:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
					playB(playlistBas[it42][it1][it2]);
    13da:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
    13de:	88 0f       	add	r24, r24
    13e0:	99 1f       	adc	r25, r25
    13e2:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <playlistBas>
    13e6:	f0 91 16 01 	lds	r31, 0x0116	; 0x800116 <playlistBas+0x1>
    13ea:	e8 0f       	add	r30, r24
    13ec:	f9 1f       	adc	r31, r25
    13ee:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2260>
    13f2:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2260+0x1>
    13f6:	88 0f       	add	r24, r24
    13f8:	99 1f       	adc	r25, r25
    13fa:	01 90       	ld	r0, Z+
    13fc:	f0 81       	ld	r31, Z
    13fe:	e0 2d       	mov	r30, r0
    1400:	e8 0f       	add	r30, r24
    1402:	f9 1f       	adc	r31, r25
    1404:	80 81       	ld	r24, Z
    1406:	91 81       	ldd	r25, Z+1	; 0x01
    1408:	1a d9       	rcall	.-3532   	; 0x63e <playB>
    140a:	39 c0       	rjmp	.+114    	; 0x147e <bassTick+0x6bc>
    140c:	81 30       	cpi	r24, 0x01	; 1
					//DisplaySong1();
					
				}
				else if (it42 == 1) {
    140e:	d9 f4       	brne	.+54     	; 0x1446 <bassTick+0x684>
    1410:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
					playB(playlistBas[it42][it1][it2]);
    1414:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
    1418:	88 0f       	add	r24, r24
    141a:	99 1f       	adc	r25, r25
    141c:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <playlistBas+0x2>
    1420:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <playlistBas+0x3>
    1424:	e8 0f       	add	r30, r24
    1426:	f9 1f       	adc	r31, r25
    1428:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2260>
    142c:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2260+0x1>
    1430:	88 0f       	add	r24, r24
    1432:	99 1f       	adc	r25, r25
    1434:	01 90       	ld	r0, Z+
    1436:	f0 81       	ld	r31, Z
    1438:	e0 2d       	mov	r30, r0
    143a:	e8 0f       	add	r30, r24
    143c:	f9 1f       	adc	r31, r25
    143e:	80 81       	ld	r24, Z
    1440:	91 81       	ldd	r25, Z+1	; 0x01
    1442:	fd d8       	rcall	.-3590   	; 0x63e <playB>
    1444:	1c c0       	rjmp	.+56     	; 0x147e <bassTick+0x6bc>
    1446:	82 30       	cpi	r24, 0x02	; 2
					//DisplaySong2();
					
				}
				else if (it42 == 2) {
    1448:	d1 f4       	brne	.+52     	; 0x147e <bassTick+0x6bc>
    144a:	80 91 f3 0a 	lds	r24, 0x0AF3	; 0x800af3 <it1.2259>
					playB(playlistBas[it42][it1][it2]);
    144e:	90 91 f4 0a 	lds	r25, 0x0AF4	; 0x800af4 <it1.2259+0x1>
    1452:	88 0f       	add	r24, r24
    1454:	99 1f       	adc	r25, r25
    1456:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <playlistBas+0x4>
    145a:	f0 91 1a 01 	lds	r31, 0x011A	; 0x80011a <playlistBas+0x5>
    145e:	e8 0f       	add	r30, r24
    1460:	f9 1f       	adc	r31, r25
    1462:	80 91 f1 0a 	lds	r24, 0x0AF1	; 0x800af1 <it2.2260>
    1466:	90 91 f2 0a 	lds	r25, 0x0AF2	; 0x800af2 <it2.2260+0x1>
    146a:	88 0f       	add	r24, r24
    146c:	99 1f       	adc	r25, r25
    146e:	01 90       	ld	r0, Z+
    1470:	f0 81       	ld	r31, Z
    1472:	e0 2d       	mov	r30, r0
    1474:	e8 0f       	add	r30, r24
    1476:	f9 1f       	adc	r31, r25
    1478:	80 81       	ld	r24, Z
    147a:	91 81       	ldd	r25, Z+1	; 0x01
    147c:	e0 d8       	rcall	.-3648   	; 0x63e <playB>
    147e:	d0 e0       	ldi	r29, 0x00	; 0
					//playB(playlistBas[it4][it1][it2]);
				}
					
			}
			//DisplayName(it42);
			state = placeHolder;
    1480:	0b c0       	rjmp	.+22     	; 0x1498 <bassTick+0x6d6>
    1482:	c2 e0       	ldi	r28, 0x02	; 2
		silenceB();
		break;

		case Bwait:
		if (!paused) {
			state= Bplay;
    1484:	d0 e0       	ldi	r29, 0x00	; 0
    1486:	08 c0       	rjmp	.+16     	; 0x1498 <bassTick+0x6d6>
    1488:	c1 e0       	ldi	r28, 0x01	; 1
			it1 = it1 + 1;
			it2 = 0;
		}
		if (it1 == numRows[it42]) {
			songDone = 1;
			state = Bwait;
    148a:	d0 e0       	ldi	r29, 0x00	; 0
    148c:	05 c0       	rjmp	.+10     	; 0x1498 <bassTick+0x6d6>
    148e:	c2 e0       	ldi	r28, 0x02	; 2
			it3 = 0;
			it42 = it42 + 1;
			if (it42 == playList) {
				it42 = 0;
			}
			state = Bplay;
    1490:	d0 e0       	ldi	r29, 0x00	; 0
    1492:	02 c0       	rjmp	.+4      	; 0x1498 <bassTick+0x6d6>
    1494:	c2 e0       	ldi	r28, 0x02	; 2
			it3 = 0;
			it42 = it42 + 1;
			if (it42 == playList) {
				it42 = 0;
			}
			state = Bplay;
    1496:	d0 e0       	ldi	r29, 0x00	; 0
    1498:	ce 01       	movw	r24, r28
		}
		break;
	}
	//DisplayName(it42);
	return state;
}
    149a:	df 91       	pop	r29
    149c:	cf 91       	pop	r28
    149e:	1f 91       	pop	r17
    14a0:	0f 91       	pop	r16
    14a2:	08 95       	ret

000014a4 <PressPlay>:
    14a4:	10 d1       	rcall	.+544    	; 0x16c6 <nokia_lcd_clear>
	nokia_lcd_write_string("Song Paused!  Press Play to Resume.", 1);
	nokia_lcd_render();
}
void PressPlay() {
	nokia_lcd_clear();
	nokia_lcd_set_cursor(0,0);
    14a6:	60 e0       	ldi	r22, 0x00	; 0
    14a8:	70 e0       	ldi	r23, 0x00	; 0
    14aa:	80 e0       	ldi	r24, 0x00	; 0
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	03 d2       	rcall	.+1030   	; 0x18b6 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Welcome to the iBreadBoard! Press Play to Begin Your     Music!", 1);
    14b0:	61 e0       	ldi	r22, 0x01	; 1
    14b2:	70 e0       	ldi	r23, 0x00	; 0
    14b4:	81 e8       	ldi	r24, 0x81	; 129
    14b6:	9a e0       	ldi	r25, 0x0A	; 10
	nokia_lcd_render();
    14b8:	ec d1       	rcall	.+984    	; 0x1892 <nokia_lcd_write_string>
    14ba:	02 c2       	rjmp	.+1028   	; 0x18c0 <nokia_lcd_render>
    14bc:	08 95       	ret

000014be <main>:





int main(void) {
    14be:	cf 93       	push	r28
    14c0:	df 93       	push	r29
    14c2:	cd b7       	in	r28, 0x3d	; 61
    14c4:	de b7       	in	r29, 0x3e	; 62
    14c6:	28 97       	sbiw	r28, 0x08	; 8
    14c8:	0f b6       	in	r0, 0x3f	; 63
    14ca:	f8 94       	cli
    14cc:	de bf       	out	0x3e, r29	; 62
    14ce:	0f be       	out	0x3f, r0	; 63
    14d0:	cd bf       	out	0x3d, r28	; 61
    /* Insert DDR and PORT initializations */
	DDRA = 0x00;
    14d2:	11 b8       	out	0x01, r1	; 1
	PORTA = 0x00;
    14d4:	12 b8       	out	0x02, r1	; 2
	DDRB = 0xFF;
    14d6:	8f ef       	ldi	r24, 0xFF	; 255
    14d8:	84 b9       	out	0x04, r24	; 4
	PORTB = 0x00;
    14da:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF;
    14dc:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x00;
    14de:	18 b8       	out	0x08, r1	; 8
	DDRD = 0xF0;
    14e0:	80 ef       	ldi	r24, 0xF0	; 240
    14e2:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;
    14e4:	1b b8       	out	0x0b, r1	; 11


  unsigned char timerPeriod = 1;
  static task  task2, task3, task4, task5;
  task *tasks[] = {  &task2, &task3, &task4, &task5};
    14e6:	88 e0       	ldi	r24, 0x08	; 8
    14e8:	ef ee       	ldi	r30, 0xEF	; 239
    14ea:	f9 e0       	ldi	r31, 0x09	; 9
    14ec:	de 01       	movw	r26, r28
    14ee:	11 96       	adiw	r26, 0x01	; 1
    14f0:	01 90       	ld	r0, Z+
    14f2:	0d 92       	st	X+, r0
    14f4:	8a 95       	dec	r24
    14f6:	e1 f7       	brne	.-8      	; 0x14f0 <main+0x32>

  //task1.state = 0;
  //task1.period = 50;
  //task1.elapsedTime = task1.period;
  //task1.TickFct = &DisplayName;
  task2.state = 0;
    14f8:	e3 ee       	ldi	r30, 0xE3	; 227
    14fa:	fa e0       	ldi	r31, 0x0A	; 10
    14fc:	10 82       	st	Z, r1
  task2.period = 1;
    14fe:	81 e0       	ldi	r24, 0x01	; 1
    1500:	90 e0       	ldi	r25, 0x00	; 0
    1502:	a0 e0       	ldi	r26, 0x00	; 0
    1504:	b0 e0       	ldi	r27, 0x00	; 0
    1506:	81 83       	std	Z+1, r24	; 0x01
    1508:	92 83       	std	Z+2, r25	; 0x02
    150a:	a3 83       	std	Z+3, r26	; 0x03
    150c:	b4 83       	std	Z+4, r27	; 0x04
  task2.elapsedTime = task2.period;
    150e:	85 83       	std	Z+5, r24	; 0x05
    1510:	96 83       	std	Z+6, r25	; 0x06
    1512:	a7 83       	std	Z+7, r26	; 0x07
    1514:	b0 87       	std	Z+8, r27	; 0x08
  task2.TickFct = &pauseTick;
    1516:	26 e5       	ldi	r18, 0x56	; 86
    1518:	31 e0       	ldi	r19, 0x01	; 1
    151a:	32 87       	std	Z+10, r19	; 0x0a
    151c:	21 87       	std	Z+9, r18	; 0x09
  task3.state = 0;
    151e:	e8 ed       	ldi	r30, 0xD8	; 216
    1520:	fa e0       	ldi	r31, 0x0A	; 10
    1522:	10 82       	st	Z, r1
  task3.period = 1;
    1524:	81 83       	std	Z+1, r24	; 0x01
    1526:	92 83       	std	Z+2, r25	; 0x02
    1528:	a3 83       	std	Z+3, r26	; 0x03
    152a:	b4 83       	std	Z+4, r27	; 0x04
  task3.elapsedTime = task3.period;
    152c:	85 83       	std	Z+5, r24	; 0x05
    152e:	96 83       	std	Z+6, r25	; 0x06
    1530:	a7 83       	std	Z+7, r26	; 0x07
    1532:	b0 87       	std	Z+8, r27	; 0x08
  task3.TickFct = &NextPrevTick;
    1534:	2a e7       	ldi	r18, 0x7A	; 122
    1536:	31 e0       	ldi	r19, 0x01	; 1
    1538:	32 87       	std	Z+10, r19	; 0x0a
    153a:	21 87       	std	Z+9, r18	; 0x09
  task4.state = 0;
    153c:	ed ec       	ldi	r30, 0xCD	; 205
    153e:	fa e0       	ldi	r31, 0x0A	; 10
    1540:	10 82       	st	Z, r1
  task4.period = 1;
    1542:	81 83       	std	Z+1, r24	; 0x01
    1544:	92 83       	std	Z+2, r25	; 0x02
    1546:	a3 83       	std	Z+3, r26	; 0x03
    1548:	b4 83       	std	Z+4, r27	; 0x04
  task4.elapsedTime = task4.period;
    154a:	85 83       	std	Z+5, r24	; 0x05
    154c:	96 83       	std	Z+6, r25	; 0x06
    154e:	a7 83       	std	Z+7, r26	; 0x07
    1550:	b0 87       	std	Z+8, r27	; 0x08
  task4.TickFct = &melodyTick;
    1552:	20 e7       	ldi	r18, 0x70	; 112
    1554:	33 e0       	ldi	r19, 0x03	; 3
    1556:	32 87       	std	Z+10, r19	; 0x0a
    1558:	21 87       	std	Z+9, r18	; 0x09
  task5.state = 0;
    155a:	e2 ec       	ldi	r30, 0xC2	; 194
    155c:	fa e0       	ldi	r31, 0x0A	; 10
    155e:	10 82       	st	Z, r1
  task5.period = 1;
    1560:	81 83       	std	Z+1, r24	; 0x01
    1562:	92 83       	std	Z+2, r25	; 0x02
    1564:	a3 83       	std	Z+3, r26	; 0x03
    1566:	b4 83       	std	Z+4, r27	; 0x04
  task5.elapsedTime = task5.period;
    1568:	85 83       	std	Z+5, r24	; 0x05
    156a:	96 83       	std	Z+6, r25	; 0x06
    156c:	a7 83       	std	Z+7, r26	; 0x07
    156e:	b0 87       	std	Z+8, r27	; 0x08
  task5.TickFct = &bassTick;
    1570:	81 ee       	ldi	r24, 0xE1	; 225
    1572:	96 e0       	ldi	r25, 0x06	; 6
    1574:	92 87       	std	Z+10, r25	; 0x0a
    1576:	81 87       	std	Z+9, r24	; 0x09
	TimerSet(timerPeriod);
    1578:	61 e0       	ldi	r22, 0x01	; 1
    157a:	70 e0       	ldi	r23, 0x00	; 0
    157c:	80 e0       	ldi	r24, 0x00	; 0
    157e:	90 e0       	ldi	r25, 0x00	; 0
    1580:	0e 94 0b 02 	call	0x416	; 0x416 <TimerSet>
	TimerOn();
    1584:	0e 94 b0 01 	call	0x360	; 0x360 <TimerOn>

	nokia_lcd_init();
    1588:	68 d0       	rcall	.+208    	; 0x165a <nokia_lcd_init>
	PressPlay();
    158a:	8c df       	rcall	.-232    	; 0x14a4 <PressPlay>
    158c:	0e 94 8c 02 	call	0x518	; 0x518 <PWM_on>
	//nokia_lcd_set_cursor(0, 0);
	//nokia_lcd_write_string("JESUS LOVES     YOU         JOHN 3:16", 1);
	//nokia_lcd_render();
	PWM_on();
	//PWM0_on();
	PWMB_on();
    1590:	3e d8       	rcall	.-3972   	; 0x60e <PWMB_on>
    1592:	7e 01       	movw	r14, r28
    1594:	89 e0       	ldi	r24, 0x09	; 9
    1596:	e8 0e       	add	r14, r24
    1598:	f1 1c       	adc	r15, r1
    159a:	de 01       	movw	r26, r28
    159c:	11 96       	adiw	r26, 0x01	; 1
    159e:	6d 01       	movw	r12, r26
    15a0:	f6 01       	movw	r30, r12

    while (1) {
			for (unsigned char i = 0; i < taskNum; i++) {
				if ( tasks[i]->elapsedTime == tasks[i]->period) {
    15a2:	01 91       	ld	r16, Z+
    15a4:	11 91       	ld	r17, Z+
    15a6:	6f 01       	movw	r12, r30
    15a8:	d8 01       	movw	r26, r16
    15aa:	15 96       	adiw	r26, 0x05	; 5
    15ac:	4d 91       	ld	r20, X+
    15ae:	5d 91       	ld	r21, X+
    15b0:	6d 91       	ld	r22, X+
    15b2:	7c 91       	ld	r23, X
    15b4:	18 97       	sbiw	r26, 0x08	; 8
    15b6:	11 96       	adiw	r26, 0x01	; 1
    15b8:	8d 91       	ld	r24, X+
    15ba:	9d 91       	ld	r25, X+
    15bc:	0d 90       	ld	r0, X+
    15be:	bc 91       	ld	r27, X
    15c0:	a0 2d       	mov	r26, r0
    15c2:	48 17       	cp	r20, r24
    15c4:	59 07       	cpc	r21, r25
    15c6:	6a 07       	cpc	r22, r26
    15c8:	7b 07       	cpc	r23, r27
    15ca:	81 f4       	brne	.+32     	; 0x15ec <main+0x12e>
    15cc:	f8 01       	movw	r30, r16
					tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
    15ce:	80 81       	ld	r24, Z
    15d0:	01 84       	ldd	r0, Z+9	; 0x09
    15d2:	f2 85       	ldd	r31, Z+10	; 0x0a
    15d4:	e0 2d       	mov	r30, r0
    15d6:	08 2e       	mov	r0, r24
    15d8:	00 0c       	add	r0, r0
    15da:	99 0b       	sbc	r25, r25
    15dc:	09 95       	icall
    15de:	d8 01       	movw	r26, r16
    15e0:	8c 93       	st	X, r24
    15e2:	f8 01       	movw	r30, r16
					tasks[i]->elapsedTime = 0;
    15e4:	15 82       	std	Z+5, r1	; 0x05
    15e6:	16 82       	std	Z+6, r1	; 0x06
    15e8:	17 82       	std	Z+7, r1	; 0x07
    15ea:	10 86       	std	Z+8, r1	; 0x08
    15ec:	f8 01       	movw	r30, r16
				}
				tasks[i]->elapsedTime += timerPeriod;
    15ee:	85 81       	ldd	r24, Z+5	; 0x05
    15f0:	96 81       	ldd	r25, Z+6	; 0x06
    15f2:	a7 81       	ldd	r26, Z+7	; 0x07
    15f4:	b0 85       	ldd	r27, Z+8	; 0x08
    15f6:	01 96       	adiw	r24, 0x01	; 1
    15f8:	a1 1d       	adc	r26, r1
    15fa:	b1 1d       	adc	r27, r1
    15fc:	85 83       	std	Z+5, r24	; 0x05
    15fe:	96 83       	std	Z+6, r25	; 0x06
    1600:	a7 83       	std	Z+7, r26	; 0x07
    1602:	b0 87       	std	Z+8, r27	; 0x08
    1604:	ce 14       	cp	r12, r14
	PWM_on();
	//PWM0_on();
	PWMB_on();

    while (1) {
			for (unsigned char i = 0; i < taskNum; i++) {
    1606:	df 04       	cpc	r13, r15
    1608:	59 f6       	brne	.-106    	; 0x15a0 <main+0xe2>
    160a:	80 91 08 0b 	lds	r24, 0x0B08	; 0x800b08 <TimerFlag>
					tasks[i]->elapsedTime = 0;
				}
				tasks[i]->elapsedTime += timerPeriod;
			}

		while(!TimerFlag){};
    160e:	88 23       	and	r24, r24
    1610:	e1 f3       	breq	.-8      	; 0x160a <main+0x14c>
    1612:	10 92 08 0b 	sts	0x0B08, r1	; 0x800b08 <TimerFlag>
			TimerFlag = 0;
    1616:	c1 cf       	rjmp	.-126    	; 0x159a <main+0xdc>

00001618 <write>:
		}
    1618:	41 98       	cbi	0x08, 1	; 8
		nokia_lcd.screen[i] = 0x00;
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
    161a:	66 23       	and	r22, r22
    161c:	11 f0       	breq	.+4      	; 0x1622 <write+0xa>
    161e:	43 9a       	sbi	0x08, 3	; 8
    1620:	15 c0       	rjmp	.+42     	; 0x164c <write+0x34>
    1622:	43 98       	cbi	0x08, 3	; 8
    1624:	13 c0       	rjmp	.+38     	; 0x164c <write+0x34>
    1626:	ac 01       	movw	r20, r24
    1628:	02 2e       	mov	r0, r18
    162a:	02 c0       	rjmp	.+4      	; 0x1630 <write+0x18>
    162c:	55 95       	asr	r21
    162e:	47 95       	ror	r20
    1630:	0a 94       	dec	r0
    1632:	e2 f7       	brpl	.-8      	; 0x162c <write+0x14>
    1634:	40 ff       	sbrs	r20, 0
    1636:	02 c0       	rjmp	.+4      	; 0x163c <write+0x24>
    1638:	44 9a       	sbi	0x08, 4	; 8
    163a:	01 c0       	rjmp	.+2      	; 0x163e <write+0x26>
    163c:	44 98       	cbi	0x08, 4	; 8
    163e:	45 9a       	sbi	0x08, 5	; 8
    1640:	45 98       	cbi	0x08, 5	; 8
    1642:	21 50       	subi	r18, 0x01	; 1
    1644:	31 09       	sbc	r19, r1
    1646:	78 f7       	brcc	.-34     	; 0x1626 <write+0xe>
    1648:	41 9a       	sbi	0x08, 1	; 8
    164a:	08 95       	ret
    164c:	27 e0       	ldi	r18, 0x07	; 7
    164e:	30 e0       	ldi	r19, 0x00	; 0
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	e9 cf       	rjmp	.-46     	; 0x1626 <write+0xe>

00001654 <write_cmd>:
    1654:	60 e0       	ldi	r22, 0x00	; 0
    1656:	e0 cf       	rjmp	.-64     	; 0x1618 <write>
    1658:	08 95       	ret

0000165a <nokia_lcd_init>:
    165a:	cf 93       	push	r28
    165c:	df 93       	push	r29
    165e:	39 9a       	sbi	0x07, 1	; 7
    1660:	3a 9a       	sbi	0x07, 2	; 7
    1662:	3b 9a       	sbi	0x07, 3	; 7
    1664:	3c 9a       	sbi	0x07, 4	; 7
    1666:	3d 9a       	sbi	0x07, 5	; 7
    1668:	42 9a       	sbi	0x08, 2	; 8
    166a:	41 9a       	sbi	0x08, 1	; 8
    166c:	83 ec       	ldi	r24, 0xC3	; 195
    166e:	99 e0       	ldi	r25, 0x09	; 9
    1670:	01 97       	sbiw	r24, 0x01	; 1
    1672:	f1 f7       	brne	.-4      	; 0x1670 <nokia_lcd_init+0x16>
    1674:	00 c0       	rjmp	.+0      	; 0x1676 <nokia_lcd_init+0x1c>
    1676:	00 00       	nop
    1678:	42 98       	cbi	0x08, 2	; 8
    167a:	8b e5       	ldi	r24, 0x5B	; 91
    167c:	94 e4       	ldi	r25, 0x44	; 68
    167e:	01 97       	sbiw	r24, 0x01	; 1
    1680:	f1 f7       	brne	.-4      	; 0x167e <nokia_lcd_init+0x24>
    1682:	00 c0       	rjmp	.+0      	; 0x1684 <nokia_lcd_init+0x2a>
    1684:	00 00       	nop
    1686:	42 9a       	sbi	0x08, 2	; 8
    1688:	41 98       	cbi	0x08, 1	; 8
    168a:	81 e2       	ldi	r24, 0x21	; 33
    168c:	e3 df       	rcall	.-58     	; 0x1654 <write_cmd>
    168e:	83 e1       	ldi	r24, 0x13	; 19
    1690:	e1 df       	rcall	.-62     	; 0x1654 <write_cmd>
    1692:	86 e0       	ldi	r24, 0x06	; 6
    1694:	df df       	rcall	.-66     	; 0x1654 <write_cmd>
    1696:	82 ec       	ldi	r24, 0xC2	; 194
    1698:	dd df       	rcall	.-70     	; 0x1654 <write_cmd>
    169a:	80 e2       	ldi	r24, 0x20	; 32
    169c:	db df       	rcall	.-74     	; 0x1654 <write_cmd>
    169e:	89 e0       	ldi	r24, 0x09	; 9
    16a0:	d9 df       	rcall	.-78     	; 0x1654 <write_cmd>
    16a2:	80 e8       	ldi	r24, 0x80	; 128
    16a4:	d7 df       	rcall	.-82     	; 0x1654 <write_cmd>
    16a6:	80 e4       	ldi	r24, 0x40	; 64
    16a8:	d5 df       	rcall	.-86     	; 0x1654 <write_cmd>
    16aa:	c8 ef       	ldi	r28, 0xF8	; 248
    16ac:	d1 e0       	ldi	r29, 0x01	; 1
    16ae:	61 e0       	ldi	r22, 0x01	; 1
    16b0:	80 e0       	ldi	r24, 0x00	; 0
    16b2:	b2 df       	rcall	.-156    	; 0x1618 <write>
    16b4:	21 97       	sbiw	r28, 0x01	; 1
    16b6:	d9 f7       	brne	.-10     	; 0x16ae <nokia_lcd_init+0x54>
    16b8:	88 e0       	ldi	r24, 0x08	; 8
    16ba:	cc df       	rcall	.-104    	; 0x1654 <write_cmd>
    16bc:	8c e0       	ldi	r24, 0x0C	; 12
    16be:	ca df       	rcall	.-108    	; 0x1654 <write_cmd>
    16c0:	df 91       	pop	r29
    16c2:	cf 91       	pop	r28
    16c4:	08 95       	ret

000016c6 <nokia_lcd_clear>:
    16c6:	80 e8       	ldi	r24, 0x80	; 128
    16c8:	c5 df       	rcall	.-118    	; 0x1654 <write_cmd>
    16ca:	80 e4       	ldi	r24, 0x40	; 64
    16cc:	c3 df       	rcall	.-122    	; 0x1654 <write_cmd>
    16ce:	10 92 01 0d 	sts	0x0D01, r1	; 0x800d01 <nokia_lcd+0x1f8>
    16d2:	10 92 02 0d 	sts	0x0D02, r1	; 0x800d02 <nokia_lcd+0x1f9>
    16d6:	e9 e0       	ldi	r30, 0x09	; 9
    16d8:	fb e0       	ldi	r31, 0x0B	; 11
    16da:	81 e0       	ldi	r24, 0x01	; 1
    16dc:	9d e0       	ldi	r25, 0x0D	; 13
    16de:	11 92       	st	Z+, r1
    16e0:	e8 17       	cp	r30, r24
    16e2:	f9 07       	cpc	r31, r25
    16e4:	e1 f7       	brne	.-8      	; 0x16de <nokia_lcd_clear+0x18>
    16e6:	08 95       	ret

000016e8 <nokia_lcd_set_pixel>:
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
    16e8:	26 2f       	mov	r18, r22
    16ea:	26 95       	lsr	r18
    16ec:	26 95       	lsr	r18
    16ee:	26 95       	lsr	r18
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	34 e5       	ldi	r19, 0x54	; 84
    16f4:	23 9f       	mul	r18, r19
    16f6:	80 0d       	add	r24, r0
    16f8:	91 1d       	adc	r25, r1
    16fa:	11 24       	eor	r1, r1
	if (value)
    16fc:	44 23       	and	r20, r20
    16fe:	79 f0       	breq	.+30     	; 0x171e <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
    1700:	fc 01       	movw	r30, r24
    1702:	e7 5f       	subi	r30, 0xF7	; 247
    1704:	f4 4f       	sbci	r31, 0xF4	; 244
    1706:	67 70       	andi	r22, 0x07	; 7
    1708:	81 e0       	ldi	r24, 0x01	; 1
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	02 c0       	rjmp	.+4      	; 0x1712 <nokia_lcd_set_pixel+0x2a>
    170e:	88 0f       	add	r24, r24
    1710:	99 1f       	adc	r25, r25
    1712:	6a 95       	dec	r22
    1714:	e2 f7       	brpl	.-8      	; 0x170e <nokia_lcd_set_pixel+0x26>
    1716:	90 81       	ld	r25, Z
    1718:	89 2b       	or	r24, r25
    171a:	80 83       	st	Z, r24
    171c:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
    171e:	fc 01       	movw	r30, r24
    1720:	e7 5f       	subi	r30, 0xF7	; 247
    1722:	f4 4f       	sbci	r31, 0xF4	; 244
    1724:	67 70       	andi	r22, 0x07	; 7
    1726:	81 e0       	ldi	r24, 0x01	; 1
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	02 c0       	rjmp	.+4      	; 0x1730 <nokia_lcd_set_pixel+0x48>
    172c:	88 0f       	add	r24, r24
    172e:	99 1f       	adc	r25, r25
    1730:	6a 95       	dec	r22
    1732:	e2 f7       	brpl	.-8      	; 0x172c <nokia_lcd_set_pixel+0x44>
    1734:	80 95       	com	r24
    1736:	90 81       	ld	r25, Z
    1738:	89 23       	and	r24, r25
    173a:	80 83       	st	Z, r24
    173c:	08 95       	ret

0000173e <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
    173e:	5f 92       	push	r5
    1740:	6f 92       	push	r6
    1742:	7f 92       	push	r7
    1744:	8f 92       	push	r8
    1746:	9f 92       	push	r9
    1748:	af 92       	push	r10
    174a:	bf 92       	push	r11
    174c:	cf 92       	push	r12
    174e:	df 92       	push	r13
    1750:	ef 92       	push	r14
    1752:	ff 92       	push	r15
    1754:	0f 93       	push	r16
    1756:	1f 93       	push	r17
    1758:	cf 93       	push	r28
    175a:	df 93       	push	r29
    175c:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    175e:	26 2f       	mov	r18, r22
    1760:	30 e0       	ldi	r19, 0x00	; 0
    1762:	49 01       	movw	r8, r18
    1764:	88 0c       	add	r8, r8
    1766:	99 1c       	adc	r9, r9
    1768:	88 0c       	add	r8, r8
    176a:	99 1c       	adc	r9, r9
    176c:	82 0e       	add	r8, r18
    176e:	93 1e       	adc	r9, r19
    1770:	18 14       	cp	r1, r8
    1772:	19 04       	cpc	r1, r9
    1774:	0c f0       	brlt	.+2      	; 0x1778 <nokia_lcd_write_char+0x3a>
    1776:	59 c0       	rjmp	.+178    	; 0x182a <nokia_lcd_write_char+0xec>
		for (y = 0; y < 7*scale; y++)
    1778:	89 01       	movw	r16, r18
    177a:	00 0f       	add	r16, r16
    177c:	11 1f       	adc	r17, r17
    177e:	00 0f       	add	r16, r16
    1780:	11 1f       	adc	r17, r17
    1782:	00 0f       	add	r16, r16
    1784:	11 1f       	adc	r17, r17
    1786:	02 1b       	sub	r16, r18
    1788:	13 0b       	sbc	r17, r19
    178a:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    178c:	a8 2e       	mov	r10, r24
    178e:	b1 2c       	mov	r11, r1
    1790:	c5 01       	movw	r24, r10
    1792:	80 97       	sbiw	r24, 0x20	; 32
    1794:	5c 01       	movw	r10, r24
    1796:	aa 0c       	add	r10, r10
    1798:	bb 1c       	adc	r11, r11
    179a:	aa 0c       	add	r10, r10
    179c:	bb 1c       	adc	r11, r11
    179e:	a8 0e       	add	r10, r24
    17a0:	b9 1e       	adc	r11, r25
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    17a2:	0f 2e       	mov	r0, r31
    17a4:	f2 e0       	ldi	r31, 0x02	; 2
    17a6:	cf 2e       	mov	r12, r31
    17a8:	fd e0       	ldi	r31, 0x0D	; 13
    17aa:	df 2e       	mov	r13, r31
    17ac:	f0 2d       	mov	r31, r0
    17ae:	0f 2e       	mov	r0, r31
    17b0:	f1 e0       	ldi	r31, 0x01	; 1
    17b2:	ef 2e       	mov	r14, r31
    17b4:	fd e0       	ldi	r31, 0x0D	; 13
    17b6:	ff 2e       	mov	r15, r31
    17b8:	f0 2d       	mov	r31, r0
    17ba:	2a c0       	rjmp	.+84     	; 0x1810 <nokia_lcd_write_char+0xd2>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    17bc:	fe 01       	movw	r30, r28
    17be:	24 91       	lpm	r18, Z
    17c0:	30 e0       	ldi	r19, 0x00	; 0
    17c2:	87 2d       	mov	r24, r7
    17c4:	65 2d       	mov	r22, r5
    17c6:	49 d2       	rcall	.+1170   	; 0x1c5a <__udivmodqi4>
    17c8:	02 c0       	rjmp	.+4      	; 0x17ce <nokia_lcd_write_char+0x90>
    17ca:	35 95       	asr	r19
    17cc:	27 95       	ror	r18
    17ce:	8a 95       	dec	r24
    17d0:	e2 f7       	brpl	.-8      	; 0x17ca <nokia_lcd_write_char+0x8c>
    17d2:	20 ff       	sbrs	r18, 0
    17d4:	09 c0       	rjmp	.+18     	; 0x17e8 <nokia_lcd_write_char+0xaa>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
    17d6:	f6 01       	movw	r30, r12
    17d8:	60 81       	ld	r22, Z
    17da:	67 0d       	add	r22, r7
    17dc:	f7 01       	movw	r30, r14
    17de:	80 81       	ld	r24, Z
    17e0:	41 e0       	ldi	r20, 0x01	; 1
    17e2:	86 0d       	add	r24, r6
    17e4:	81 df       	rcall	.-254    	; 0x16e8 <nokia_lcd_set_pixel>
    17e6:	08 c0       	rjmp	.+16     	; 0x17f8 <nokia_lcd_write_char+0xba>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
    17e8:	f6 01       	movw	r30, r12
    17ea:	60 81       	ld	r22, Z
    17ec:	67 0d       	add	r22, r7
    17ee:	f7 01       	movw	r30, r14
    17f0:	80 81       	ld	r24, Z
    17f2:	40 e0       	ldi	r20, 0x00	; 0
    17f4:	86 0d       	add	r24, r6
    17f6:	78 df       	rcall	.-272    	; 0x16e8 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    17f8:	73 94       	inc	r7
    17fa:	87 2d       	mov	r24, r7
    17fc:	90 e0       	ldi	r25, 0x00	; 0
    17fe:	80 17       	cp	r24, r16
    1800:	91 07       	cpc	r25, r17
    1802:	e4 f2       	brlt	.-72     	; 0x17bc <nokia_lcd_write_char+0x7e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    1804:	63 94       	inc	r6
    1806:	86 2d       	mov	r24, r6
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	88 15       	cp	r24, r8
    180c:	99 05       	cpc	r25, r9
    180e:	6c f4       	brge	.+26     	; 0x182a <nokia_lcd_write_char+0xec>
		for (y = 0; y < 7*scale; y++)
    1810:	10 16       	cp	r1, r16
    1812:	11 06       	cpc	r1, r17
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    1814:	bc f7       	brge	.-18     	; 0x1804 <nokia_lcd_write_char+0xc6>
    1816:	86 2d       	mov	r24, r6
    1818:	65 2d       	mov	r22, r5
    181a:	1f d2       	rcall	.+1086   	; 0x1c5a <__udivmodqi4>
    181c:	e5 01       	movw	r28, r10
    181e:	c8 0f       	add	r28, r24
    1820:	d1 1d       	adc	r29, r1
    1822:	c4 57       	subi	r28, 0x74	; 116
    1824:	df 4f       	sbci	r29, 0xFF	; 255
    1826:	71 2c       	mov	r7, r1
    1828:	c9 cf       	rjmp	.-110    	; 0x17bc <nokia_lcd_write_char+0x7e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    182a:	80 91 01 0d 	lds	r24, 0x0D01	; 0x800d01 <nokia_lcd+0x1f8>
    182e:	91 e0       	ldi	r25, 0x01	; 1
    1830:	98 0f       	add	r25, r24
    1832:	85 2d       	mov	r24, r5
    1834:	88 0f       	add	r24, r24
    1836:	88 0f       	add	r24, r24
    1838:	85 0d       	add	r24, r5
    183a:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
    183c:	84 35       	cpi	r24, 0x54	; 84
    183e:	18 f4       	brcc	.+6      	; 0x1846 <nokia_lcd_write_char+0x108>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1840:	80 93 01 0d 	sts	0x0D01, r24	; 0x800d01 <nokia_lcd+0x1f8>
    1844:	0e c0       	rjmp	.+28     	; 0x1862 <nokia_lcd_write_char+0x124>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
    1846:	10 92 01 0d 	sts	0x0D01, r1	; 0x800d01 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    184a:	e2 e0       	ldi	r30, 0x02	; 2
    184c:	fd e0       	ldi	r31, 0x0D	; 13
    184e:	80 81       	ld	r24, Z
    1850:	91 e0       	ldi	r25, 0x01	; 1
    1852:	98 0f       	add	r25, r24
    1854:	85 2d       	mov	r24, r5
    1856:	88 0f       	add	r24, r24
    1858:	88 0f       	add	r24, r24
    185a:	88 0f       	add	r24, r24
    185c:	85 19       	sub	r24, r5
    185e:	89 0f       	add	r24, r25
    1860:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
    1862:	80 91 02 0d 	lds	r24, 0x0D02	; 0x800d02 <nokia_lcd+0x1f9>
    1866:	80 33       	cpi	r24, 0x30	; 48
    1868:	20 f0       	brcs	.+8      	; 0x1872 <nokia_lcd_write_char+0x134>
		nokia_lcd.cursor_x = 0;
    186a:	10 92 01 0d 	sts	0x0D01, r1	; 0x800d01 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    186e:	10 92 02 0d 	sts	0x0D02, r1	; 0x800d02 <nokia_lcd+0x1f9>
	}
}
    1872:	df 91       	pop	r29
    1874:	cf 91       	pop	r28
    1876:	1f 91       	pop	r17
    1878:	0f 91       	pop	r16
    187a:	ff 90       	pop	r15
    187c:	ef 90       	pop	r14
    187e:	df 90       	pop	r13
    1880:	cf 90       	pop	r12
    1882:	bf 90       	pop	r11
    1884:	af 90       	pop	r10
    1886:	9f 90       	pop	r9
    1888:	8f 90       	pop	r8
    188a:	7f 90       	pop	r7
    188c:	6f 90       	pop	r6
    188e:	5f 90       	pop	r5
    1890:	08 95       	ret

00001892 <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    1892:	1f 93       	push	r17
    1894:	cf 93       	push	r28
    1896:	df 93       	push	r29
    1898:	ec 01       	movw	r28, r24
	while(*str)
    189a:	88 81       	ld	r24, Y
    189c:	88 23       	and	r24, r24
    189e:	39 f0       	breq	.+14     	; 0x18ae <nokia_lcd_write_string+0x1c>
    18a0:	16 2f       	mov	r17, r22
    18a2:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
    18a4:	61 2f       	mov	r22, r17
    18a6:	4b df       	rcall	.-362    	; 0x173e <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    18a8:	89 91       	ld	r24, Y+
    18aa:	81 11       	cpse	r24, r1
    18ac:	fb cf       	rjmp	.-10     	; 0x18a4 <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
    18ae:	df 91       	pop	r29
    18b0:	cf 91       	pop	r28
    18b2:	1f 91       	pop	r17
    18b4:	08 95       	ret

000018b6 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
    18b6:	80 93 01 0d 	sts	0x0D01, r24	; 0x800d01 <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    18ba:	60 93 02 0d 	sts	0x0D02, r22	; 0x800d02 <nokia_lcd+0x1f9>
    18be:	08 95       	ret

000018c0 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
    18c0:	0f 93       	push	r16
    18c2:	1f 93       	push	r17
    18c4:	cf 93       	push	r28
    18c6:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    18c8:	80 e8       	ldi	r24, 0x80	; 128
    18ca:	c4 de       	rcall	.-632    	; 0x1654 <write_cmd>
	write_cmd(0x40);
    18cc:	80 e4       	ldi	r24, 0x40	; 64
    18ce:	c2 de       	rcall	.-636    	; 0x1654 <write_cmd>
    18d0:	c9 e0       	ldi	r28, 0x09	; 9
    18d2:	db e0       	ldi	r29, 0x0B	; 11
    18d4:	01 e0       	ldi	r16, 0x01	; 1
    18d6:	1d e0       	ldi	r17, 0x0D	; 13
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
    18d8:	61 e0       	ldi	r22, 0x01	; 1
    18da:	89 91       	ld	r24, Y+
    18dc:	9d de       	rcall	.-710    	; 0x1618 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    18de:	c0 17       	cp	r28, r16
    18e0:	d1 07       	cpc	r29, r17
    18e2:	d1 f7       	brne	.-12     	; 0x18d8 <nokia_lcd_render+0x18>
		write_data(nokia_lcd.screen[i]);
}
    18e4:	df 91       	pop	r29
    18e6:	cf 91       	pop	r28
    18e8:	1f 91       	pop	r17
    18ea:	0f 91       	pop	r16
    18ec:	08 95       	ret

000018ee <__cmpsf2>:
    18ee:	d9 d0       	rcall	.+434    	; 0x1aa2 <__fp_cmp>
    18f0:	08 f4       	brcc	.+2      	; 0x18f4 <__cmpsf2+0x6>
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	08 95       	ret

000018f6 <__divsf3>:
    18f6:	0c d0       	rcall	.+24     	; 0x1910 <__divsf3x>
    18f8:	0f c1       	rjmp	.+542    	; 0x1b18 <__fp_round>
    18fa:	07 d1       	rcall	.+526    	; 0x1b0a <__fp_pscB>
    18fc:	40 f0       	brcs	.+16     	; 0x190e <__divsf3+0x18>
    18fe:	fe d0       	rcall	.+508    	; 0x1afc <__fp_pscA>
    1900:	30 f0       	brcs	.+12     	; 0x190e <__divsf3+0x18>
    1902:	21 f4       	brne	.+8      	; 0x190c <__divsf3+0x16>
    1904:	5f 3f       	cpi	r21, 0xFF	; 255
    1906:	19 f0       	breq	.+6      	; 0x190e <__divsf3+0x18>
    1908:	f0 c0       	rjmp	.+480    	; 0x1aea <__fp_inf>
    190a:	51 11       	cpse	r21, r1
    190c:	39 c1       	rjmp	.+626    	; 0x1b80 <__fp_szero>
    190e:	f3 c0       	rjmp	.+486    	; 0x1af6 <__fp_nan>

00001910 <__divsf3x>:
    1910:	14 d1       	rcall	.+552    	; 0x1b3a <__fp_split3>
    1912:	98 f3       	brcs	.-26     	; 0x18fa <__divsf3+0x4>

00001914 <__divsf3_pse>:
    1914:	99 23       	and	r25, r25
    1916:	c9 f3       	breq	.-14     	; 0x190a <__divsf3+0x14>
    1918:	55 23       	and	r21, r21
    191a:	b1 f3       	breq	.-20     	; 0x1908 <__divsf3+0x12>
    191c:	95 1b       	sub	r25, r21
    191e:	55 0b       	sbc	r21, r21
    1920:	bb 27       	eor	r27, r27
    1922:	aa 27       	eor	r26, r26
    1924:	62 17       	cp	r22, r18
    1926:	73 07       	cpc	r23, r19
    1928:	84 07       	cpc	r24, r20
    192a:	38 f0       	brcs	.+14     	; 0x193a <__divsf3_pse+0x26>
    192c:	9f 5f       	subi	r25, 0xFF	; 255
    192e:	5f 4f       	sbci	r21, 0xFF	; 255
    1930:	22 0f       	add	r18, r18
    1932:	33 1f       	adc	r19, r19
    1934:	44 1f       	adc	r20, r20
    1936:	aa 1f       	adc	r26, r26
    1938:	a9 f3       	breq	.-22     	; 0x1924 <__divsf3_pse+0x10>
    193a:	33 d0       	rcall	.+102    	; 0x19a2 <__divsf3_pse+0x8e>
    193c:	0e 2e       	mov	r0, r30
    193e:	3a f0       	brmi	.+14     	; 0x194e <__divsf3_pse+0x3a>
    1940:	e0 e8       	ldi	r30, 0x80	; 128
    1942:	30 d0       	rcall	.+96     	; 0x19a4 <__divsf3_pse+0x90>
    1944:	91 50       	subi	r25, 0x01	; 1
    1946:	50 40       	sbci	r21, 0x00	; 0
    1948:	e6 95       	lsr	r30
    194a:	00 1c       	adc	r0, r0
    194c:	ca f7       	brpl	.-14     	; 0x1940 <__divsf3_pse+0x2c>
    194e:	29 d0       	rcall	.+82     	; 0x19a2 <__divsf3_pse+0x8e>
    1950:	fe 2f       	mov	r31, r30
    1952:	27 d0       	rcall	.+78     	; 0x19a2 <__divsf3_pse+0x8e>
    1954:	66 0f       	add	r22, r22
    1956:	77 1f       	adc	r23, r23
    1958:	88 1f       	adc	r24, r24
    195a:	bb 1f       	adc	r27, r27
    195c:	26 17       	cp	r18, r22
    195e:	37 07       	cpc	r19, r23
    1960:	48 07       	cpc	r20, r24
    1962:	ab 07       	cpc	r26, r27
    1964:	b0 e8       	ldi	r27, 0x80	; 128
    1966:	09 f0       	breq	.+2      	; 0x196a <__divsf3_pse+0x56>
    1968:	bb 0b       	sbc	r27, r27
    196a:	80 2d       	mov	r24, r0
    196c:	bf 01       	movw	r22, r30
    196e:	ff 27       	eor	r31, r31
    1970:	93 58       	subi	r25, 0x83	; 131
    1972:	5f 4f       	sbci	r21, 0xFF	; 255
    1974:	2a f0       	brmi	.+10     	; 0x1980 <__divsf3_pse+0x6c>
    1976:	9e 3f       	cpi	r25, 0xFE	; 254
    1978:	51 05       	cpc	r21, r1
    197a:	68 f0       	brcs	.+26     	; 0x1996 <__divsf3_pse+0x82>
    197c:	b6 c0       	rjmp	.+364    	; 0x1aea <__fp_inf>
    197e:	00 c1       	rjmp	.+512    	; 0x1b80 <__fp_szero>
    1980:	5f 3f       	cpi	r21, 0xFF	; 255
    1982:	ec f3       	brlt	.-6      	; 0x197e <__divsf3_pse+0x6a>
    1984:	98 3e       	cpi	r25, 0xE8	; 232
    1986:	dc f3       	brlt	.-10     	; 0x197e <__divsf3_pse+0x6a>
    1988:	86 95       	lsr	r24
    198a:	77 95       	ror	r23
    198c:	67 95       	ror	r22
    198e:	b7 95       	ror	r27
    1990:	f7 95       	ror	r31
    1992:	9f 5f       	subi	r25, 0xFF	; 255
    1994:	c9 f7       	brne	.-14     	; 0x1988 <__divsf3_pse+0x74>
    1996:	88 0f       	add	r24, r24
    1998:	91 1d       	adc	r25, r1
    199a:	96 95       	lsr	r25
    199c:	87 95       	ror	r24
    199e:	97 f9       	bld	r25, 7
    19a0:	08 95       	ret
    19a2:	e1 e0       	ldi	r30, 0x01	; 1
    19a4:	66 0f       	add	r22, r22
    19a6:	77 1f       	adc	r23, r23
    19a8:	88 1f       	adc	r24, r24
    19aa:	bb 1f       	adc	r27, r27
    19ac:	62 17       	cp	r22, r18
    19ae:	73 07       	cpc	r23, r19
    19b0:	84 07       	cpc	r24, r20
    19b2:	ba 07       	cpc	r27, r26
    19b4:	20 f0       	brcs	.+8      	; 0x19be <__divsf3_pse+0xaa>
    19b6:	62 1b       	sub	r22, r18
    19b8:	73 0b       	sbc	r23, r19
    19ba:	84 0b       	sbc	r24, r20
    19bc:	ba 0b       	sbc	r27, r26
    19be:	ee 1f       	adc	r30, r30
    19c0:	88 f7       	brcc	.-30     	; 0x19a4 <__divsf3_pse+0x90>
    19c2:	e0 95       	com	r30
    19c4:	08 95       	ret

000019c6 <__fixsfsi>:
    19c6:	04 d0       	rcall	.+8      	; 0x19d0 <__fixunssfsi>
    19c8:	68 94       	set
    19ca:	b1 11       	cpse	r27, r1
    19cc:	d9 c0       	rjmp	.+434    	; 0x1b80 <__fp_szero>
    19ce:	08 95       	ret

000019d0 <__fixunssfsi>:
    19d0:	bc d0       	rcall	.+376    	; 0x1b4a <__fp_splitA>
    19d2:	88 f0       	brcs	.+34     	; 0x19f6 <__fixunssfsi+0x26>
    19d4:	9f 57       	subi	r25, 0x7F	; 127
    19d6:	90 f0       	brcs	.+36     	; 0x19fc <__fixunssfsi+0x2c>
    19d8:	b9 2f       	mov	r27, r25
    19da:	99 27       	eor	r25, r25
    19dc:	b7 51       	subi	r27, 0x17	; 23
    19de:	a0 f0       	brcs	.+40     	; 0x1a08 <__fixunssfsi+0x38>
    19e0:	d1 f0       	breq	.+52     	; 0x1a16 <__fixunssfsi+0x46>
    19e2:	66 0f       	add	r22, r22
    19e4:	77 1f       	adc	r23, r23
    19e6:	88 1f       	adc	r24, r24
    19e8:	99 1f       	adc	r25, r25
    19ea:	1a f0       	brmi	.+6      	; 0x19f2 <__fixunssfsi+0x22>
    19ec:	ba 95       	dec	r27
    19ee:	c9 f7       	brne	.-14     	; 0x19e2 <__fixunssfsi+0x12>
    19f0:	12 c0       	rjmp	.+36     	; 0x1a16 <__fixunssfsi+0x46>
    19f2:	b1 30       	cpi	r27, 0x01	; 1
    19f4:	81 f0       	breq	.+32     	; 0x1a16 <__fixunssfsi+0x46>
    19f6:	c3 d0       	rcall	.+390    	; 0x1b7e <__fp_zero>
    19f8:	b1 e0       	ldi	r27, 0x01	; 1
    19fa:	08 95       	ret
    19fc:	c0 c0       	rjmp	.+384    	; 0x1b7e <__fp_zero>
    19fe:	67 2f       	mov	r22, r23
    1a00:	78 2f       	mov	r23, r24
    1a02:	88 27       	eor	r24, r24
    1a04:	b8 5f       	subi	r27, 0xF8	; 248
    1a06:	39 f0       	breq	.+14     	; 0x1a16 <__fixunssfsi+0x46>
    1a08:	b9 3f       	cpi	r27, 0xF9	; 249
    1a0a:	cc f3       	brlt	.-14     	; 0x19fe <__fixunssfsi+0x2e>
    1a0c:	86 95       	lsr	r24
    1a0e:	77 95       	ror	r23
    1a10:	67 95       	ror	r22
    1a12:	b3 95       	inc	r27
    1a14:	d9 f7       	brne	.-10     	; 0x1a0c <__fixunssfsi+0x3c>
    1a16:	3e f4       	brtc	.+14     	; 0x1a26 <__fixunssfsi+0x56>
    1a18:	90 95       	com	r25
    1a1a:	80 95       	com	r24
    1a1c:	70 95       	com	r23
    1a1e:	61 95       	neg	r22
    1a20:	7f 4f       	sbci	r23, 0xFF	; 255
    1a22:	8f 4f       	sbci	r24, 0xFF	; 255
    1a24:	9f 4f       	sbci	r25, 0xFF	; 255
    1a26:	08 95       	ret

00001a28 <__floatunsisf>:
    1a28:	e8 94       	clt
    1a2a:	09 c0       	rjmp	.+18     	; 0x1a3e <__floatsisf+0x12>

00001a2c <__floatsisf>:
    1a2c:	97 fb       	bst	r25, 7
    1a2e:	3e f4       	brtc	.+14     	; 0x1a3e <__floatsisf+0x12>
    1a30:	90 95       	com	r25
    1a32:	80 95       	com	r24
    1a34:	70 95       	com	r23
    1a36:	61 95       	neg	r22
    1a38:	7f 4f       	sbci	r23, 0xFF	; 255
    1a3a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a3c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a3e:	99 23       	and	r25, r25
    1a40:	a9 f0       	breq	.+42     	; 0x1a6c <__floatsisf+0x40>
    1a42:	f9 2f       	mov	r31, r25
    1a44:	96 e9       	ldi	r25, 0x96	; 150
    1a46:	bb 27       	eor	r27, r27
    1a48:	93 95       	inc	r25
    1a4a:	f6 95       	lsr	r31
    1a4c:	87 95       	ror	r24
    1a4e:	77 95       	ror	r23
    1a50:	67 95       	ror	r22
    1a52:	b7 95       	ror	r27
    1a54:	f1 11       	cpse	r31, r1
    1a56:	f8 cf       	rjmp	.-16     	; 0x1a48 <__floatsisf+0x1c>
    1a58:	fa f4       	brpl	.+62     	; 0x1a98 <__floatsisf+0x6c>
    1a5a:	bb 0f       	add	r27, r27
    1a5c:	11 f4       	brne	.+4      	; 0x1a62 <__floatsisf+0x36>
    1a5e:	60 ff       	sbrs	r22, 0
    1a60:	1b c0       	rjmp	.+54     	; 0x1a98 <__floatsisf+0x6c>
    1a62:	6f 5f       	subi	r22, 0xFF	; 255
    1a64:	7f 4f       	sbci	r23, 0xFF	; 255
    1a66:	8f 4f       	sbci	r24, 0xFF	; 255
    1a68:	9f 4f       	sbci	r25, 0xFF	; 255
    1a6a:	16 c0       	rjmp	.+44     	; 0x1a98 <__floatsisf+0x6c>
    1a6c:	88 23       	and	r24, r24
    1a6e:	11 f0       	breq	.+4      	; 0x1a74 <__floatsisf+0x48>
    1a70:	96 e9       	ldi	r25, 0x96	; 150
    1a72:	11 c0       	rjmp	.+34     	; 0x1a96 <__floatsisf+0x6a>
    1a74:	77 23       	and	r23, r23
    1a76:	21 f0       	breq	.+8      	; 0x1a80 <__floatsisf+0x54>
    1a78:	9e e8       	ldi	r25, 0x8E	; 142
    1a7a:	87 2f       	mov	r24, r23
    1a7c:	76 2f       	mov	r23, r22
    1a7e:	05 c0       	rjmp	.+10     	; 0x1a8a <__floatsisf+0x5e>
    1a80:	66 23       	and	r22, r22
    1a82:	71 f0       	breq	.+28     	; 0x1aa0 <__floatsisf+0x74>
    1a84:	96 e8       	ldi	r25, 0x86	; 134
    1a86:	86 2f       	mov	r24, r22
    1a88:	70 e0       	ldi	r23, 0x00	; 0
    1a8a:	60 e0       	ldi	r22, 0x00	; 0
    1a8c:	2a f0       	brmi	.+10     	; 0x1a98 <__floatsisf+0x6c>
    1a8e:	9a 95       	dec	r25
    1a90:	66 0f       	add	r22, r22
    1a92:	77 1f       	adc	r23, r23
    1a94:	88 1f       	adc	r24, r24
    1a96:	da f7       	brpl	.-10     	; 0x1a8e <__floatsisf+0x62>
    1a98:	88 0f       	add	r24, r24
    1a9a:	96 95       	lsr	r25
    1a9c:	87 95       	ror	r24
    1a9e:	97 f9       	bld	r25, 7
    1aa0:	08 95       	ret

00001aa2 <__fp_cmp>:
    1aa2:	99 0f       	add	r25, r25
    1aa4:	00 08       	sbc	r0, r0
    1aa6:	55 0f       	add	r21, r21
    1aa8:	aa 0b       	sbc	r26, r26
    1aaa:	e0 e8       	ldi	r30, 0x80	; 128
    1aac:	fe ef       	ldi	r31, 0xFE	; 254
    1aae:	16 16       	cp	r1, r22
    1ab0:	17 06       	cpc	r1, r23
    1ab2:	e8 07       	cpc	r30, r24
    1ab4:	f9 07       	cpc	r31, r25
    1ab6:	c0 f0       	brcs	.+48     	; 0x1ae8 <__fp_cmp+0x46>
    1ab8:	12 16       	cp	r1, r18
    1aba:	13 06       	cpc	r1, r19
    1abc:	e4 07       	cpc	r30, r20
    1abe:	f5 07       	cpc	r31, r21
    1ac0:	98 f0       	brcs	.+38     	; 0x1ae8 <__fp_cmp+0x46>
    1ac2:	62 1b       	sub	r22, r18
    1ac4:	73 0b       	sbc	r23, r19
    1ac6:	84 0b       	sbc	r24, r20
    1ac8:	95 0b       	sbc	r25, r21
    1aca:	39 f4       	brne	.+14     	; 0x1ada <__fp_cmp+0x38>
    1acc:	0a 26       	eor	r0, r26
    1ace:	61 f0       	breq	.+24     	; 0x1ae8 <__fp_cmp+0x46>
    1ad0:	23 2b       	or	r18, r19
    1ad2:	24 2b       	or	r18, r20
    1ad4:	25 2b       	or	r18, r21
    1ad6:	21 f4       	brne	.+8      	; 0x1ae0 <__fp_cmp+0x3e>
    1ad8:	08 95       	ret
    1ada:	0a 26       	eor	r0, r26
    1adc:	09 f4       	brne	.+2      	; 0x1ae0 <__fp_cmp+0x3e>
    1ade:	a1 40       	sbci	r26, 0x01	; 1
    1ae0:	a6 95       	lsr	r26
    1ae2:	8f ef       	ldi	r24, 0xFF	; 255
    1ae4:	81 1d       	adc	r24, r1
    1ae6:	81 1d       	adc	r24, r1
    1ae8:	08 95       	ret

00001aea <__fp_inf>:
    1aea:	97 f9       	bld	r25, 7
    1aec:	9f 67       	ori	r25, 0x7F	; 127
    1aee:	80 e8       	ldi	r24, 0x80	; 128
    1af0:	70 e0       	ldi	r23, 0x00	; 0
    1af2:	60 e0       	ldi	r22, 0x00	; 0
    1af4:	08 95       	ret

00001af6 <__fp_nan>:
    1af6:	9f ef       	ldi	r25, 0xFF	; 255
    1af8:	80 ec       	ldi	r24, 0xC0	; 192
    1afa:	08 95       	ret

00001afc <__fp_pscA>:
    1afc:	00 24       	eor	r0, r0
    1afe:	0a 94       	dec	r0
    1b00:	16 16       	cp	r1, r22
    1b02:	17 06       	cpc	r1, r23
    1b04:	18 06       	cpc	r1, r24
    1b06:	09 06       	cpc	r0, r25
    1b08:	08 95       	ret

00001b0a <__fp_pscB>:
    1b0a:	00 24       	eor	r0, r0
    1b0c:	0a 94       	dec	r0
    1b0e:	12 16       	cp	r1, r18
    1b10:	13 06       	cpc	r1, r19
    1b12:	14 06       	cpc	r1, r20
    1b14:	05 06       	cpc	r0, r21
    1b16:	08 95       	ret

00001b18 <__fp_round>:
    1b18:	09 2e       	mov	r0, r25
    1b1a:	03 94       	inc	r0
    1b1c:	00 0c       	add	r0, r0
    1b1e:	11 f4       	brne	.+4      	; 0x1b24 <__fp_round+0xc>
    1b20:	88 23       	and	r24, r24
    1b22:	52 f0       	brmi	.+20     	; 0x1b38 <__fp_round+0x20>
    1b24:	bb 0f       	add	r27, r27
    1b26:	40 f4       	brcc	.+16     	; 0x1b38 <__fp_round+0x20>
    1b28:	bf 2b       	or	r27, r31
    1b2a:	11 f4       	brne	.+4      	; 0x1b30 <__fp_round+0x18>
    1b2c:	60 ff       	sbrs	r22, 0
    1b2e:	04 c0       	rjmp	.+8      	; 0x1b38 <__fp_round+0x20>
    1b30:	6f 5f       	subi	r22, 0xFF	; 255
    1b32:	7f 4f       	sbci	r23, 0xFF	; 255
    1b34:	8f 4f       	sbci	r24, 0xFF	; 255
    1b36:	9f 4f       	sbci	r25, 0xFF	; 255
    1b38:	08 95       	ret

00001b3a <__fp_split3>:
    1b3a:	57 fd       	sbrc	r21, 7
    1b3c:	90 58       	subi	r25, 0x80	; 128
    1b3e:	44 0f       	add	r20, r20
    1b40:	55 1f       	adc	r21, r21
    1b42:	59 f0       	breq	.+22     	; 0x1b5a <__fp_splitA+0x10>
    1b44:	5f 3f       	cpi	r21, 0xFF	; 255
    1b46:	71 f0       	breq	.+28     	; 0x1b64 <__fp_splitA+0x1a>
    1b48:	47 95       	ror	r20

00001b4a <__fp_splitA>:
    1b4a:	88 0f       	add	r24, r24
    1b4c:	97 fb       	bst	r25, 7
    1b4e:	99 1f       	adc	r25, r25
    1b50:	61 f0       	breq	.+24     	; 0x1b6a <__fp_splitA+0x20>
    1b52:	9f 3f       	cpi	r25, 0xFF	; 255
    1b54:	79 f0       	breq	.+30     	; 0x1b74 <__fp_splitA+0x2a>
    1b56:	87 95       	ror	r24
    1b58:	08 95       	ret
    1b5a:	12 16       	cp	r1, r18
    1b5c:	13 06       	cpc	r1, r19
    1b5e:	14 06       	cpc	r1, r20
    1b60:	55 1f       	adc	r21, r21
    1b62:	f2 cf       	rjmp	.-28     	; 0x1b48 <__fp_split3+0xe>
    1b64:	46 95       	lsr	r20
    1b66:	f1 df       	rcall	.-30     	; 0x1b4a <__fp_splitA>
    1b68:	08 c0       	rjmp	.+16     	; 0x1b7a <__fp_splitA+0x30>
    1b6a:	16 16       	cp	r1, r22
    1b6c:	17 06       	cpc	r1, r23
    1b6e:	18 06       	cpc	r1, r24
    1b70:	99 1f       	adc	r25, r25
    1b72:	f1 cf       	rjmp	.-30     	; 0x1b56 <__fp_splitA+0xc>
    1b74:	86 95       	lsr	r24
    1b76:	71 05       	cpc	r23, r1
    1b78:	61 05       	cpc	r22, r1
    1b7a:	08 94       	sec
    1b7c:	08 95       	ret

00001b7e <__fp_zero>:
    1b7e:	e8 94       	clt

00001b80 <__fp_szero>:
    1b80:	bb 27       	eor	r27, r27
    1b82:	66 27       	eor	r22, r22
    1b84:	77 27       	eor	r23, r23
    1b86:	cb 01       	movw	r24, r22
    1b88:	97 f9       	bld	r25, 7
    1b8a:	08 95       	ret

00001b8c <__gesf2>:
    1b8c:	8a df       	rcall	.-236    	; 0x1aa2 <__fp_cmp>
    1b8e:	08 f4       	brcc	.+2      	; 0x1b92 <__gesf2+0x6>
    1b90:	8f ef       	ldi	r24, 0xFF	; 255
    1b92:	08 95       	ret

00001b94 <__mulsf3>:
    1b94:	0b d0       	rcall	.+22     	; 0x1bac <__mulsf3x>
    1b96:	c0 cf       	rjmp	.-128    	; 0x1b18 <__fp_round>
    1b98:	b1 df       	rcall	.-158    	; 0x1afc <__fp_pscA>
    1b9a:	28 f0       	brcs	.+10     	; 0x1ba6 <__mulsf3+0x12>
    1b9c:	b6 df       	rcall	.-148    	; 0x1b0a <__fp_pscB>
    1b9e:	18 f0       	brcs	.+6      	; 0x1ba6 <__mulsf3+0x12>
    1ba0:	95 23       	and	r25, r21
    1ba2:	09 f0       	breq	.+2      	; 0x1ba6 <__mulsf3+0x12>
    1ba4:	a2 cf       	rjmp	.-188    	; 0x1aea <__fp_inf>
    1ba6:	a7 cf       	rjmp	.-178    	; 0x1af6 <__fp_nan>
    1ba8:	11 24       	eor	r1, r1
    1baa:	ea cf       	rjmp	.-44     	; 0x1b80 <__fp_szero>

00001bac <__mulsf3x>:
    1bac:	c6 df       	rcall	.-116    	; 0x1b3a <__fp_split3>
    1bae:	a0 f3       	brcs	.-24     	; 0x1b98 <__mulsf3+0x4>

00001bb0 <__mulsf3_pse>:
    1bb0:	95 9f       	mul	r25, r21
    1bb2:	d1 f3       	breq	.-12     	; 0x1ba8 <__mulsf3+0x14>
    1bb4:	95 0f       	add	r25, r21
    1bb6:	50 e0       	ldi	r21, 0x00	; 0
    1bb8:	55 1f       	adc	r21, r21
    1bba:	62 9f       	mul	r22, r18
    1bbc:	f0 01       	movw	r30, r0
    1bbe:	72 9f       	mul	r23, r18
    1bc0:	bb 27       	eor	r27, r27
    1bc2:	f0 0d       	add	r31, r0
    1bc4:	b1 1d       	adc	r27, r1
    1bc6:	63 9f       	mul	r22, r19
    1bc8:	aa 27       	eor	r26, r26
    1bca:	f0 0d       	add	r31, r0
    1bcc:	b1 1d       	adc	r27, r1
    1bce:	aa 1f       	adc	r26, r26
    1bd0:	64 9f       	mul	r22, r20
    1bd2:	66 27       	eor	r22, r22
    1bd4:	b0 0d       	add	r27, r0
    1bd6:	a1 1d       	adc	r26, r1
    1bd8:	66 1f       	adc	r22, r22
    1bda:	82 9f       	mul	r24, r18
    1bdc:	22 27       	eor	r18, r18
    1bde:	b0 0d       	add	r27, r0
    1be0:	a1 1d       	adc	r26, r1
    1be2:	62 1f       	adc	r22, r18
    1be4:	73 9f       	mul	r23, r19
    1be6:	b0 0d       	add	r27, r0
    1be8:	a1 1d       	adc	r26, r1
    1bea:	62 1f       	adc	r22, r18
    1bec:	83 9f       	mul	r24, r19
    1bee:	a0 0d       	add	r26, r0
    1bf0:	61 1d       	adc	r22, r1
    1bf2:	22 1f       	adc	r18, r18
    1bf4:	74 9f       	mul	r23, r20
    1bf6:	33 27       	eor	r19, r19
    1bf8:	a0 0d       	add	r26, r0
    1bfa:	61 1d       	adc	r22, r1
    1bfc:	23 1f       	adc	r18, r19
    1bfe:	84 9f       	mul	r24, r20
    1c00:	60 0d       	add	r22, r0
    1c02:	21 1d       	adc	r18, r1
    1c04:	82 2f       	mov	r24, r18
    1c06:	76 2f       	mov	r23, r22
    1c08:	6a 2f       	mov	r22, r26
    1c0a:	11 24       	eor	r1, r1
    1c0c:	9f 57       	subi	r25, 0x7F	; 127
    1c0e:	50 40       	sbci	r21, 0x00	; 0
    1c10:	8a f0       	brmi	.+34     	; 0x1c34 <__mulsf3_pse+0x84>
    1c12:	e1 f0       	breq	.+56     	; 0x1c4c <__mulsf3_pse+0x9c>
    1c14:	88 23       	and	r24, r24
    1c16:	4a f0       	brmi	.+18     	; 0x1c2a <__mulsf3_pse+0x7a>
    1c18:	ee 0f       	add	r30, r30
    1c1a:	ff 1f       	adc	r31, r31
    1c1c:	bb 1f       	adc	r27, r27
    1c1e:	66 1f       	adc	r22, r22
    1c20:	77 1f       	adc	r23, r23
    1c22:	88 1f       	adc	r24, r24
    1c24:	91 50       	subi	r25, 0x01	; 1
    1c26:	50 40       	sbci	r21, 0x00	; 0
    1c28:	a9 f7       	brne	.-22     	; 0x1c14 <__mulsf3_pse+0x64>
    1c2a:	9e 3f       	cpi	r25, 0xFE	; 254
    1c2c:	51 05       	cpc	r21, r1
    1c2e:	70 f0       	brcs	.+28     	; 0x1c4c <__mulsf3_pse+0x9c>
    1c30:	5c cf       	rjmp	.-328    	; 0x1aea <__fp_inf>
    1c32:	a6 cf       	rjmp	.-180    	; 0x1b80 <__fp_szero>
    1c34:	5f 3f       	cpi	r21, 0xFF	; 255
    1c36:	ec f3       	brlt	.-6      	; 0x1c32 <__mulsf3_pse+0x82>
    1c38:	98 3e       	cpi	r25, 0xE8	; 232
    1c3a:	dc f3       	brlt	.-10     	; 0x1c32 <__mulsf3_pse+0x82>
    1c3c:	86 95       	lsr	r24
    1c3e:	77 95       	ror	r23
    1c40:	67 95       	ror	r22
    1c42:	b7 95       	ror	r27
    1c44:	f7 95       	ror	r31
    1c46:	e7 95       	ror	r30
    1c48:	9f 5f       	subi	r25, 0xFF	; 255
    1c4a:	c1 f7       	brne	.-16     	; 0x1c3c <__mulsf3_pse+0x8c>
    1c4c:	fe 2b       	or	r31, r30
    1c4e:	88 0f       	add	r24, r24
    1c50:	91 1d       	adc	r25, r1
    1c52:	96 95       	lsr	r25
    1c54:	87 95       	ror	r24
    1c56:	97 f9       	bld	r25, 7
    1c58:	08 95       	ret

00001c5a <__udivmodqi4>:
    1c5a:	99 1b       	sub	r25, r25
    1c5c:	79 e0       	ldi	r23, 0x09	; 9
    1c5e:	04 c0       	rjmp	.+8      	; 0x1c68 <__udivmodqi4_ep>

00001c60 <__udivmodqi4_loop>:
    1c60:	99 1f       	adc	r25, r25
    1c62:	96 17       	cp	r25, r22
    1c64:	08 f0       	brcs	.+2      	; 0x1c68 <__udivmodqi4_ep>
    1c66:	96 1b       	sub	r25, r22

00001c68 <__udivmodqi4_ep>:
    1c68:	88 1f       	adc	r24, r24
    1c6a:	7a 95       	dec	r23
    1c6c:	c9 f7       	brne	.-14     	; 0x1c60 <__udivmodqi4_loop>
    1c6e:	80 95       	com	r24
    1c70:	08 95       	ret

00001c72 <_exit>:
    1c72:	f8 94       	cli

00001c74 <__stop_program>:
    1c74:	ff cf       	rjmp	.-2      	; 0x1c74 <__stop_program>
